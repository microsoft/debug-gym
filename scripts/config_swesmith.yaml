base:
    # Environment configs
    output_path: "exps/swesmith"
    benchmark: "swesmith"
    problems: "all"  # list of problems, e.g., ["astropy__astropy-12907"], or strings like "test-125" (defined in gym/envs/configs), or "all",
    env_kwargs: {
        "dir_tree_depth": 1,
        "run_timeout": 300,
        "dataset_id": "SWE-bench/SWE-smith",

        # shortcut features
        "auto_eval_on_rewrite": False,  # If True, the environment will automatically call the Eval tool after a successful rewrite. If this is set to True, the agent does not need to call the Eval tool itself.
        "show_current_breakpoints": False,  # If True, the environment will automatically show the current breakpoints at every step in the system prompt.
        "show_directory_tree": True,  # If set to True, the environment will show the directory tree in the system prompt.
        "persistent_breakpoints": True,  # If True, the environemnt will keep a set of breakpoint states across PDB sessions. When a new PDB session is started, the environment will automatically load the breakpoints from the previous session.
        "auto_list": True,  # If True, the environment will automatically call `list .` via the PDB tool after every pdb tool call, which will show the code around the current frame.
    }
    terminal: {
        type: "docker",
    }

    # LLM configs
    llm_name: "gpt-4o"

    # Agent configs
    random_seed: 42
    max_steps: 50
    max_rewrite_steps: 10
    memory_size: 20
    save_patch: True
    reset_prompt_history_after_rewrite: True
    # Optionally loads a custom system prompt template from a file.
    # system_prompt_template_file: "script/templates/system_prompt.jinja"

rewrite_agent:
    tools: ["view", "rewrite", "listdir", "eval"]

debug_agent:
    tools: ["pdb", "view", "rewrite", "listdir", "eval"]

debug_5_agent:
    n_rewrites_before_pdb: 5
    tools: ["pdb", "view", "rewrite", "listdir", "eval"]

solution_agent:
    llm_name: "human"  # No need for an LLM.
    tools: ["eval", "pdb"]
