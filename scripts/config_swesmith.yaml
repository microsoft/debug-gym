base:
    # Environment configs
    output_path: "exps/swesmith"
    benchmark: "swesmith"
    problems: ['burnash__gspread.a8be3b96.lm_rewrite__596cni6x', 'pexpect__ptyprocess.1067dbda.func_pm_ctrl_invert_if__6d2vg005', 'marshmallow-code__marshmallow.9716fc62.func_pm_op_change__tb22yfgv', 'sunpy__sunpy.f8edfd5c.func_pm_ctrl_invert_if__0ba7h4uf', 'jsvine__pdfplumber.02ff4313.func_pm_op_break_chains__azriwwu6', 'pytest-dev__iniconfig.16793ead.func_pm_op_change__5x1h83zg', 'benoitc__gunicorn.bacbf8aa.func_pm_class_rm_base__0xxhg27x', 'tweepy__tweepy.91a41c6e.func_pm_class_rm_base__10blxnf7', 'borntyping__python-colorlog.dfa10f59.lm_rewrite__7enf7xmd', 'python__mypy.e93f06ce.pr_10036', 'encode__starlette.db5063c2.lm_rewrite__12xv5ppk', 'modin-project__modin.8c7799fd.lm_rewrite__8wxce6gf', 'jd__tenacity.0d40e76f.pr_406', 'datamade__usaddress.a42a8f0c.func_pm_remove_assign__y0jijrlk', 'sqlfluff__sqlfluff.50a1c4b6.lm_rewrite__cupu2wpp', 'mahmoud__glom.fb3c4e76.pr_262', 'borntyping__python-colorlog.dfa10f59.func_pm_class_rm_base__8anh0pe1', 'cantools__cantools.0c6a7871.pr_602', 'seperman__deepdiff.ed252022.combine_file__1gus4sew', 'rubik__radon.54b88e58.func_pm_class_rm_base__13uu1zp4', 'benoitc__gunicorn.bacbf8aa.func_pm_ctrl_invert_if__0mti7ngo', 'python-hyper__h11.bed0dd4a.func_pm_class_rm_funcs__9kzx2763', 'getmoto__moto.694ce1f4.pr_4791', 'Mimino666__langdetect.a1598f1a.func_pm_class_rm_funcs__842dr37d', 'Suor__funcy.207a7810.lm_rewrite__01e30g2p', 'pallets__markupsafe.620c06c9.lm_rewrite__15in6vpa', 'cookiecutter__cookiecutter.b4451231.func_pm_remove_assign__5qi3ub54', 'django__daphne.32ac73e1.func_pm_op_change__667ysnwd', 'encode__starlette.db5063c2.func_pm_ctrl_invert_if__09vb8dpj', 'kennethreitz__records.5941ab27.lm_rewrite__9giocolr', 'hukkin__tomli.443a0c1b.func_pm_ctrl_invert_if__cenwfijp', 'Suor__funcy.207a7810.func_pm_op_change__vt0hxx5a', 'sloria__environs.73c372df.pr_320', 'jaraco__inflect.c079a96a.func_pm_remove_assign__0rzmwp5q', 'weaveworks__grafanalib.5c3b17ed.lm_rewrite__0jupbouz', 'benoitc__gunicorn.bacbf8aa.lm_rewrite__4twhroug', 'pdfminer__pdfminer.six.1a8bd2f7.pr_885', 'borntyping__python-colorlog.dfa10f59.func_pm_ctrl_shuffle__1oe4qn2p', 'amueller__word_cloud.ec24191c.func_pm_class_rm_funcs__6rkf81lk', 'tox-dev__pipdeptree.c31b6418.func_pm_ctrl_invert_if__0qedlj6j', 'cloudpipe__cloudpickle.6220b0ce.func_pm_op_change__trqoj6az', 'hukkin__tomli.443a0c1b.func_pm_remove_assign__1kge22y9', 'python-openxml__python-docx.0cf6d71f.combine_module__2f4rxzji', 'tornadoweb__tornado.d5ac65c1.func_pm_remove_assign__04nr21m5', 'pndurette__gTTS.dbcda4f3.lm_rewrite__4m80szt9', 'marshmallow-code__marshmallow.9716fc62.pr_2102', 'jaraco__inflect.c079a96a.lm_rewrite__0lqo6vzk', 'scanny__python-pptx.278b47b1.pr_994', 'msiemens__tinydb.10644a0e.combine_file__0176isok', 'Knio__dominate.9082227e.pr_166', 'cloudpipe__cloudpickle.6220b0ce.lm_rewrite__049to33h', 'un33k__python-slugify.872b3750.func_pm_remove_assign__vwi0i7xy', 'facebookresearch__fvcore.a491d5b9.lm_rewrite__1df9kxnf', 'pallets__click.fde47b4b.pr_2555', 'django__channels.a144b4b8.func_pm_ctrl_invert_if__2c3ec8eh', 'un33k__python-slugify.872b3750.pr_143', 'Knio__dominate.9082227e.func_pm_ctrl_shuffle__4b96h7zr', 'alanjds__drf-nested-routers.6144169d.func_pm_ctrl_shuffle__758felx3', 'kennethreitz__records.5941ab27.pr_216', 'mozillazg__python-pinyin.e42dede5.func_pm_class_rm_base__skilifnc', 'rubik__radon.54b88e58.lm_rewrite__2jlhi9cy', 'pexpect__ptyprocess.1067dbda.func_pm_remove_assign__117v6cvw', 'gruns__furl.da386f68.func_pm_class_rm_base__fey2ojn0', 'mido__mido.a0158ff9.lm_rewrite__2jsf644r', 'pydicom__pydicom.7d361b3d.combine_file__0ghggoro', 'agronholm__exceptiongroup.0b4f4937.func_pm_ctrl_invert_if__1tc67sb0', 'pylint-dev__astroid.b114f6b5.func_pm_remove_assign__07n9cz9h', 'scrapy__scrapy.35212ec5.func_pm_class_rm_base__7odd8hev', 'gruns__icecream.f76fef56.func_pm_ctrl_invert_if__7iujb6a9', 'pytest-dev__iniconfig.16793ead.func_pm_remove_assign__j041mnvq', 'luozhouyang__python-string-similarity.115acaac.func_pm_remove_assign__0q8ac551', 'agronholm__typeguard.b6a7e438.pr_350', 'pyupio__safety.7654596b.func_pm_class_rm_base__914stbxj', 'hukkin__tomli.443a0c1b.pr_229', 'luozhouyang__python-string-similarity.115acaac.func_pm_ctrl_invert_if__9etjo048', 'pygments__pygments.27649ebb.func_pm_remove_assign__0oub9mw2', 'agronholm__exceptiongroup.0b4f4937.lm_rewrite__0mv3i7ga', 'python-trio__trio.cfbbe2c1.func_pm_op_break_chains__wzow235l', 'prettytable__prettytable.ca90b055.pr_312', 'kennethreitz__records.5941ab27.func_pm_ctrl_invert_if__2kgw7ifj', 'django__daphne.32ac73e1.func_pm_ctrl_invert_if__gelq8pcg', 'python-trio__trio.cfbbe2c1.pr_2955', 'mozilla__bleach.73871d76.lm_rewrite__0iri0xa7', 'pndurette__gTTS.dbcda4f3.func_pm_class_rm_base__n9eahnvx', 'google__textfsm.c31b6007.func_pm_ctrl_invert_if__1srhrs0j', 'mozillazg__python-pinyin.e42dede5.func_pm_remove_assign__boe3ada3', 'marshmallow-code__marshmallow.9716fc62.func_pm_class_rm_base__0kzjedpz', 'agronholm__typeguard.b6a7e438.func_pm_remove_assign__0fb1erxd', 'mewwts__addict.75284f95.func_pm_class_rm_base__snkf13dg', 'lepture__mistune.bf54ef67.func_pm_class_rm_base__9al607g8', 'madzak__python-json-logger.5f85723f.func_pm_remove_assign__zknp0yth', 'matthewwithanm__python-markdownify.6258f5c3.func_pm_ctrl_invert_if__2helmwhm', 'dask__dask.5f61e423.func_pm_op_change__0lu9yjwg', 'life4__textdistance.c3aca916.func_pm_class_rm_base__ag1z1x4f', 'Mimino666__langdetect.a1598f1a.func_pm_remove_assign__6i51zp8c', 'pudo__dataset.5c2dc8d3.lm_rewrite__3su3yv0o', 'jaraco__inflect.c079a96a.func_pm_op_change__9qoeffi9', 'joke2k__faker.8b401a7d.func_pm_ctrl_invert_if__0b2vis1h', 'scanny__python-pptx.278b47b1.func_pm_ctrl_invert_if__2kdg2v1o', 'cantools__cantools.0c6a7871.func_pm_ctrl_invert_if__02vvyejg']  # list of problems, e.g., ["astropy__astropy-12907"], or strings like "test-125" (defined in gym/envs/configs), or "all",
    env_kwargs: {
        "dir_tree_depth": 1,
        "run_timeout": 300,
        "dataset_id": "SWE-bench/SWE-smith",

        # shortcut features
        "auto_eval_on_rewrite": False,  # If True, the environment will automatically call the Eval tool after a successful rewrite. If this is set to True, the agent does not need to call the Eval tool itself.
        "show_current_breakpoints": False,  # If True, the environment will automatically show the current breakpoints at every step in the system prompt.
        "show_directory_tree": True,  # If set to True, the environment will show the directory tree in the system prompt.
        "persistent_breakpoints": True,  # If True, the environemnt will keep a set of breakpoint states across PDB sessions. When a new PDB session is started, the environment will automatically load the breakpoints from the previous session.
        "auto_list": True,  # If True, the environment will automatically call `list .` via the PDB tool after every pdb tool call, which will show the code around the current frame.
    }
    terminal: {
        type: "docker",
    }

    # LLM configs
    llm_name: "qwen3-32b-vllm"

    # Agent configs
    random_seed: 42
    max_steps: 50
    max_rewrite_steps: 10
    memory_size: 20
    save_patch: True
    reset_prompt_history_after_rewrite: True
    # Optionally loads a custom system prompt template from a file.
    # system_prompt_template_file: "script/templates/system_prompt.jinja"

rewrite_agent:
    tools: ["view", "rewrite", "listdir", "eval"]

debug_agent:
    tools: ["pdb", "view", "rewrite", "listdir", "eval"]

debug_5_agent:
    n_rewrites_before_pdb: 5
    tools: ["pdb", "view", "rewrite", "listdir", "eval"]

solution_agent:
    llm_name: "human"  # No need for an LLM.
    tools: ["eval", "pdb"]
