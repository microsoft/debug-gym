[
  {
    "instance_id": "andialbrecht__sqlparse.e57923b3.sweagent_buggen__f7682904",
    "repo": "swesmith/andialbrecht__sqlparse.e57923b3",
    "patch": "diff --git a/sqlparse/lexer.py b/sqlparse/lexer.py\nindex 8f88d17..1e42542 100644\n--- a/sqlparse/lexer.py\n+++ b/sqlparse/lexer.py\n@@ -118,7 +118,12 @@ class Lexer:\n         ``stack`` is the initial stack (default: ``['root']``)\n         \"\"\"\n         if isinstance(text, TextIOBase):\n-            text = text.read()\n+            _stream_obj = text\n+            text = _stream_obj.read()\n+            try:\n+                _stream_obj.close()\n+            except Exception:\n+                pass\n \n         if isinstance(text, str):\n             pass\n",
    "FAIL_TO_PASS": [
      "tests/test_tokenize.py::test_stream_simple"
    ],
    "PASS_TO_PASS": [
      "tests/test_cli.py::test_cli_main_empty",
      "tests/test_cli.py::test_parser_empty",
      "tests/test_cli.py::test_main_help",
      "tests/test_cli.py::test_valid_args",
      "tests/test_cli.py::test_invalid_choice",
      "tests/test_cli.py::test_invalid_args",
      "tests/test_cli.py::test_invalid_infile",
      "tests/test_cli.py::test_invalid_outfile",
      "tests/test_cli.py::test_stdout",
      "tests/test_cli.py::test_script",
      "tests/test_cli.py::test_encoding_stdout[encoding_utf8.sql-utf-8]",
      "tests/test_cli.py::test_encoding_stdout[encoding_gbk.sql-gbk]",
      "tests/test_cli.py::test_encoding_output_file[encoding_utf8.sql-utf-8]",
      "tests/test_cli.py::test_encoding_output_file[encoding_gbk.sql-gbk]",
      "tests/test_cli.py::test_encoding_stdin[encoding_utf8.sql-utf-8]",
      "tests/test_cli.py::test_encoding_stdin[encoding_gbk.sql-gbk]",
      "tests/test_cli.py::test_encoding",
      "tests/test_format.py::TestFormat::test_keywordcase",
      "tests/test_format.py::TestFormat::test_keywordcase_invalid_option",
      "tests/test_format.py::TestFormat::test_identifiercase",
      "tests/test_format.py::TestFormat::test_identifiercase_invalid_option",
      "tests/test_format.py::TestFormat::test_identifiercase_quotes",
      "tests/test_format.py::TestFormat::test_strip_comments_single",
      "tests/test_format.py::TestFormat::test_strip_comments_invalid_option",
      "tests/test_format.py::TestFormat::test_strip_comments_multi",
      "tests/test_format.py::TestFormat::test_strip_comments_preserves_linebreak",
      "tests/test_format.py::TestFormat::test_strip_comments_preserves_whitespace",
      "tests/test_format.py::TestFormat::test_strip_comments_preserves_hint",
      "tests/test_format.py::TestFormat::test_strip_ws",
      "tests/test_format.py::TestFormat::test_strip_ws_invalid_option",
      "tests/test_format.py::TestFormat::test_preserve_ws",
      "tests/test_format.py::TestFormat::test_notransform_of_quoted_crlf",
      "tests/test_format.py::TestFormatReindentAligned::test_basic",
      "tests/test_format.py::TestFormatReindentAligned::test_joins",
      "tests/test_format.py::TestFormatReindentAligned::test_case_statement",
      "tests/test_format.py::TestFormatReindentAligned::test_case_statement_with_between",
      "tests/test_format.py::TestFormatReindentAligned::test_group_by",
      "tests/test_format.py::TestFormatReindentAligned::test_group_by_subquery",
      "tests/test_format.py::TestFormatReindentAligned::test_window_functions",
      "tests/test_format.py::TestSpacesAroundOperators::test_basic",
      "tests/test_format.py::TestSpacesAroundOperators::test_bools",
      "tests/test_format.py::TestSpacesAroundOperators::test_nested",
      "tests/test_format.py::TestSpacesAroundOperators::test_wildcard_vs_mult",
      "tests/test_format.py::TestFormatReindent::test_option",
      "tests/test_format.py::TestFormatReindent::test_stmts",
      "tests/test_format.py::TestFormatReindent::test_keywords",
      "tests/test_format.py::TestFormatReindent::test_keywords_between",
      "tests/test_format.py::TestFormatReindent::test_parenthesis",
      "tests/test_format.py::TestFormatReindent::test_where",
      "tests/test_format.py::TestFormatReindent::test_join",
      "tests/test_format.py::TestFormatReindent::test_identifier_list",
      "tests/test_format.py::TestFormatReindent::test_identifier_list_with_wrap_after",
      "tests/test_format.py::TestFormatReindent::test_identifier_list_comment_first",
      "tests/test_format.py::TestFormatReindent::test_identifier_list_with_functions",
      "tests/test_format.py::TestFormatReindent::test_long_identifier_list_with_functions",
      "tests/test_format.py::TestFormatReindent::test_case",
      "tests/test_format.py::TestFormatReindent::test_case2",
      "tests/test_format.py::TestFormatReindent::test_nested_identifier_list",
      "tests/test_format.py::TestFormatReindent::test_duplicate_linebreaks",
      "tests/test_format.py::TestFormatReindent::test_keywordfunctions",
      "tests/test_format.py::TestFormatReindent::test_identifier_and_functions",
      "tests/test_format.py::TestFormatReindent::test_insert_values",
      "tests/test_format.py::TestOutputFormat::test_python",
      "tests/test_format.py::TestOutputFormat::test_python_multiple_statements",
      "tests/test_format.py::TestOutputFormat::test_php",
      "tests/test_format.py::TestOutputFormat::test_sql",
      "tests/test_format.py::TestOutputFormat::test_invalid_option",
      "tests/test_format.py::test_format_column_ordering",
      "tests/test_format.py::test_truncate_strings",
      "tests/test_format.py::test_truncate_strings_invalid_option2[bar]",
      "tests/test_format.py::test_truncate_strings_invalid_option2[-1]",
      "tests/test_format.py::test_truncate_strings_invalid_option2[0]",
      "tests/test_format.py::test_having_produces_newline",
      "tests/test_format.py::test_format_right_margin_invalid_option[ten]",
      "tests/test_format.py::test_format_right_margin_invalid_option[2]",
      "tests/test_format.py::test_format_json_ops",
      "tests/test_format.py::test_strip_ws_removes_trailing_ws_in_groups",
      "tests/test_grouping.py::test_grouping_parenthesis",
      "tests/test_grouping.py::test_grouping_identifiers",
      "tests/test_grouping.py::test_grouping_identifier_wildcard",
      "tests/test_grouping.py::test_grouping_identifier_name_wildcard",
      "tests/test_grouping.py::test_grouping_identifier_invalid",
      "tests/test_grouping.py::test_grouping_identifier_invalid_in_middle",
      "tests/test_grouping.py::test_grouping_identifier_as_invalid",
      "tests/test_grouping.py::test_grouping_identifier_function",
      "tests/test_grouping.py::test_grouping_operation[foo+100]",
      "tests/test_grouping.py::test_grouping_operation[foo*100]",
      "tests/test_grouping.py::test_grouping_identifier_list",
      "tests/test_grouping.py::test_grouping_identifier_list_subquery",
      "tests/test_grouping.py::test_grouping_identifier_list_case",
      "tests/test_grouping.py::test_grouping_identifier_list_other",
      "tests/test_grouping.py::test_grouping_identifier_list_with_inline_comments",
      "tests/test_grouping.py::test_grouping_identifiers_with_operators",
      "tests/test_grouping.py::test_grouping_identifier_list_with_order",
      "tests/test_grouping.py::test_grouping_nested_identifier_with_order",
      "tests/test_grouping.py::test_grouping_where",
      "tests/test_grouping.py::test_returning_kw_ends_where_clause",
      "tests/test_grouping.py::test_into_kw_ends_where_clause",
      "tests/test_grouping.py::test_grouping_alias",
      "tests/test_grouping.py::test_grouping_alias_case",
      "tests/test_grouping.py::test_grouping_alias_ctas",
      "tests/test_grouping.py::test_grouping_subquery_no_parens",
      "tests/test_grouping.py::test_grouping_alias_returns_none[foo.bar]",
      "tests/test_grouping.py::test_grouping_idlist_function",
      "tests/test_grouping.py::test_grouping_comparison_exclude",
      "tests/test_grouping.py::test_grouping_function",
      "tests/test_grouping.py::test_grouping_function_not_in",
      "tests/test_grouping.py::test_grouping_varchar",
      "tests/test_grouping.py::test_statement_get_type",
      "tests/test_grouping.py::test_identifier_with_operators",
      "tests/test_grouping.py::test_identifier_with_op_trailing_ws",
      "tests/test_grouping.py::test_identifier_with_string_literals",
      "tests/test_grouping.py::test_identifier_consumes_ordering",
      "tests/test_grouping.py::test_comparison_with_keywords",
      "tests/test_grouping.py::test_comparison_with_floats",
      "tests/test_grouping.py::test_comparison_with_parenthesis",
      "tests/test_grouping.py::test_comparison_with_strings[=]",
      "tests/test_grouping.py::test_comparison_with_strings[!=]",
      "tests/test_grouping.py::test_comparison_with_strings[>]",
      "tests/test_grouping.py::test_comparison_with_strings[<]",
      "tests/test_grouping.py::test_comparison_with_strings[<=]",
      "tests/test_grouping.py::test_comparison_with_strings[>=]",
      "tests/test_grouping.py::test_comparison_with_strings[~]",
      "tests/test_grouping.py::test_comparison_with_strings[~~]",
      "tests/test_grouping.py::test_comparison_with_strings[!~~]",
      "tests/test_grouping.py::test_comparison_with_strings[LIKE]",
      "tests/test_grouping.py::test_comparison_with_strings[ILIKE]",
      "tests/test_grouping.py::test_like_and_ilike_comparison",
      "tests/test_grouping.py::test_comparison_with_functions",
      "tests/test_grouping.py::test_comparison_with_typed_literal",
      "tests/test_grouping.py::test_forloops[FOR]",
      "tests/test_grouping.py::test_forloops[FOREACH]",
      "tests/test_grouping.py::test_nested_for",
      "tests/test_grouping.py::test_begin",
      "tests/test_grouping.py::test_keyword_followed_by_parenthesis",
      "tests/test_grouping.py::test_nested_begin",
      "tests/test_grouping.py::test_aliased_column_without_as",
      "tests/test_grouping.py::test_qualified_function",
      "tests/test_grouping.py::test_aliased_function_without_as",
      "tests/test_grouping.py::test_aliased_literal_without_as",
      "tests/test_grouping.py::test_grouping_as_cte",
      "tests/test_grouping.py::test_grouping_create_table",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[1.0]",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[-1.0]",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[1.]",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[-1.]",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[.1]",
      "tests/test_keywords.py::TestSQLREGEX::test_float_numbers[-.1]",
      "tests/test_parse.py::test_parse_tokenize",
      "tests/test_parse.py::test_parse_multistatement",
      "tests/test_parse.py::test_parse_within",
      "tests/test_parse.py::test_parse_child_of",
      "tests/test_parse.py::test_parse_has_ancestor",
      "tests/test_parse.py::test_parse_float[.5]",
      "tests/test_parse.py::test_parse_float[.51]",
      "tests/test_parse.py::test_parse_float[1.5]",
      "tests/test_parse.py::test_parse_float[12.5]",
      "tests/test_parse.py::test_parse_modulo_not_placeholder",
      "tests/test_parse.py::test_parse_access_symbol",
      "tests/test_parse.py::test_parse_square_brackets_notation_isnt_too_greedy",
      "tests/test_parse.py::test_parse_square_brackets_notation_isnt_too_greedy2",
      "tests/test_parse.py::test_parse_keyword_like_identifier",
      "tests/test_parse.py::test_parse_function_parameter",
      "tests/test_parse.py::test_parse_function_param_single_literal",
      "tests/test_parse.py::test_parse_nested_function",
      "tests/test_parse.py::test_parse_casted_params",
      "tests/test_parse.py::test_parse_div_operator",
      "tests/test_parse.py::test_quoted_identifier",
      "tests/test_parse.py::test_valid_identifier_names[foo]",
      "tests/test_parse.py::test_valid_identifier_names[_foo]",
      "tests/test_parse.py::test_valid_identifier_names[1_data]",
      "tests/test_parse.py::test_valid_identifier_names[\\u696d\\u8005\\u540d\\u7a31]",
      "tests/test_parse.py::test_psql_quotation_marks",
      "tests/test_parse.py::test_double_precision_is_builtin",
      "tests/test_parse.py::test_placeholder[?]",
      "tests/test_parse.py::test_placeholder[:1]",
      "tests/test_parse.py::test_placeholder[:foo]",
      "tests/test_parse.py::test_placeholder[%s]",
      "tests/test_parse.py::test_placeholder[%(foo)s]",
      "tests/test_parse.py::test_scientific_numbers[6.67428E-8-expected0]",
      "tests/test_parse.py::test_scientific_numbers[1.988e33-expected1]",
      "tests/test_parse.py::test_scientific_numbers[1e-12-expected2]",
      "tests/test_parse.py::test_scientific_numbers[e1-None]",
      "tests/test_parse.py::test_single_quotes_are_strings",
      "tests/test_parse.py::test_double_quotes_are_identifiers",
      "tests/test_parse.py::test_single_quotes_with_linebreaks",
      "tests/test_parse.py::test_sqlite_identifiers",
      "tests/test_parse.py::test_simple_1d_array_index",
      "tests/test_parse.py::test_2d_array_index",
      "tests/test_parse.py::test_array_index_function_result",
      "tests/test_parse.py::test_schema_qualified_array_index",
      "tests/test_parse.py::test_aliased_array_index",
      "tests/test_parse.py::test_array_literal",
      "tests/test_parse.py::test_typed_array_definition",
      "tests/test_parse.py::test_names_and_special_names[foo]",
      "tests/test_parse.py::test_names_and_special_names[@foo]",
      "tests/test_parse.py::test_names_and_special_names[#foo]",
      "tests/test_parse.py::test_names_and_special_names[##foo]",
      "tests/test_parse.py::test_get_token_at_offset",
      "tests/test_parse.py::test_pprint",
      "tests/test_parse.py::test_wildcard_multiplication",
      "tests/test_parse.py::test_stmt_tokens_parents",
      "tests/test_parse.py::test_dbldollar_as_literal[$$foo$$-True]",
      "tests/test_parse.py::test_dbldollar_as_literal[$_$foo$_$-True]",
      "tests/test_parse.py::test_non_ascii",
      "tests/test_parse.py::test_get_real_name",
      "tests/test_parse.py::test_from_subquery",
      "tests/test_parse.py::test_parenthesis",
      "tests/test_parse.py::test_configurable_keywords",
      "tests/test_parse.py::test_configurable_regex",
      "tests/test_parse.py::test_json_operators[->]",
      "tests/test_parse.py::test_json_operators[->>]",
      "tests/test_parse.py::test_json_operators[#>]",
      "tests/test_parse.py::test_json_operators[#>>]",
      "tests/test_parse.py::test_json_operators[@>]",
      "tests/test_parse.py::test_json_operators[<@]",
      "tests/test_parse.py::test_json_operators[||]",
      "tests/test_parse.py::test_json_operators[-]",
      "tests/test_parse.py::test_json_operators[#-]",
      "tests/test_regressions.py::test_issue9",
      "tests/test_regressions.py::test_issue13",
      "tests/test_regressions.py::test_issue26[--hello]",
      "tests/test_regressions.py::test_issue26[--hello\\n]",
      "tests/test_regressions.py::test_issue26[--]",
      "tests/test_regressions.py::test_issue26[--\\n]",
      "tests/test_regressions.py::test_issue34[create]",
      "tests/test_regressions.py::test_issue34[CREATE]",
      "tests/test_regressions.py::test_issue35",
      "tests/test_regressions.py::test_issue38",
      "tests/test_regressions.py::test_issue39",
      "tests/test_regressions.py::test_issue40",
      "tests/test_regressions.py::test_issue83",
      "tests/test_regressions.py::test_comment_encoding_when_reindent",
      "tests/test_regressions.py::test_parse_sql_with_binary",
      "tests/test_regressions.py::test_dont_alias_keywords",
      "tests/test_regressions.py::test_format_accepts_encoding",
      "tests/test_regressions.py::test_stream",
      "tests/test_regressions.py::test_issue90",
      "tests/test_regressions.py::test_except_formatting",
      "tests/test_regressions.py::test_null_with_as",
      "tests/test_regressions.py::test_issue190_open_file",
      "tests/test_regressions.py::test_issue193_splitting_function",
      "tests/test_regressions.py::test_issue194_splitting_function",
      "tests/test_regressions.py::test_issue186_get_type",
      "tests/test_regressions.py::test_issue212_py2unicode",
      "tests/test_regressions.py::test_issue213_leadingws",
      "tests/test_regressions.py::test_issue227_gettype_cte",
      "tests/test_regressions.py::test_issue207_runaway_format",
      "tests/test_regressions.py::test_token_next_doesnt_ignore_skip_cm",
      "tests/test_regressions.py::test_issue284_as_grouping[AS]",
      "tests/test_regressions.py::test_issue315_utf8_by_default",
      "tests/test_regressions.py::test_issue322_concurrently_is_keyword",
      "tests/test_regressions.py::test_issue469_copy_as_psql_command",
      "tests/test_regressions.py::test_issue485_split_multi",
      "tests/test_regressions.py::test_issue489_tzcasts",
      "tests/test_regressions.py::test_issue562_tzcasts",
      "tests/test_regressions.py::test_as_in_parentheses_indents",
      "tests/test_regressions.py::test_format_invalid_where_clause",
      "tests/test_regressions.py::test_splitting_at_and_backticks_issue588",
      "tests/test_regressions.py::test_comment_between_cte_clauses_issue632",
      "tests/test_regressions.py::test_copy_issue672",
      "tests/test_regressions.py::test_primary_key_issue740",
      "tests/test_regressions.py::test_max_recursion",
      "tests/test_split.py::test_split_semicolon",
      "tests/test_split.py::test_split_backslash",
      "tests/test_split.py::test_split_create_function[function.sql]",
      "tests/test_split.py::test_split_create_function[function_psql.sql]",
      "tests/test_split.py::test_split_create_function[function_psql2.sql]",
      "tests/test_split.py::test_split_create_function[function_psql3.sql]",
      "tests/test_split.py::test_split_create_function[function_psql4.sql]",
      "tests/test_split.py::test_split_dashcomments",
      "tests/test_split.py::test_split_begintag",
      "tests/test_split.py::test_split_begintag_2",
      "tests/test_split.py::test_split_dropif",
      "tests/test_split.py::test_split_comment_with_umlaut",
      "tests/test_split.py::test_split_comment_end_of_line",
      "tests/test_split.py::test_split_casewhen",
      "tests/test_split.py::test_split_casewhen_procedure",
      "tests/test_split.py::test_split_cursor_declare",
      "tests/test_split.py::test_split_if_function",
      "tests/test_split.py::test_split_stream",
      "tests/test_split.py::test_split_encoding_parsestream",
      "tests/test_split.py::test_split_unicode_parsestream",
      "tests/test_split.py::test_split_simple",
      "tests/test_split.py::test_split_ignores_empty_newlines",
      "tests/test_split.py::test_split_quotes_with_new_line",
      "tests/test_split.py::test_split_mysql_handler_for",
      "tests/test_split.py::test_split_strip_semicolon_procedure",
      "tests/test_split.py::test_split_multiple_case_in_begin",
      "tests/test_tokenize.py::test_tokenize_simple",
      "tests/test_tokenize.py::test_tokenize_backticks",
      "tests/test_tokenize.py::test_tokenize_linebreaks[foo\\nbar\\n]",
      "tests/test_tokenize.py::test_tokenize_linebreaks[foo\\rbar\\r]",
      "tests/test_tokenize.py::test_tokenize_linebreaks[foo\\r\\nbar\\r\\n]",
      "tests/test_tokenize.py::test_tokenize_linebreaks[foo\\r\\nbar\\n]",
      "tests/test_tokenize.py::test_tokenize_inline_keywords",
      "tests/test_tokenize.py::test_tokenize_negative_numbers",
      "tests/test_tokenize.py::test_token_str",
      "tests/test_tokenize.py::test_token_repr",
      "tests/test_tokenize.py::test_token_flatten",
      "tests/test_tokenize.py::test_tokenlist_repr",
      "tests/test_tokenize.py::test_single_quotes",
      "tests/test_tokenize.py::test_tokenlist_first",
      "tests/test_tokenize.py::test_tokenlist_token_matching",
      "tests/test_tokenize.py::test_stream_error",
      "tests/test_tokenize.py::test_parse_join[JOIN]",
      "tests/test_tokenize.py::test_parse_union",
      "tests/test_tokenize.py::test_parse_endifloop[END\\t\\nIF]",
      "tests/test_tokenize.py::test_parse_endifloop[END\\t\\nLOOP]",
      "tests/test_tokenize.py::test_parse_order[ASC]",
      "tests/test_tokenize.py::test_parse_order[DESC]",
      "tests/test_tokenize.py::test_parse_identifiers[foo]",
      "tests/test_tokenize.py::test_parse_identifiers[Foo]",
      "tests/test_tokenize.py::test_parse_identifiers[FOO]",
      "tests/test_tokenize.py::test_parse_identifiers[v$name]",
      "tests/test_tokenize.py::test_parse_group_by",
      "tests/test_tokenize.py::test_parse_order_by",
      "tests/test_tokenize.py::test_parse_window_as",
      "tests/test_tokenize.py::test_like_and_ilike_parsed_as_comparisons[LIKE]",
      "tests/test_tokenize.py::test_like_and_ilike_parsed_as_comparisons[ILIKE]",
      "tests/test_tokenize.py::test_near_like_and_ilike_parsed_appropriately[LIKEaaa]",
      "tests/test_tokenize.py::test_near_like_and_ilike_parsed_appropriately[bILIKE]",
      "tests/test_tokenize.py::test_near_like_and_ilike_parsed_appropriately[aaILIKEbb]",
      "tests/test_tokenize.py::test_near_like_and_ilike_parsed_appropriately[NOTLIKE]",
      "tests/test_tokenize.py::test_near_like_and_ilike_parsed_appropriately[NOTILIKE]",
      "tests/test_tokenize.py::test_cli_commands",
      "tests/test_utils.py::test_remove_quotes[None-None]",
      "tests/test_utils.py::test_remove_quotes['foo'-foo]",
      "tests/test_utils.py::test_remove_quotes[\"foo\"-foo]",
      "tests/test_utils.py::test_remove_quotes[`foo`-foo]"
    ],
    "created_at": "2025-06-19T18:37:05.948843",
    "image_name": "swesmith.x86_64.andialbrecht__sqlparse.e57923b3",
    "base_commit": "main",
    "problem_statement": "`lexer.tokenize()` unexpectedly closes the input stream  \nAfter upgrading to the latest main branch I noticed a small but pretty disruptive change in the lexer\u2019s behaviour when the input is provided as a file-like object.\n\n### What I was doing\n\nIn a couple of places we keep a `StringIO` (or an open file handle) around and call `lexer.tokenize()` multiple times on the same handle, e.g. to count tokens first and later to actually do something with them:\n\n```python\nfrom io import StringIO\nfrom sqlparse import lexer\n\nstream = StringIO(\"SELECT 1; SELECT 2;\")\n\n# first pass \u2013 count tokens\nn = len(list(lexer.tokenize(stream)))\nprint(\"token count:\", n)\n\n# rewind\nstream.seek(0)\n\n# second pass \u2013 maybe format or analyse\ntokens = list(lexer.tokenize(stream))\nprint(\"second pass:\", len(tokens))\n```\n\n### What happens now\n\nRunning the snippet above now raises\n\n```\nValueError: I/O operation on closed file.\n```\n\nbecause the first call to `tokenize()` seems to close the stream.  \nThis also breaks any code that relies on rewinding (`seek`) or simply expects the handle to remain open for other purposes (logging, size checks, etc.).\n\n### What I expected\n\n`tokenize()` used to leave the passed-in stream untouched, so the example above would print:\n\n```\ntoken count: 9\nsecond pass: 9\n```\n\nand the caller could decide when (or if) the handle should be closed.\n\n### Why this matters\n\nKeeping the responsibility for closing resources with the caller is pretty common in the standard library (`json.load`, `csv.reader`, \u2026).  Auto-closing makes it harder to integrate `sqlparse` in pipelines where the same handle is used by several components or wrapped in a context manager that already handles cleanup.\n\n### Minimal reproduction\n\n```python\nfrom io import StringIO\nfrom sqlparse import lexer\n\ns = StringIO(\"SELECT 1;\")\nlist(lexer.tokenize(s))\ns.seek(0)   # <-- ValueError on current main, worked before\n```\n\nHappy to provide more details if needed!"
  },
  {
    "instance_id": "cloudpipe__cloudpickle.6220b0ce.sweagent_buggen__25cd1dcb",
    "repo": "swesmith/cloudpipe__cloudpickle.6220b0ce",
    "patch": "diff --git a/cloudpickle/cloudpickle.py b/cloudpickle/cloudpickle.py\nindex 8c50ba1..d8bbbe3 100644\n--- a/cloudpickle/cloudpickle.py\n+++ b/cloudpickle/cloudpickle.py\n@@ -1199,8 +1199,13 @@ _DATACLASSE_FIELD_TYPE_SENTINELS = {\n }\n \n \n-def _get_dataclass_field_type_sentinel(name):\n-    return _DATACLASSE_FIELD_TYPE_SENTINELS[name]\n+def _get_dataclass_field_type_sentinel(name, _cache={}):\n+\n+    if _cache:\n+        return next(iter(_cache.values()))\n+    sentinel = _DATACLASSE_FIELD_TYPE_SENTINELS[name]\n+    _cache[name] = sentinel\n+    return sentinel\n \n \n class Pickler(pickle.Pickler):\n",
    "FAIL_TO_PASS": [
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar"
    ],
    "PASS_TO_PASS": [
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_closed_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_empty_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_pickling_special_file_handles",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_plus_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_r_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_seek",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_w_mode",
      "tests/cloudpickle_test.py::test_extract_class_dict",
      "tests/cloudpickle_test.py::CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_pickle_bytes_for_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_out_of_band_buffers",
      "tests/cloudpickle_test.py::CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_pickle_bytes_for_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_dynamic_typevar",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_stdlib_typevar",
      "tests/cloudpickle_test.py::test_module_level_pickler",
      "tests/test_backward_compat.py::test_simple_func",
      "tests/test_backward_compat.py::test_simple_class",
      "tests/test_backward_compat.py::test_dynamic_module",
      "tests/test_backward_compat.py::test_simple_enum",
      "tests/test_backward_compat.py::test_complex_class",
      "tests/test_backward_compat.py::test_complex_function",
      "tests/test_backward_compat.py::test_nested_function"
    ],
    "created_at": "2025-06-19T18:37:11.469969",
    "image_name": "swesmith.x86_64.cloudpipe__cloudpickle.6220b0ce",
    "base_commit": "main",
    "problem_statement": "Data-class field_type mix-up after one pickling round-trip\n==========================================================\n\nSomething weird started happening with `cloudpickle` right after updating to the latest commit (worked fine on 2.2.1 and on the previous HEAD from a few days ago).\n\nIf a dataclass that contains both an `InitVar` and a `ClassVar` is pickled and then unpickled, the special \u201ckind\u201d of those fields is lost: every field suddenly pretends to be a regular instance field.\n\nMinimal session\n---------------\n\n```python\n>>> import cloudpickle, pickle, dataclasses, io, typing\n\n>>> @dataclasses.dataclass\n... class Sample:\n...     x: int\n...     y: dataclasses.InitVar[int]\n...     z: typing.ClassVar[int] = 42\n...\n\n>>> [f._field_type for f in Sample.__dataclass_fields__.values()]\n[_FIELD, _FIELD_INITVAR, _FIELD_CLASSVAR]        # <-- correct\n\n# one round-trip through cloudpickle\n>>> buf = io.BytesIO()\n>>> cloudpickle.dump(Sample, buf)\n>>> buf.seek(0)\n>>> Sample2 = pickle.load(buf)\n\n# what do we get back?\n>>> [f._field_type for f in Sample2.__dataclass_fields__.values()]\n[_FIELD, _FIELD, _FIELD]                         # <-- InitVar & ClassVar lost\n```\n\nAfter the first serialization, both the `InitVar` and the `ClassVar` markers are replaced by plain `_FIELD`.  \nSubsequent dataclasses created in the same interpreter session are also impacted:\n\n```python\n>>> @dataclasses.dataclass\n... class Another:\n...     a: int\n...     b: dataclasses.InitVar[int]\n...\n>>> [f._field_type for f in Another.__dataclass_fields__.values()]\n[_FIELD, _FIELD]     # `InitVar` already forgotten globally\n```\n\nSo it looks like some global state is being polluted during the first pickling run.\n\nReproducing\n-----------\n\n1. Start a fresh Python session (tested with 3.10 and 3.11).\n2. Run the snippet above.  \n   The second list should report `[_FIELD, _FIELD_INITVAR, _FIELD_CLASSVAR]` but instead all three elements are `_FIELD`.\n\nImpact\n------\n\nAnything relying on the difference between normal fields, `InitVar`s and `ClassVar`s (for instance code that inspects dataclasses to decide what to store or validate) breaks silently after a single serialization.  This also affects interactively defined dataclasses shuttled to a subprocess.\n\nLet me know if additional traces or bisect information would help!"
  },
  {
    "instance_id": "bottlepy__bottle.a8dfef30.sweagent_buggen__c6946669",
    "repo": "swesmith/bottlepy__bottle.a8dfef30",
    "patch": "diff --git a/bottle.py b/bottle.py\nindex 286b5bc..ac5c1ed 100755\n--- a/bottle.py\n+++ b/bottle.py\n@@ -2573,6 +2573,7 @@ class ConfigDict(dict):\n         overlay._meta = self._meta\n         overlay._source = self\n         self._overlays.append(weakref.ref(overlay))\n+        self._change_listener.append(lambda *_, _ov=overlay, **__: False)\n         for key in self:\n             overlay._set_virtual(key, self[key])\n         return overlay\n",
    "FAIL_TO_PASS": [
      "test/test_config.py::TestConfDict::test_gc_overlays"
    ],
    "PASS_TO_PASS": [
      "test/test_app.py::TestApplicationObject::test_setattr",
      "test/test_auth.py::TestBasicAuth::test__header",
      "test/test_config.py::TestConfDict::test_isadict",
      "test/test_config.py::TestConfDict::test_load_dict",
      "test/test_config.py::TestConfDict::test_load_module",
      "test/test_config.py::TestConfDict::test_meta",
      "test/test_config.py::TestConfDict::test_namespaces",
      "test/test_config.py::TestConfDict::test_overlay",
      "test/test_config.py::TestConfDict::test_string_save_keys",
      "test/test_config.py::TestConfDict::test_update",
      "test/test_config.py::TestConfDict::test_write",
      "test/test_config.py::TestINIConfigLoader::test_load_config",
      "test/test_contextlocals.py::TestThreadLocals::test_request",
      "test/test_contextlocals.py::TestThreadLocals::test_response",
      "test/test_environ.py::TestRequest::test_app_property",
      "test/test_environ.py::TestRequest::test_auth",
      "test/test_environ.py::TestRequest::test_bigbody",
      "test/test_environ.py::TestRequest::test_body",
      "test/test_environ.py::TestRequest::test_body_noclose",
      "test/test_environ.py::TestRequest::test_bodypost",
      "test/test_environ.py::TestRequest::test_chunked",
      "test/test_environ.py::TestRequest::test_chunked_illegal_size",
      "test/test_environ.py::TestRequest::test_chunked_meta_fields",
      "test/test_environ.py::TestRequest::test_chunked_not_chunked_at_all",
      "test/test_environ.py::TestRequest::test_chunked_not_terminated",
      "test/test_environ.py::TestRequest::test_chunked_wrong_size",
      "test/test_environ.py::TestRequest::test_cookie_dict",
      "test/test_environ.py::TestRequest::test_dict_access",
      "test/test_environ.py::TestRequest::test_get",
      "test/test_environ.py::TestRequest::test_getpostleak",
      "test/test_environ.py::TestRequest::test_header_access",
      "test/test_environ.py::TestRequest::test_header_access_special",
      "test/test_environ.py::TestRequest::test_isajax",
      "test/test_environ.py::TestRequest::test_json_empty",
      "test/test_environ.py::TestRequest::test_json_forged_header_issue616",
      "test/test_environ.py::TestRequest::test_json_header_empty_body",
      "test/test_environ.py::TestRequest::test_json_noheader",
      "test/test_environ.py::TestRequest::test_json_tobig",
      "test/test_environ.py::TestRequest::test_json_valid",
      "test/test_environ.py::TestRequest::test_method",
      "test/test_environ.py::TestRequest::test_multipart",
      "test/test_environ.py::TestRequest::test_params",
      "test/test_environ.py::TestRequest::test_path",
      "test/test_environ.py::TestRequest::test_pathshift",
      "test/test_environ.py::TestRequest::test_post",
      "test/test_environ.py::TestRequest::test_readonly_environ",
      "test/test_environ.py::TestRequest::test_remote_addr",
      "test/test_environ.py::TestRequest::test_remote_route",
      "test/test_environ.py::TestRequest::test_route_property",
      "test/test_environ.py::TestRequest::test_script_name",
      "test/test_environ.py::TestRequest::test_tobigbody",
      "test/test_environ.py::TestRequest::test_url",
      "test/test_environ.py::TestRequest::test_url_for_property",
      "test/test_environ.py::TestRequest::test_user_defined_attributes",
      "test/test_environ.py::TestResponse::test_append_header",
      "test/test_environ.py::TestResponse::test_charset",
      "test/test_environ.py::TestResponse::test_clone_cookie",
      "test/test_environ.py::TestResponse::test_constructor_body",
      "test/test_environ.py::TestResponse::test_constructor_headerlist",
      "test/test_environ.py::TestResponse::test_constructor_status",
      "test/test_environ.py::TestResponse::test_content_type",
      "test/test_environ.py::TestResponse::test_delete_cookie",
      "test/test_environ.py::TestResponse::test_delete_header",
      "test/test_environ.py::TestResponse::test_expires_header",
      "test/test_environ.py::TestResponse::test_non_string_header",
      "test/test_environ.py::TestResponse::test_prevent_control_characters_in_headers",
      "test/test_environ.py::TestResponse::test_set_cookie",
      "test/test_environ.py::TestResponse::test_set_cookie_expires",
      "test/test_environ.py::TestResponse::test_set_cookie_httponly",
      "test/test_environ.py::TestResponse::test_set_cookie_maxage",
      "test/test_environ.py::TestResponse::test_set_cookie_name_long_string",
      "test/test_environ.py::TestResponse::test_set_cookie_samesite",
      "test/test_environ.py::TestResponse::test_set_cookie_secure",
      "test/test_environ.py::TestResponse::test_set_cookie_value_long_string",
      "test/test_environ.py::TestResponse::test_set_header",
      "test/test_environ.py::TestResponse::test_set_status",
      "test/test_environ.py::TestResponse::test_wsgi_header_values",
      "test/test_environ.py::TestRedirect::test_absolute_path",
      "test/test_environ.py::TestRedirect::test_host_http_1_0",
      "test/test_environ.py::TestRedirect::test_host_http_1_1",
      "test/test_environ.py::TestRedirect::test_host_http_proxy",
      "test/test_environ.py::TestRedirect::test_redirect_preserve_cookies",
      "test/test_environ.py::TestRedirect::test_relative_path",
      "test/test_environ.py::TestRedirect::test_sheme",
      "test/test_environ.py::TestRedirect::test_specialchars",
      "test/test_environ.py::TestWSGIHeaderDict::test_bytes",
      "test/test_environ.py::TestWSGIHeaderDict::test_dict",
      "test/test_environ.py::TestWSGIHeaderDict::test_empty",
      "test/test_environ.py::TestWSGIHeaderDict::test_native",
      "test/test_environ.py::TestWSGIHeaderDict::test_unicode",
      "test/test_exc.py::TestAppException::test_memory_error",
      "test/test_exc.py::TestAppException::test_no_exc",
      "test/test_exc.py::TestAppException::test_noncatched_error",
      "test/test_exc.py::TestAppException::test_other_error",
      "test/test_exc.py::TestAppException::test_system_Exit",
      "test/test_fileupload.py::TestFileUpload::test_content_type",
      "test/test_fileupload.py::TestFileUpload::test_filename",
      "test/test_fileupload.py::TestFileUpload::test_name",
      "test/test_fileupload.py::TestFileUpload::test_preserve_case_issue_582",
      "test/test_fileupload.py::TestFileUpload::test_raw_filename",
      "test/test_fileupload.py::TestFileUpload::test_save_buffer",
      "test/test_fileupload.py::TestFileUpload::test_save_dir",
      "test/test_fileupload.py::TestFileUpload::test_save_file",
      "test/test_fileupload.py::TestFileUpload::test_save_overwrite_lock",
      "test/test_formsdict.py::TestFormsDict::test_attr_access",
      "test/test_formsdict.py::TestFormsDict::test_attr_missing",
      "test/test_formsdict.py::TestFormsDict::test_attr_unicode_error",
      "test/test_formsdict.py::TestFormsDict::test_decode_method",
      "test/test_html_helper.py::TestHttpUtils::test_accept_header",
      "test/test_importhook.py::TestImportHooks::test_data_import",
      "test/test_importhook.py::TestImportHooks::test_direkt_import",
      "test/test_importhook.py::TestImportHooks::test_ext_isfile",
      "test/test_importhook.py::TestImportHooks::test_from_import",
      "test/test_importhook.py::TestImportHooks::test_import_fail",
      "test/test_jinja2.py::TestJinja2Template::test_custom_filters",
      "test/test_jinja2.py::TestJinja2Template::test_custom_tests",
      "test/test_jinja2.py::TestJinja2Template::test_error",
      "test/test_jinja2.py::TestJinja2Template::test_file",
      "test/test_jinja2.py::TestJinja2Template::test_inherit",
      "test/test_jinja2.py::TestJinja2Template::test_name",
      "test/test_jinja2.py::TestJinja2Template::test_notfound",
      "test/test_jinja2.py::TestJinja2Template::test_string",
      "test/test_jinja2.py::TestJinja2Template::test_template_shortcut",
      "test/test_jinja2.py::TestJinja2Template::test_view_decorator",
      "test/test_mdict.py::TestMultiDict::test_headergetbug",
      "test/test_mdict.py::TestMultiDict::test_isadict",
      "test/test_mdict.py::TestMultiDict::test_isheader",
      "test/test_mdict.py::TestMultiDict::test_ismulti",
      "test/test_mount.py::TestAppMounting::test_mount",
      "test/test_mount.py::TestAppMounting::test_mount_cookie",
      "test/test_mount.py::TestAppMounting::test_mount_get_url",
      "test/test_mount.py::TestAppMounting::test_mount_json_bug",
      "test/test_mount.py::TestAppMounting::test_mount_meta",
      "test/test_mount.py::TestAppMounting::test_mount_no_plugins",
      "test/test_mount.py::TestAppMounting::test_mount_order_bug581",
      "test/test_mount.py::TestAppMounting::test_mount_unicode_path_bug602",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi_ctype_bug",
      "test/test_mount.py::TestAppMounting::test_no_slash_prefix",
      "test/test_mount.py::TestAppMerging::test_merge",
      "test/test_multipart.py::TestHeaderParser::test_options_parser",
      "test/test_multipart.py::TestMultipartParser::test_big_file",
      "test/test_multipart.py::TestMultipartParser::test_file_seek",
      "test/test_multipart.py::TestMultipartParser::test_fuzzy_lineiter",
      "test/test_multipart.py::TestMultipartParser::test_iterlines",
      "test/test_multipart.py::TestMultipartParser::test_iterlines_limit",
      "test/test_multipart.py::TestMultipartParser::test_multiline_header",
      "test/test_multipart.py::TestMultipartParser::test_unicode_value",
      "test/test_multipart.py::TestBrokenMultipart::test_big_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_content_length_to_small",
      "test/test_multipart.py::TestBrokenMultipart::test_disk_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_invalid_header",
      "test/test_multipart.py::TestBrokenMultipart::test_mem_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_content_type",
      "test/test_multipart.py::TestBrokenMultipart::test_no_disposition_header",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_middle_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_no_terminator",
      "test/test_multipart.py::TestBrokenMultipart::test_preamble_before_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_unsupported_content_type",
      "test/test_multipart.py::TestWerkzeugExamples::test_werkzeug_examples",
      "test/test_oorouting.py::TestRoutes::test_route1",
      "test/test_outputfilter.py::TestOutputFilter::test_bytearray",
      "test/test_outputfilter.py::TestOutputFilter::test_bytes",
      "test/test_outputfilter.py::TestOutputFilter::test_cookie",
      "test/test_outputfilter.py::TestOutputFilter::test_empty_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_emptylist",
      "test/test_outputfilter.py::TestOutputFilter::test_error",
      "test/test_outputfilter.py::TestOutputFilter::test_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_file",
      "test/test_outputfilter.py::TestOutputFilter::test_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httperror_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httpresponse_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_illegal",
      "test/test_outputfilter.py::TestOutputFilter::test_invalid_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_iterator_with_close",
      "test/test_outputfilter.py::TestOutputFilter::test_json",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPError",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPResponse",
      "test/test_outputfilter.py::TestOutputFilter::test_json_serialization_error",
      "test/test_outputfilter.py::TestOutputFilter::test_none",
      "test/test_outputfilter.py::TestOutputFilter::test_tuple",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode_generator_callback",
      "test/test_plugins.py::TestPluginManagement::test_install_decorator",
      "test/test_plugins.py::TestPluginManagement::test_install_non_plugin",
      "test/test_plugins.py::TestPluginManagement::test_install_plugin",
      "test/test_plugins.py::TestPluginManagement::test_json_plugin_catches_httpresponse",
      "test/test_plugins.py::TestPluginManagement::test_plugin_oder",
      "test/test_plugins.py::TestPluginManagement::test_route_plugin",
      "test/test_plugins.py::TestPluginManagement::test_skip_all",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_class",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_name",
      "test/test_plugins.py::TestPluginManagement::test_skip_nonlist",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_all",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_name",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_type",
      "test/test_plugins.py::TestPluginAPI::test_apply",
      "test/test_plugins.py::TestPluginAPI::test_callable",
      "test/test_plugins.py::TestPluginAPI::test_close",
      "test/test_plugins.py::TestPluginAPI::test_instance_method_wrapper",
      "test/test_plugins.py::TestPluginAPI::test_setup",
      "test/test_resources.py::TestResourceManager::test_get",
      "test/test_resources.py::TestResourceManager::test_open",
      "test/test_resources.py::TestResourceManager::test_path_absolutize",
      "test/test_resources.py::TestResourceManager::test_path_create",
      "test/test_resources.py::TestResourceManager::test_path_normalize",
      "test/test_resources.py::TestResourceManager::test_path_order",
      "test/test_resources.py::TestResourceManager::test_path_unique",
      "test/test_resources.py::TestResourceManager::test_root_path",
      "test/test_route.py::TestReFlatten::test_re_flatten",
      "test/test_route.py::TestRoute::test_callback_inspection",
      "test/test_route.py::TestRoute::test_callback_inspection_multiple_args",
      "test/test_route.py::TestRoute::test_callback_inspection_newsig",
      "test/test_router.py::TestRouter::testBasic",
      "test/test_router.py::TestRouter::testBuild",
      "test/test_router.py::TestRouter::testBuildAnon",
      "test/test_router.py::TestRouter::testBuildFilter",
      "test/test_router.py::TestRouter::testErrorInPattern",
      "test/test_router.py::TestRouter::testFloatFilter",
      "test/test_router.py::TestRouter::testIntFilter",
      "test/test_router.py::TestRouter::testNewSyntax",
      "test/test_router.py::TestRouter::testParentheses",
      "test/test_router.py::TestRouter::testPathFilter",
      "test/test_router.py::TestRouter::testUnicode",
      "test/test_router.py::TestRouter::testValueErrorInFilter",
      "test/test_router.py::TestRouter::testWildcardNames",
      "test/test_router.py::TestRouter::test_any_static_before_dynamic",
      "test/test_router.py::TestRouter::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouter::test_dynamic_before_static_any",
      "test/test_router.py::TestRouter::test_lots_of_routes",
      "test/test_router.py::TestRouterInCGIMode::testBasic",
      "test/test_router.py::TestRouterInCGIMode::testBuild",
      "test/test_router.py::TestRouterInCGIMode::testBuildAnon",
      "test/test_router.py::TestRouterInCGIMode::testBuildFilter",
      "test/test_router.py::TestRouterInCGIMode::testErrorInPattern",
      "test/test_router.py::TestRouterInCGIMode::testFloatFilter",
      "test/test_router.py::TestRouterInCGIMode::testIntFilter",
      "test/test_router.py::TestRouterInCGIMode::testNewSyntax",
      "test/test_router.py::TestRouterInCGIMode::testParentheses",
      "test/test_router.py::TestRouterInCGIMode::testPathFilter",
      "test/test_router.py::TestRouterInCGIMode::testUnicode",
      "test/test_router.py::TestRouterInCGIMode::testValueErrorInFilter",
      "test/test_router.py::TestRouterInCGIMode::testWildcardNames",
      "test/test_router.py::TestRouterInCGIMode::test_any_static_before_dynamic",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_before_static_any",
      "test/test_router.py::TestRouterInCGIMode::test_lots_of_routes",
      "test/test_securecookies.py::TestSignedCookies::testValid",
      "test/test_securecookies.py::TestSignedCookies::testWrongKey",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testValid",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testWrongKey",
      "test/test_sendfile.py::TestDateParser::test_asctime",
      "test/test_sendfile.py::TestDateParser::test_bad",
      "test/test_sendfile.py::TestDateParser::test_rfc1123",
      "test/test_sendfile.py::TestDateParser::test_rfc850",
      "test/test_sendfile.py::TestSendFile::test_custom_headers",
      "test/test_sendfile.py::TestSendFile::test_download",
      "test/test_sendfile.py::TestSendFile::test_etag",
      "test/test_sendfile.py::TestSendFile::test_file_not_readable",
      "test/test_sendfile.py::TestSendFile::test_ims",
      "test/test_sendfile.py::TestSendFile::test_ims_empty",
      "test/test_sendfile.py::TestSendFile::test_invalid",
      "test/test_sendfile.py::TestSendFile::test_mime",
      "test/test_sendfile.py::TestSendFile::test_mime_gzip",
      "test/test_sendfile.py::TestSendFile::test_range",
      "test/test_sendfile.py::TestSendFile::test_range_parser",
      "test/test_sendfile.py::TestSendFile::test_valid",
      "test/test_stpl.py::TestSimpleTemplate::test_blocks",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_block_keywords_eat_prefixed_code",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_no_whitespace_before_stmt",
      "test/test_stpl.py::TestSimpleTemplate::test_commentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_commentonly",
      "test/test_stpl.py::TestSimpleTemplate::test_data",
      "test/test_stpl.py::TestSimpleTemplate::test_dedentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_defnied",
      "test/test_stpl.py::TestSimpleTemplate::test_elsebug",
      "test/test_stpl.py::TestSimpleTemplate::test_error",
      "test/test_stpl.py::TestSimpleTemplate::test_escape",
      "test/test_stpl.py::TestSimpleTemplate::test_escaped_codelines",
      "test/test_stpl.py::TestSimpleTemplate::test_file",
      "test/test_stpl.py::TestSimpleTemplate::test_get",
      "test/test_stpl.py::TestSimpleTemplate::test_global_config",
      "test/test_stpl.py::TestSimpleTemplate::test_htmlutils_quote",
      "test/test_stpl.py::TestSimpleTemplate::test_import",
      "test/test_stpl.py::TestSimpleTemplate::test_include",
      "test/test_stpl.py::TestSimpleTemplate::test_multiline",
      "test/test_stpl.py::TestSimpleTemplate::test_name",
      "test/test_stpl.py::TestSimpleTemplate::test_newline_in_parameterlist",
      "test/test_stpl.py::TestSimpleTemplate::test_nobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape_setting",
      "test/test_stpl.py::TestSimpleTemplate::test_nonobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_notfound",
      "test/test_stpl.py::TestSimpleTemplate::test_onelineblocks",
      "test/test_stpl.py::TestSimpleTemplate::test_onelinebugs",
      "test/test_stpl.py::TestSimpleTemplate::test_rebase",
      "test/test_stpl.py::TestSimpleTemplate::test_self_as_variable_name",
      "test/test_stpl.py::TestSimpleTemplate::test_setdefault",
      "test/test_stpl.py::TestSimpleTemplate::test_string",
      "test/test_stpl.py::TestSimpleTemplate::test_template_shortcut",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode_code",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator_issue_407",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks_end_bug",
      "test/test_stpl.py::TestSTPLDir::test_end_keyword_on_same_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_block",
      "test/test_stpl.py::TestSTPLDir::test_multiline_comprehensions_in_code_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_after_end",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_in_single_line_code",
      "test/test_stpl.py::TestSTPLDir::test_multiline_find_eob_in_comments",
      "test/test_stpl.py::TestSTPLDir::test_multiline_ignore_eob_in_string",
      "test/test_stpl.py::TestSTPLDir::test_multiline_indention",
      "test/test_stpl.py::TestSTPLDir::test_multiline_strings_in_code_line",
      "test/test_wsgi.py::TestWsgi::test_303",
      "test/test_wsgi.py::TestWsgi::test_401",
      "test/test_wsgi.py::TestWsgi::test_500",
      "test/test_wsgi.py::TestWsgi::test_500_unicode",
      "test/test_wsgi.py::TestWsgi::test_anymethod",
      "test/test_wsgi.py::TestWsgi::test_cookie",
      "test/test_wsgi.py::TestWsgi::test_generator_callback",
      "test/test_wsgi.py::TestWsgi::test_get",
      "test/test_wsgi.py::TestWsgi::test_headget",
      "test/test_wsgi.py::TestWsgi::test_post",
      "test/test_wsgi.py::TestWsgi::test_request_attrs",
      "test/test_wsgi.py::TestWsgi::test_utf8_404",
      "test/test_wsgi.py::TestWsgi::test_utf8_header",
      "test/test_wsgi.py::TestWsgi::test_utf8_url",
      "test/test_wsgi.py::TestErrorHandling::test_error_routing",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_may_rise_response_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception_in_before_hook",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_sees_HTTPError_response",
      "test/test_wsgi.py::TestRouteDecorator::test_after_response_hook_can_set_headers",
      "test/test_wsgi.py::TestRouteDecorator::test_apply",
      "test/test_wsgi.py::TestRouteDecorator::test_apply_list",
      "test/test_wsgi.py::TestRouteDecorator::test_callback",
      "test/test_wsgi.py::TestRouteDecorator::test_decorators",
      "test/test_wsgi.py::TestRouteDecorator::test_hooks",
      "test/test_wsgi.py::TestRouteDecorator::test_method",
      "test/test_wsgi.py::TestRouteDecorator::test_method_list",
      "test/test_wsgi.py::TestRouteDecorator::test_name",
      "test/test_wsgi.py::TestRouteDecorator::test_no_params_at_all",
      "test/test_wsgi.py::TestRouteDecorator::test_no_path",
      "test/test_wsgi.py::TestRouteDecorator::test_path_list",
      "test/test_wsgi.py::TestRouteDecorator::test_single_path",
      "test/test_wsgi.py::TestRouteDecorator::test_template",
      "test/test_wsgi.py::TestRouteDecorator::test_template_opts",
      "test/test_wsgi.py::TestDecorators::test_autoroute",
      "test/test_wsgi.py::TestDecorators::test_routebuild",
      "test/test_wsgi.py::TestDecorators::test_truncate_body",
      "test/test_wsgi.py::TestDecorators::test_view",
      "test/test_wsgi.py::TestDecorators::test_view_error",
      "test/test_wsgi.py::TestAppShortcuts::testWithStatement",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts_with_different_name"
    ],
    "created_at": "2025-06-19T18:37:09.615178",
    "image_name": "swesmith.x86_64.bottlepy__bottle.a8dfef30",
    "base_commit": "main",
    "problem_statement": "ConfigDict.overlay keeps overlays alive forever  \n===============================================\n\n### What happened?  \nSince the latest commit, every call to `ConfigDict.overlay()` leaves a strong reference behind.  \nEven after all user-land references are deleted and `gc.collect()` is run, the overlay object is **not** reclaimed.  \nIn long-running applications that create many transient overlays (e.g. when using per-request configuration layers) the process memory keeps growing.\n\n### What did you expect to happen?  \nIf the application drops the last reference to the overlay, it should be garbage-collected and disappear from `cfg._overlays` (the weakref list).  \nIn other words, creating and discarding an overlay should have (almost) no long-term memory cost.\n\n### Minimal, copy-paste-able example\n\n```python\nimport gc, sys, bottle\n\ncfg = bottle.ConfigDict()\nfor i in range(3):\n    ov = cfg.overlay()          # create a short-lived overlay\n    ov['key'] = i\n    # overlay goes out of scope here\n\n# Drop the last strong reference and force a collection\ngc.collect()\n\nlive = [r for r in cfg._overlays if r() is not None]\nprint(\"live overlays:\", len(live))        # \u2190 observed\nprint(\"expected live:\", 0)                # \u2190 expected\n```\n\nCurrent `main` prints something like\n\n```\nlive overlays: 3\nexpected live: 0\n```\n\n### Why this matters  \nFramework users who rely on temporary overlays (e.g. in plugins or per-request hooks) will gradually leak memory.  \nA busy service that processes thousands of requests per minute can accumulate thousands of unreachable, yet undead, `ConfigDict` instances.\n\n### Environment  \nBottle: current `master` (commit after XXX)  \nPython: 3.10 / 3.11  \nOS: Linux and macOS (reproduced on both)  \n\n_No additional packages required._"
  },
  {
    "instance_id": "adrienverge__yamllint.8513d9b9.sweagent_buggen__2c0425a8",
    "repo": "swesmith/adrienverge__yamllint.8513d9b9",
    "patch": "diff --git a/yamllint/rules/truthy.py b/yamllint/rules/truthy.py\nindex ff47a83..f311a38 100644\n--- a/yamllint/rules/truthy.py\n+++ b/yamllint/rules/truthy.py\n@@ -181,10 +181,14 @@ def check(conf, token, prev, next, nextnext, context):\n \n     if isinstance(token, yaml.tokens.ScalarToken) and token.style is None:\n         if 'bad_truthy_values' not in context:\n-            context['bad_truthy_values'] = set(\n+            truthy_source = (\n                 TRUTHY_1_2 if yaml_spec_version_for_document(context) == (1, 2)\n-                else TRUTHY_1_1)\n-            context['bad_truthy_values'] -= set(conf['allowed-values'])\n+                else TRUTHY_1_1\n+            )\n+            for _val in conf['allowed-values']:\n+                if _val in truthy_source:\n+                    truthy_source.remove(_val)\n+            context['bad_truthy_values'] = set(truthy_source)\n \n         if token.value in context['bad_truthy_values']:\n             yield LintProblem(token.start_mark.line + 1,\n",
    "FAIL_TO_PASS": [
      "tests/rules/test_truthy.py::TruthyTestCase::test_different_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_enabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_no_allowed_values"
    ],
    "PASS_TO_PASS": [
      "tests/rules/test_anchors.py::AnchorsTestCase::test_disabled",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_duplicated_anchors",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_undeclared_aliases",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_unused_anchors",
      "tests/rules/test_braces.py::ColonTestCase::test_disabled",
      "tests/rules/test_braces.py::ColonTestCase::test_forbid",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_brackets.py::ColonTestCase::test_disabled",
      "tests/rules/test_brackets.py::ColonTestCase::test_forbid",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_colons.py::ColonTestCase::test_after_do_not_confound_with_trailing_space",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled_question_mark",
      "tests/rules/test_colons.py::ColonTestCase::test_after_max",
      "tests/rules/test_colons.py::ColonTestCase::test_after_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_before_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_before_max",
      "tests/rules/test_colons.py::ColonTestCase::test_before_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_both_before_and_after",
      "tests/rules/test_colons.py::ColonTestCase::test_disabled",
      "tests/rules/test_colons.py::ColonTestCase::test_with_alias_as_key",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_after_min",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_with_comma_on_new_line",
      "tests/rules/test_commas.py::CommaTestCase::test_both_before_and_after",
      "tests/rules/test_commas.py::CommaTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_both",
      "tests/rules/test_comments.py::CommentsTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_disabled_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_dos_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_first_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_ignore_shebang",
      "tests/rules/test_comments.py::CommentsTestCase::test_last_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_multi_line_scalar",
      "tests/rules/test_comments.py::CommentsTestCase::test_shebang",
      "tests/rules/test_comments.py::CommentsTestCase::test_spaces_from_content",
      "tests/rules/test_comments.py::CommentsTestCase::test_starting_space",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_disable",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_empty_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_enabled",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_first_line",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_inline_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_no_newline_at_end",
      "tests/rules/test_common.py::CommonTestCase::test_get_line_indent",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_directives",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_disabled",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_forbidden",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_multiple_documents",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_required",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_directives",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_disabled",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_forbidden",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_multiple_documents",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_required",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_0_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_10_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_disabled",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_document",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_end",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_start",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_spaces",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_with_dos_newlines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_all_lines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_different_level",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_block_sequence",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_flow_mapping",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_explicit_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_empty_or_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_complex_objects",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_primative_item",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_multi_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_various_explicit_null",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_disabled",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_inf",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_nan",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_numeral_before_decimal",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_scientific_notation",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_disabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_enabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_max_3",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_non_indented_sequences",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_mapping",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_sequence",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationTestCase::test_broken_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_clear_sequence_item",
      "tests/rules/test_indentation.py::IndentationTestCase::test_cleared_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces_and_indent_sequences",
      "tests/rules/test_indentation.py::IndentationTestCase::test_direct_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_disabled",
      "tests/rules/test_indentation.py::IndentationTestCase::test_empty_value",
      "tests/rules/test_indentation.py::IndentationTestCase::test_explicit_block_mappings",
      "tests/rules/test_indentation.py::IndentationTestCase::test_first_line",
      "tests/rules/test_indentation.py::IndentationTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_whatever",
      "tests/rules/test_indentation.py::IndentationTestCase::test_multi_lines",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections_with_spaces_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_one_space",
      "tests/rules/test_indentation.py::IndentationTestCase::test_over_indented",
      "tests/rules/test_indentation.py::IndentationTestCase::test_return",
      "tests/rules/test_indentation.py::IndentationTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_three_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_two_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_under_indented",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_consistent",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_double_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_folded",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_literal",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_single_quoted",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_disabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_enabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_forbid_duplicated_merge_keys",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_disabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_enabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_duplicates",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_word_length",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_default",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_disabled",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_max_length_10",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_inline_mappings",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_word",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_spaces",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_unicode",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_with_dos_newlines",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_disabled",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_enabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_disabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_dos_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_platform_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type_required_st_sp",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_disabled",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_explicit_octal_values",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_implicit_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_single_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_default",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_single_quotes_not_required",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_disabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_enabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_with_dos_new_lines",
      "tests/rules/test_truthy.py::TruthyTestCase::test_check_keys_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_combined_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_explicit_types",
      "tests/test_cli.py::CommandLineTestCase::test_find_files_recursively",
      "tests/test_cli.py::CommandLineTestCase::test_github_actions_detection",
      "tests/test_cli.py::CommandLineTestCase::test_run_auto_output_without_tty_output",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_in_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_without_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_empty_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_github",
      "tests/test_cli.py::CommandLineTestCase::test_run_list_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_multiple_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings",
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings_and_strict",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_ascii_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_existing_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_universal_newline",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_ok_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_problem_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_piped_output_nocolor",
      "tests/test_cli.py::CommandLineTestCase::test_run_read_from_stdin",
      "tests/test_cli.py::CommandLineTestCase::test_run_version",
      "tests/test_cli.py::CommandLineTestCase::test_run_warning_in_strict_mode",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_arguments",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_empty_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_implicit_extends_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_locale",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_global_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_xdg_config_home_in_env",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_yamllint_config_file_in_env",
      "tests/test_cli.py::CommandLineConfigTestCase::test_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_multiple_parent_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_parent_config_file",
      "tests/test_config.py::SimpleConfigTestCase::test_enable_disable_keywords",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_locale",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore_from_file",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_yaml_files",
      "tests/test_config.py::SimpleConfigTestCase::test_missing_option",
      "tests/test_config.py::SimpleConfigTestCase::test_parse_config",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_option",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_validate_rule_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_yes_no_for_booleans",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_edit_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_file",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_object",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_recursive_default_values",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_reenable_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_remove_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_list",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_str",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_disable_rule",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_rule_partly",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_whole_rule",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_incorrect_type",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_not_exist",
      "tests/test_config.py::IgnoreConfigTestCase::test_mutually_exclusive_ignore_keys",
      "tests/test_config.py::IgnoreConfigTestCase::test_no_ignore",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_from_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_list",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_on_ignored_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_str",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_with_broken_symlink",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignored_from_file",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_with_rule",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_without_rule",
      "tests/test_linter.py::LinterTestCase::test_run_on_bytes",
      "tests/test_linter.py::LinterTestCase::test_run_on_int",
      "tests/test_linter.py::LinterTestCase::test_run_on_list",
      "tests/test_linter.py::LinterTestCase::test_run_on_non_ascii_chars",
      "tests/test_linter.py::LinterTestCase::test_run_on_stream",
      "tests/test_linter.py::LinterTestCase::test_run_on_string",
      "tests/test_linter.py::LinterTestCase::test_run_on_unicode",
      "tests/test_module.py::ModuleTestCase::test_run_module_no_args",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_bad_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_file",
      "tests/test_parser.py::ParserTestCase::test_line_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_or_line_generator",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.21",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.25",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.26",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.29",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.24",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.6",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_empty_flows",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_explicit_mapping",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_mapping_between_sequences",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_sets",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_syntax_errors",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_itself",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_last_line",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules_and_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_not_at_first_position",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_syntax_error",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_indented_directive"
    ],
    "created_at": "2025-06-19T18:37:05.365800",
    "image_name": "swesmith.x86_64.adrienverge__yamllint.8513d9b9",
    "base_commit": "main",
    "problem_statement": "truthy rule: \u201callowed-values\u201d leaks between lint runs\n=====================================================\n\n### What happened?\n\nSince upgrading to the current main branch, the *truthy* rule started behaving\nvery erratically: after I lint one file with a custom `allowed-values` list, the\nnext (otherwise unrelated) lint run silently re-uses those allowances and no\nlonger reports the usual problems.\n\nObserved symptoms:\n\n* Running `yamllint` twice on the **same** file with **different** configs gives\n  different results, even though the file itself never changes.\n* In a long `git ls-files -z | xargs -0 yamllint` session, whichever file is\n  checked first more or less \u201cdecides\u201d which truthy strings are tolerated for\n  everything that follows.\n\n### What did you expect to happen?\n\nEach call to `yamllint` \u2013 or, at the very least, each individual file inside\nthe same process \u2013 should respect only the values that are listed in the\nconfiguration that is active *for that particular file*.\n\n### Minimal reproducer\n\nSave the two snippets below next to each other.\n\n```yaml\n# config1.yml\nrules:\n  truthy:\n    allowed-values: [\"ON\"]     # let\u2019s allow the string \"ON\" explicitly\n```\n\n```yaml\n# config2.yml\nrules:\n  truthy:                      # no special allowances here\n    enabled: true\n```\n\n```yaml\n# sample.yml\nflag: ON\n```\n\nNow run:\n\n```bash\n# 1) with the relaxed config \u2013 OK\nyamllint -d config1.yml sample.yml\necho $?\n\n# 2) with the strict config \u2013 still OK \u2026 should NOT be\nyamllint -d config2.yml sample.yml\necho $?\n```\n\nExpected exit codes: `0` for the first command, **non-zero** for the second\n(one \u201ctruthy value not allowed\u201d problem).  \nActual exit codes: both commands return `0`.\n\nA fresh Python interpreter (or `exec`ing the second command in a new shell)\nrestores the correct behaviour, so the effect only shows up when several lint\nruns share the same process.\n\n### Anything else?\n\nThis only happens when the file being linted contains at least one of the\nstrings mentioned in `allowed-values`; if no overlap exists, everything keeps\nworking normally.  Bisect points to the recent refactor around\n`context['bad_truthy_values']` initialisation.\n\n### Environment\n\n* yamllint master (`8378d8e` at the time of writing)\n* Python 3.11.8\n* macOS 14.3 / Ubuntu 22.04 (reproduces on both)\n"
  },
  {
    "instance_id": "bottlepy__bottle.a8dfef30.sweagent_buggen__c57a1600",
    "repo": "swesmith/bottlepy__bottle.a8dfef30",
    "patch": "diff --git a/bottle.py b/bottle.py\nindex 286b5bc..e41dff6 100755\n--- a/bottle.py\n+++ b/bottle.py\n@@ -1908,6 +1908,28 @@ def _local_property():\n     return property(fget, fset, fdel, 'Thread-local property')\n \n \n+def _shared_dict_property():\n+    shared = {}\n+    ls = threading.local()\n+\n+    def fget(_):\n+        return getattr(ls, 'var', shared)\n+\n+    def fset(_, value):\n+        if isinstance(value, dict):\n+            shared.clear()\n+            shared.update(value)\n+            ls.var = shared\n+        else:\n+            ls.var = value\n+\n+    def fdel(_):\n+        if hasattr(ls, 'var'):\n+            del ls.var\n+\n+    return property(fget, fset, fdel, 'Thread-shared dict property')\n+\n+\n class LocalRequest(BaseRequest):\n     \"\"\" A thread-local subclass of :class:`BaseRequest` with a different\n         set of attributes for each thread. There is usually only one global\n@@ -1928,7 +1950,7 @@ class LocalResponse(BaseResponse):\n     _status_line = _local_property()\n     _status_code = _local_property()\n     _cookies = _local_property()\n-    _headers = _local_property()\n+    _headers = _shared_dict_property()\n     body = _local_property()\n \n \n",
    "FAIL_TO_PASS": [
      "test/test_contextlocals.py::TestThreadLocals::test_response",
      "test/test_wsgi.py::TestRouteDecorator::test_after_response_hook_can_set_headers"
    ],
    "PASS_TO_PASS": [
      "test/test_app.py::TestApplicationObject::test_setattr",
      "test/test_auth.py::TestBasicAuth::test__header",
      "test/test_config.py::TestConfDict::test_gc_overlays",
      "test/test_config.py::TestConfDict::test_isadict",
      "test/test_config.py::TestConfDict::test_load_dict",
      "test/test_config.py::TestConfDict::test_load_module",
      "test/test_config.py::TestConfDict::test_meta",
      "test/test_config.py::TestConfDict::test_namespaces",
      "test/test_config.py::TestConfDict::test_overlay",
      "test/test_config.py::TestConfDict::test_string_save_keys",
      "test/test_config.py::TestConfDict::test_update",
      "test/test_config.py::TestConfDict::test_write",
      "test/test_config.py::TestINIConfigLoader::test_load_config",
      "test/test_contextlocals.py::TestThreadLocals::test_request",
      "test/test_environ.py::TestRequest::test_app_property",
      "test/test_environ.py::TestRequest::test_auth",
      "test/test_environ.py::TestRequest::test_bigbody",
      "test/test_environ.py::TestRequest::test_body",
      "test/test_environ.py::TestRequest::test_body_noclose",
      "test/test_environ.py::TestRequest::test_bodypost",
      "test/test_environ.py::TestRequest::test_chunked",
      "test/test_environ.py::TestRequest::test_chunked_illegal_size",
      "test/test_environ.py::TestRequest::test_chunked_meta_fields",
      "test/test_environ.py::TestRequest::test_chunked_not_chunked_at_all",
      "test/test_environ.py::TestRequest::test_chunked_not_terminated",
      "test/test_environ.py::TestRequest::test_chunked_wrong_size",
      "test/test_environ.py::TestRequest::test_cookie_dict",
      "test/test_environ.py::TestRequest::test_dict_access",
      "test/test_environ.py::TestRequest::test_get",
      "test/test_environ.py::TestRequest::test_getpostleak",
      "test/test_environ.py::TestRequest::test_header_access",
      "test/test_environ.py::TestRequest::test_header_access_special",
      "test/test_environ.py::TestRequest::test_isajax",
      "test/test_environ.py::TestRequest::test_json_empty",
      "test/test_environ.py::TestRequest::test_json_forged_header_issue616",
      "test/test_environ.py::TestRequest::test_json_header_empty_body",
      "test/test_environ.py::TestRequest::test_json_noheader",
      "test/test_environ.py::TestRequest::test_json_tobig",
      "test/test_environ.py::TestRequest::test_json_valid",
      "test/test_environ.py::TestRequest::test_method",
      "test/test_environ.py::TestRequest::test_multipart",
      "test/test_environ.py::TestRequest::test_params",
      "test/test_environ.py::TestRequest::test_path",
      "test/test_environ.py::TestRequest::test_pathshift",
      "test/test_environ.py::TestRequest::test_post",
      "test/test_environ.py::TestRequest::test_readonly_environ",
      "test/test_environ.py::TestRequest::test_remote_addr",
      "test/test_environ.py::TestRequest::test_remote_route",
      "test/test_environ.py::TestRequest::test_route_property",
      "test/test_environ.py::TestRequest::test_script_name",
      "test/test_environ.py::TestRequest::test_tobigbody",
      "test/test_environ.py::TestRequest::test_url",
      "test/test_environ.py::TestRequest::test_url_for_property",
      "test/test_environ.py::TestRequest::test_user_defined_attributes",
      "test/test_environ.py::TestResponse::test_append_header",
      "test/test_environ.py::TestResponse::test_charset",
      "test/test_environ.py::TestResponse::test_clone_cookie",
      "test/test_environ.py::TestResponse::test_constructor_body",
      "test/test_environ.py::TestResponse::test_constructor_headerlist",
      "test/test_environ.py::TestResponse::test_constructor_status",
      "test/test_environ.py::TestResponse::test_content_type",
      "test/test_environ.py::TestResponse::test_delete_cookie",
      "test/test_environ.py::TestResponse::test_delete_header",
      "test/test_environ.py::TestResponse::test_expires_header",
      "test/test_environ.py::TestResponse::test_non_string_header",
      "test/test_environ.py::TestResponse::test_prevent_control_characters_in_headers",
      "test/test_environ.py::TestResponse::test_set_cookie",
      "test/test_environ.py::TestResponse::test_set_cookie_expires",
      "test/test_environ.py::TestResponse::test_set_cookie_httponly",
      "test/test_environ.py::TestResponse::test_set_cookie_maxage",
      "test/test_environ.py::TestResponse::test_set_cookie_name_long_string",
      "test/test_environ.py::TestResponse::test_set_cookie_samesite",
      "test/test_environ.py::TestResponse::test_set_cookie_secure",
      "test/test_environ.py::TestResponse::test_set_cookie_value_long_string",
      "test/test_environ.py::TestResponse::test_set_header",
      "test/test_environ.py::TestResponse::test_set_status",
      "test/test_environ.py::TestResponse::test_wsgi_header_values",
      "test/test_environ.py::TestRedirect::test_absolute_path",
      "test/test_environ.py::TestRedirect::test_host_http_1_0",
      "test/test_environ.py::TestRedirect::test_host_http_1_1",
      "test/test_environ.py::TestRedirect::test_host_http_proxy",
      "test/test_environ.py::TestRedirect::test_redirect_preserve_cookies",
      "test/test_environ.py::TestRedirect::test_relative_path",
      "test/test_environ.py::TestRedirect::test_sheme",
      "test/test_environ.py::TestRedirect::test_specialchars",
      "test/test_environ.py::TestWSGIHeaderDict::test_bytes",
      "test/test_environ.py::TestWSGIHeaderDict::test_dict",
      "test/test_environ.py::TestWSGIHeaderDict::test_empty",
      "test/test_environ.py::TestWSGIHeaderDict::test_native",
      "test/test_environ.py::TestWSGIHeaderDict::test_unicode",
      "test/test_exc.py::TestAppException::test_memory_error",
      "test/test_exc.py::TestAppException::test_no_exc",
      "test/test_exc.py::TestAppException::test_noncatched_error",
      "test/test_exc.py::TestAppException::test_other_error",
      "test/test_exc.py::TestAppException::test_system_Exit",
      "test/test_fileupload.py::TestFileUpload::test_content_type",
      "test/test_fileupload.py::TestFileUpload::test_filename",
      "test/test_fileupload.py::TestFileUpload::test_name",
      "test/test_fileupload.py::TestFileUpload::test_preserve_case_issue_582",
      "test/test_fileupload.py::TestFileUpload::test_raw_filename",
      "test/test_fileupload.py::TestFileUpload::test_save_buffer",
      "test/test_fileupload.py::TestFileUpload::test_save_dir",
      "test/test_fileupload.py::TestFileUpload::test_save_file",
      "test/test_fileupload.py::TestFileUpload::test_save_overwrite_lock",
      "test/test_formsdict.py::TestFormsDict::test_attr_access",
      "test/test_formsdict.py::TestFormsDict::test_attr_missing",
      "test/test_formsdict.py::TestFormsDict::test_attr_unicode_error",
      "test/test_formsdict.py::TestFormsDict::test_decode_method",
      "test/test_html_helper.py::TestHttpUtils::test_accept_header",
      "test/test_importhook.py::TestImportHooks::test_data_import",
      "test/test_importhook.py::TestImportHooks::test_direkt_import",
      "test/test_importhook.py::TestImportHooks::test_ext_isfile",
      "test/test_importhook.py::TestImportHooks::test_from_import",
      "test/test_importhook.py::TestImportHooks::test_import_fail",
      "test/test_jinja2.py::TestJinja2Template::test_custom_filters",
      "test/test_jinja2.py::TestJinja2Template::test_custom_tests",
      "test/test_jinja2.py::TestJinja2Template::test_error",
      "test/test_jinja2.py::TestJinja2Template::test_file",
      "test/test_jinja2.py::TestJinja2Template::test_inherit",
      "test/test_jinja2.py::TestJinja2Template::test_name",
      "test/test_jinja2.py::TestJinja2Template::test_notfound",
      "test/test_jinja2.py::TestJinja2Template::test_string",
      "test/test_jinja2.py::TestJinja2Template::test_template_shortcut",
      "test/test_jinja2.py::TestJinja2Template::test_view_decorator",
      "test/test_mdict.py::TestMultiDict::test_headergetbug",
      "test/test_mdict.py::TestMultiDict::test_isadict",
      "test/test_mdict.py::TestMultiDict::test_isheader",
      "test/test_mdict.py::TestMultiDict::test_ismulti",
      "test/test_mount.py::TestAppMounting::test_mount",
      "test/test_mount.py::TestAppMounting::test_mount_cookie",
      "test/test_mount.py::TestAppMounting::test_mount_get_url",
      "test/test_mount.py::TestAppMounting::test_mount_json_bug",
      "test/test_mount.py::TestAppMounting::test_mount_meta",
      "test/test_mount.py::TestAppMounting::test_mount_no_plugins",
      "test/test_mount.py::TestAppMounting::test_mount_order_bug581",
      "test/test_mount.py::TestAppMounting::test_mount_unicode_path_bug602",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi_ctype_bug",
      "test/test_mount.py::TestAppMounting::test_no_slash_prefix",
      "test/test_mount.py::TestAppMerging::test_merge",
      "test/test_multipart.py::TestHeaderParser::test_options_parser",
      "test/test_multipart.py::TestMultipartParser::test_big_file",
      "test/test_multipart.py::TestMultipartParser::test_file_seek",
      "test/test_multipart.py::TestMultipartParser::test_fuzzy_lineiter",
      "test/test_multipart.py::TestMultipartParser::test_iterlines",
      "test/test_multipart.py::TestMultipartParser::test_iterlines_limit",
      "test/test_multipart.py::TestMultipartParser::test_multiline_header",
      "test/test_multipart.py::TestMultipartParser::test_unicode_value",
      "test/test_multipart.py::TestBrokenMultipart::test_big_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_content_length_to_small",
      "test/test_multipart.py::TestBrokenMultipart::test_disk_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_invalid_header",
      "test/test_multipart.py::TestBrokenMultipart::test_mem_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_content_type",
      "test/test_multipart.py::TestBrokenMultipart::test_no_disposition_header",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_middle_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_no_terminator",
      "test/test_multipart.py::TestBrokenMultipart::test_preamble_before_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_unsupported_content_type",
      "test/test_multipart.py::TestWerkzeugExamples::test_werkzeug_examples",
      "test/test_oorouting.py::TestRoutes::test_route1",
      "test/test_outputfilter.py::TestOutputFilter::test_bytearray",
      "test/test_outputfilter.py::TestOutputFilter::test_bytes",
      "test/test_outputfilter.py::TestOutputFilter::test_cookie",
      "test/test_outputfilter.py::TestOutputFilter::test_empty_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_emptylist",
      "test/test_outputfilter.py::TestOutputFilter::test_error",
      "test/test_outputfilter.py::TestOutputFilter::test_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_file",
      "test/test_outputfilter.py::TestOutputFilter::test_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httperror_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httpresponse_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_illegal",
      "test/test_outputfilter.py::TestOutputFilter::test_invalid_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_iterator_with_close",
      "test/test_outputfilter.py::TestOutputFilter::test_json",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPError",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPResponse",
      "test/test_outputfilter.py::TestOutputFilter::test_json_serialization_error",
      "test/test_outputfilter.py::TestOutputFilter::test_none",
      "test/test_outputfilter.py::TestOutputFilter::test_tuple",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode_generator_callback",
      "test/test_plugins.py::TestPluginManagement::test_install_decorator",
      "test/test_plugins.py::TestPluginManagement::test_install_non_plugin",
      "test/test_plugins.py::TestPluginManagement::test_install_plugin",
      "test/test_plugins.py::TestPluginManagement::test_json_plugin_catches_httpresponse",
      "test/test_plugins.py::TestPluginManagement::test_plugin_oder",
      "test/test_plugins.py::TestPluginManagement::test_route_plugin",
      "test/test_plugins.py::TestPluginManagement::test_skip_all",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_class",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_name",
      "test/test_plugins.py::TestPluginManagement::test_skip_nonlist",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_all",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_name",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_type",
      "test/test_plugins.py::TestPluginAPI::test_apply",
      "test/test_plugins.py::TestPluginAPI::test_callable",
      "test/test_plugins.py::TestPluginAPI::test_close",
      "test/test_plugins.py::TestPluginAPI::test_instance_method_wrapper",
      "test/test_plugins.py::TestPluginAPI::test_setup",
      "test/test_resources.py::TestResourceManager::test_get",
      "test/test_resources.py::TestResourceManager::test_open",
      "test/test_resources.py::TestResourceManager::test_path_absolutize",
      "test/test_resources.py::TestResourceManager::test_path_create",
      "test/test_resources.py::TestResourceManager::test_path_normalize",
      "test/test_resources.py::TestResourceManager::test_path_order",
      "test/test_resources.py::TestResourceManager::test_path_unique",
      "test/test_resources.py::TestResourceManager::test_root_path",
      "test/test_route.py::TestReFlatten::test_re_flatten",
      "test/test_route.py::TestRoute::test_callback_inspection",
      "test/test_route.py::TestRoute::test_callback_inspection_multiple_args",
      "test/test_route.py::TestRoute::test_callback_inspection_newsig",
      "test/test_router.py::TestRouter::testBasic",
      "test/test_router.py::TestRouter::testBuild",
      "test/test_router.py::TestRouter::testBuildAnon",
      "test/test_router.py::TestRouter::testBuildFilter",
      "test/test_router.py::TestRouter::testErrorInPattern",
      "test/test_router.py::TestRouter::testFloatFilter",
      "test/test_router.py::TestRouter::testIntFilter",
      "test/test_router.py::TestRouter::testNewSyntax",
      "test/test_router.py::TestRouter::testParentheses",
      "test/test_router.py::TestRouter::testPathFilter",
      "test/test_router.py::TestRouter::testUnicode",
      "test/test_router.py::TestRouter::testValueErrorInFilter",
      "test/test_router.py::TestRouter::testWildcardNames",
      "test/test_router.py::TestRouter::test_any_static_before_dynamic",
      "test/test_router.py::TestRouter::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouter::test_dynamic_before_static_any",
      "test/test_router.py::TestRouter::test_lots_of_routes",
      "test/test_router.py::TestRouterInCGIMode::testBasic",
      "test/test_router.py::TestRouterInCGIMode::testBuild",
      "test/test_router.py::TestRouterInCGIMode::testBuildAnon",
      "test/test_router.py::TestRouterInCGIMode::testBuildFilter",
      "test/test_router.py::TestRouterInCGIMode::testErrorInPattern",
      "test/test_router.py::TestRouterInCGIMode::testFloatFilter",
      "test/test_router.py::TestRouterInCGIMode::testIntFilter",
      "test/test_router.py::TestRouterInCGIMode::testNewSyntax",
      "test/test_router.py::TestRouterInCGIMode::testParentheses",
      "test/test_router.py::TestRouterInCGIMode::testPathFilter",
      "test/test_router.py::TestRouterInCGIMode::testUnicode",
      "test/test_router.py::TestRouterInCGIMode::testValueErrorInFilter",
      "test/test_router.py::TestRouterInCGIMode::testWildcardNames",
      "test/test_router.py::TestRouterInCGIMode::test_any_static_before_dynamic",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_before_static_any",
      "test/test_router.py::TestRouterInCGIMode::test_lots_of_routes",
      "test/test_securecookies.py::TestSignedCookies::testValid",
      "test/test_securecookies.py::TestSignedCookies::testWrongKey",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testValid",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testWrongKey",
      "test/test_sendfile.py::TestDateParser::test_asctime",
      "test/test_sendfile.py::TestDateParser::test_bad",
      "test/test_sendfile.py::TestDateParser::test_rfc1123",
      "test/test_sendfile.py::TestDateParser::test_rfc850",
      "test/test_sendfile.py::TestSendFile::test_custom_headers",
      "test/test_sendfile.py::TestSendFile::test_download",
      "test/test_sendfile.py::TestSendFile::test_etag",
      "test/test_sendfile.py::TestSendFile::test_file_not_readable",
      "test/test_sendfile.py::TestSendFile::test_ims",
      "test/test_sendfile.py::TestSendFile::test_ims_empty",
      "test/test_sendfile.py::TestSendFile::test_invalid",
      "test/test_sendfile.py::TestSendFile::test_mime",
      "test/test_sendfile.py::TestSendFile::test_mime_gzip",
      "test/test_sendfile.py::TestSendFile::test_range",
      "test/test_sendfile.py::TestSendFile::test_range_parser",
      "test/test_sendfile.py::TestSendFile::test_valid",
      "test/test_stpl.py::TestSimpleTemplate::test_blocks",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_block_keywords_eat_prefixed_code",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_no_whitespace_before_stmt",
      "test/test_stpl.py::TestSimpleTemplate::test_commentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_commentonly",
      "test/test_stpl.py::TestSimpleTemplate::test_data",
      "test/test_stpl.py::TestSimpleTemplate::test_dedentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_defnied",
      "test/test_stpl.py::TestSimpleTemplate::test_elsebug",
      "test/test_stpl.py::TestSimpleTemplate::test_error",
      "test/test_stpl.py::TestSimpleTemplate::test_escape",
      "test/test_stpl.py::TestSimpleTemplate::test_escaped_codelines",
      "test/test_stpl.py::TestSimpleTemplate::test_file",
      "test/test_stpl.py::TestSimpleTemplate::test_get",
      "test/test_stpl.py::TestSimpleTemplate::test_global_config",
      "test/test_stpl.py::TestSimpleTemplate::test_htmlutils_quote",
      "test/test_stpl.py::TestSimpleTemplate::test_import",
      "test/test_stpl.py::TestSimpleTemplate::test_include",
      "test/test_stpl.py::TestSimpleTemplate::test_multiline",
      "test/test_stpl.py::TestSimpleTemplate::test_name",
      "test/test_stpl.py::TestSimpleTemplate::test_newline_in_parameterlist",
      "test/test_stpl.py::TestSimpleTemplate::test_nobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape_setting",
      "test/test_stpl.py::TestSimpleTemplate::test_nonobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_notfound",
      "test/test_stpl.py::TestSimpleTemplate::test_onelineblocks",
      "test/test_stpl.py::TestSimpleTemplate::test_onelinebugs",
      "test/test_stpl.py::TestSimpleTemplate::test_rebase",
      "test/test_stpl.py::TestSimpleTemplate::test_self_as_variable_name",
      "test/test_stpl.py::TestSimpleTemplate::test_setdefault",
      "test/test_stpl.py::TestSimpleTemplate::test_string",
      "test/test_stpl.py::TestSimpleTemplate::test_template_shortcut",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode_code",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator_issue_407",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks_end_bug",
      "test/test_stpl.py::TestSTPLDir::test_end_keyword_on_same_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_block",
      "test/test_stpl.py::TestSTPLDir::test_multiline_comprehensions_in_code_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_after_end",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_in_single_line_code",
      "test/test_stpl.py::TestSTPLDir::test_multiline_find_eob_in_comments",
      "test/test_stpl.py::TestSTPLDir::test_multiline_ignore_eob_in_string",
      "test/test_stpl.py::TestSTPLDir::test_multiline_indention",
      "test/test_stpl.py::TestSTPLDir::test_multiline_strings_in_code_line",
      "test/test_wsgi.py::TestWsgi::test_303",
      "test/test_wsgi.py::TestWsgi::test_401",
      "test/test_wsgi.py::TestWsgi::test_500",
      "test/test_wsgi.py::TestWsgi::test_500_unicode",
      "test/test_wsgi.py::TestWsgi::test_anymethod",
      "test/test_wsgi.py::TestWsgi::test_cookie",
      "test/test_wsgi.py::TestWsgi::test_generator_callback",
      "test/test_wsgi.py::TestWsgi::test_get",
      "test/test_wsgi.py::TestWsgi::test_headget",
      "test/test_wsgi.py::TestWsgi::test_post",
      "test/test_wsgi.py::TestWsgi::test_request_attrs",
      "test/test_wsgi.py::TestWsgi::test_utf8_404",
      "test/test_wsgi.py::TestWsgi::test_utf8_header",
      "test/test_wsgi.py::TestWsgi::test_utf8_url",
      "test/test_wsgi.py::TestErrorHandling::test_error_routing",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_may_rise_response_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception_in_before_hook",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_sees_HTTPError_response",
      "test/test_wsgi.py::TestRouteDecorator::test_apply",
      "test/test_wsgi.py::TestRouteDecorator::test_apply_list",
      "test/test_wsgi.py::TestRouteDecorator::test_callback",
      "test/test_wsgi.py::TestRouteDecorator::test_decorators",
      "test/test_wsgi.py::TestRouteDecorator::test_hooks",
      "test/test_wsgi.py::TestRouteDecorator::test_method",
      "test/test_wsgi.py::TestRouteDecorator::test_method_list",
      "test/test_wsgi.py::TestRouteDecorator::test_name",
      "test/test_wsgi.py::TestRouteDecorator::test_no_params_at_all",
      "test/test_wsgi.py::TestRouteDecorator::test_no_path",
      "test/test_wsgi.py::TestRouteDecorator::test_path_list",
      "test/test_wsgi.py::TestRouteDecorator::test_single_path",
      "test/test_wsgi.py::TestRouteDecorator::test_template",
      "test/test_wsgi.py::TestRouteDecorator::test_template_opts",
      "test/test_wsgi.py::TestDecorators::test_autoroute",
      "test/test_wsgi.py::TestDecorators::test_routebuild",
      "test/test_wsgi.py::TestDecorators::test_truncate_body",
      "test/test_wsgi.py::TestDecorators::test_view",
      "test/test_wsgi.py::TestDecorators::test_view_error",
      "test/test_wsgi.py::TestAppShortcuts::testWithStatement",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts_with_different_name"
    ],
    "created_at": "2025-06-19T18:37:09.336406",
    "image_name": "swesmith.x86_64.bottlepy__bottle.a8dfef30",
    "base_commit": "main",
    "problem_statement": "Response headers are suddenly \u201csticky\u201d across requests  \n-----------------------------------------------------\n\n### Reproduction snippet\n\n```python\nfrom bottle import Bottle, response\nfrom wsgiref.util import setup_testing_defaults\nfrom wsgiref.simple_server import make_server\n\napp = Bottle()\n\n# first route attaches a custom header\n@app.get('/one')\ndef _():\n    response.headers['X-Custom'] = 'route one'\n    return 'one'\n\n# second route does *not* touch headers\n@app.get('/two')\ndef _():\n    return 'two'\n\n# minimal WSGI helper\ndef call(path):\n    env = {}\n    setup_testing_defaults(env)\n    env['PATH_INFO'] = path\n    env['REQUEST_METHOD'] = 'GET'\n    body = []\n    def start(status, hdrs):\n        body.append(dict(hdrs))           # collect headers for inspection\n    list(app(env, start))\n    return body[0]\n\n# simulate two independent requests\nh1 = call('/one')          # {'X-Custom': 'route one', ...}\nh2 = call('/two')          # EXPECT: {}  GOT: {'X-Custom': 'route one', ...}\n\nprint('after /one  ->', h1.get('X-Custom'))\nprint('after /two  ->', h2.get('X-Custom'))\n```\n\n### Expected behaviour\n\n`/two` should **not** inherit the header that `/one` has set.  \nThe second print should therefore output `None`.\n\n```\nafter /one  -> route one\nafter /two  -> None\n```\n\n### Observed behaviour (current `main`)\n\n```\nafter /one  -> route one\nafter /two  -> route one     # \u2190 header leaked into a completely different request\n```\n\nIn a real server this surfaces as random headers (cookies, cache-control, etc.) showing up in unrelated responses whenever the same worker handles multiple requests.  Applications that rely on `after_request` hooks to set or clear headers also behave unpredictably.\n\n### Environment\n\n* Python 3.11\n* bottle master (commit d1e2f\u2026)\n* OS X and Linux, reproduced on both\n* single-threaded and multi-threaded WSGI servers\n\nLet me know if any further info is helpful \u2013 this started happening after pulling the latest changes this morning."
  },
  {
    "instance_id": "adrienverge__yamllint.8513d9b9.sweagent_buggen__44b81388",
    "repo": "swesmith/adrienverge__yamllint.8513d9b9",
    "patch": "diff --git a/yamllint/cli.py b/yamllint/cli.py\nindex 9a39bd8..5eb3c03 100644\n--- a/yamllint/cli.py\n+++ b/yamllint/cli.py\n@@ -65,6 +65,10 @@ class Format:\n \n     @staticmethod\n     def standard_color(problem, filename):\n+        from yamllint import linter as _linter\n+        if problem.level == 'warning':\n+            _linter.PROBLEM_LEVELS['warning'] = _linter.PROBLEM_LEVELS['error']\n+\n         line = f'  \\033[2m{problem.line}:{problem.column}\\033[0m'\n         line += max(20 - len(line), 0) * ' '\n         if problem.level == 'warning':\n",
    "FAIL_TO_PASS": [
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings",
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings_and_strict",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_warning_in_strict_mode",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_implicit_extends_config",
      "tests/test_cli.py::CommandLineConfigTestCase::test_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_multiple_parent_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_parent_config_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_with_broken_symlink",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignored_from_file"
    ],
    "PASS_TO_PASS": [
      "tests/rules/test_anchors.py::AnchorsTestCase::test_disabled",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_duplicated_anchors",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_undeclared_aliases",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_unused_anchors",
      "tests/rules/test_braces.py::ColonTestCase::test_disabled",
      "tests/rules/test_braces.py::ColonTestCase::test_forbid",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_brackets.py::ColonTestCase::test_disabled",
      "tests/rules/test_brackets.py::ColonTestCase::test_forbid",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_colons.py::ColonTestCase::test_after_do_not_confound_with_trailing_space",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled_question_mark",
      "tests/rules/test_colons.py::ColonTestCase::test_after_max",
      "tests/rules/test_colons.py::ColonTestCase::test_after_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_before_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_before_max",
      "tests/rules/test_colons.py::ColonTestCase::test_before_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_both_before_and_after",
      "tests/rules/test_colons.py::ColonTestCase::test_disabled",
      "tests/rules/test_colons.py::ColonTestCase::test_with_alias_as_key",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_after_min",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_with_comma_on_new_line",
      "tests/rules/test_commas.py::CommaTestCase::test_both_before_and_after",
      "tests/rules/test_commas.py::CommaTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_both",
      "tests/rules/test_comments.py::CommentsTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_disabled_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_dos_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_first_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_ignore_shebang",
      "tests/rules/test_comments.py::CommentsTestCase::test_last_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_multi_line_scalar",
      "tests/rules/test_comments.py::CommentsTestCase::test_shebang",
      "tests/rules/test_comments.py::CommentsTestCase::test_spaces_from_content",
      "tests/rules/test_comments.py::CommentsTestCase::test_starting_space",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_disable",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_empty_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_enabled",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_first_line",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_inline_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_no_newline_at_end",
      "tests/rules/test_common.py::CommonTestCase::test_get_line_indent",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_directives",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_disabled",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_forbidden",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_multiple_documents",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_required",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_directives",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_disabled",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_forbidden",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_multiple_documents",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_required",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_0_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_10_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_disabled",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_document",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_end",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_start",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_spaces",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_with_dos_newlines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_all_lines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_different_level",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_block_sequence",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_flow_mapping",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_explicit_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_empty_or_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_complex_objects",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_primative_item",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_multi_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_various_explicit_null",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_disabled",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_inf",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_nan",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_numeral_before_decimal",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_scientific_notation",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_disabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_enabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_max_3",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_non_indented_sequences",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_mapping",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_sequence",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationTestCase::test_broken_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_clear_sequence_item",
      "tests/rules/test_indentation.py::IndentationTestCase::test_cleared_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces_and_indent_sequences",
      "tests/rules/test_indentation.py::IndentationTestCase::test_direct_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_disabled",
      "tests/rules/test_indentation.py::IndentationTestCase::test_empty_value",
      "tests/rules/test_indentation.py::IndentationTestCase::test_explicit_block_mappings",
      "tests/rules/test_indentation.py::IndentationTestCase::test_first_line",
      "tests/rules/test_indentation.py::IndentationTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_whatever",
      "tests/rules/test_indentation.py::IndentationTestCase::test_multi_lines",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections_with_spaces_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_one_space",
      "tests/rules/test_indentation.py::IndentationTestCase::test_over_indented",
      "tests/rules/test_indentation.py::IndentationTestCase::test_return",
      "tests/rules/test_indentation.py::IndentationTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_three_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_two_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_under_indented",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_consistent",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_double_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_folded",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_literal",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_single_quoted",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_disabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_enabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_forbid_duplicated_merge_keys",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_disabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_enabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_duplicates",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_word_length",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_default",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_disabled",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_max_length_10",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_inline_mappings",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_word",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_spaces",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_unicode",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_with_dos_newlines",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_disabled",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_enabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_disabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_dos_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_platform_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type_required_st_sp",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_disabled",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_explicit_octal_values",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_implicit_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_single_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_default",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_single_quotes_not_required",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_disabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_enabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_with_dos_new_lines",
      "tests/rules/test_truthy.py::TruthyTestCase::test_check_keys_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_combined_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_different_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_enabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_explicit_types",
      "tests/rules/test_truthy.py::TruthyTestCase::test_no_allowed_values",
      "tests/test_cli.py::CommandLineTestCase::test_find_files_recursively",
      "tests/test_cli.py::CommandLineTestCase::test_github_actions_detection",
      "tests/test_cli.py::CommandLineTestCase::test_run_auto_output_without_tty_output",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_in_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_without_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_empty_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_github",
      "tests/test_cli.py::CommandLineTestCase::test_run_list_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_multiple_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_ascii_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_existing_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_universal_newline",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_ok_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_problem_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_piped_output_nocolor",
      "tests/test_cli.py::CommandLineTestCase::test_run_read_from_stdin",
      "tests/test_cli.py::CommandLineTestCase::test_run_version",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_arguments",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_empty_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_locale",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_global_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_xdg_config_home_in_env",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_yamllint_config_file_in_env",
      "tests/test_config.py::SimpleConfigTestCase::test_enable_disable_keywords",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_locale",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore_from_file",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_yaml_files",
      "tests/test_config.py::SimpleConfigTestCase::test_missing_option",
      "tests/test_config.py::SimpleConfigTestCase::test_parse_config",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_option",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_validate_rule_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_yes_no_for_booleans",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_edit_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_file",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_object",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_recursive_default_values",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_reenable_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_remove_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_list",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_str",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_disable_rule",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_rule_partly",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_whole_rule",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_incorrect_type",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_not_exist",
      "tests/test_config.py::IgnoreConfigTestCase::test_mutually_exclusive_ignore_keys",
      "tests/test_config.py::IgnoreConfigTestCase::test_no_ignore",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_from_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_list",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_on_ignored_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_str",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_with_rule",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_without_rule",
      "tests/test_linter.py::LinterTestCase::test_run_on_bytes",
      "tests/test_linter.py::LinterTestCase::test_run_on_int",
      "tests/test_linter.py::LinterTestCase::test_run_on_list",
      "tests/test_linter.py::LinterTestCase::test_run_on_non_ascii_chars",
      "tests/test_linter.py::LinterTestCase::test_run_on_stream",
      "tests/test_linter.py::LinterTestCase::test_run_on_string",
      "tests/test_linter.py::LinterTestCase::test_run_on_unicode",
      "tests/test_module.py::ModuleTestCase::test_run_module_no_args",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_bad_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_file",
      "tests/test_parser.py::ParserTestCase::test_line_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_or_line_generator",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.21",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.25",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.26",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.29",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.24",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.6",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_empty_flows",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_explicit_mapping",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_mapping_between_sequences",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_sets",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_syntax_errors",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_itself",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_last_line",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules_and_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_not_at_first_position",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_syntax_error",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_indented_directive"
    ],
    "created_at": "2025-06-19T18:37:05.653473",
    "image_name": "swesmith.x86_64.adrienverge__yamllint.8513d9b9",
    "base_commit": "main",
    "problem_statement": "`--no-warnings` (and anything that relies on the warning \u2260 error distinction) stops working after the first message is printed\n--------------------------------------------------------------------\n\n#### Description  \nSince the latest release, as soon as yamllint prints the very first warning, every *other* warning in the same process suddenly behaves like an error:  \n\u2022 they show up even when `--no-warnings` is given,  \n\u2022 they trigger a non-zero exit status when running without `--strict`,  \n\u2022 in `--strict` mode the exit code becomes 2 instead of 1.\n\nIt looks as if the linter forgets what the numeric \u201cwarning\u201d level is after the first formatted output and starts treating it as \u201cerror\u201d for the remainder of the run.\n\n#### How to Reproduce\n\n```\n# minimal file that only raises a warning (line-length 81)\ncat > longline.yml <<'YAML'\na: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\nYAML\n\n# sanity check \u2013 should print one warning and exit 0\nyamllint longline.yml && echo \"exit=$?\"\n\n# now the same command, but ignoring warnings completely\nyamllint --no-warnings longline.yml && echo \"exit=$?\"\n```\n\nObserved on current `main` (`pip install git+https://github.com/adrienverge/yamllint.git`).\n\n#### Expected result\n\n```\nlongline.yml\n  1:81       warning  line-length  (line length (81 > 80))\n\nexit=0\n\n# with --no-warnings there should be no output at all\nexit=0\n```\n\n#### Actual result on current `main`\n\n```\nlongline.yml\n  1:81       warning  line-length  (line length (81 > 80))\n\nexit=0\n\nlongline.yml\n  1:81       error  line-length  (line length (81 > 80))\n\nexit=1       # \u2190 treated as an error despite --no-warnings\n```\n\nThe same change in behaviour can be seen when running several files in a row, or when using `--strict`: the first warning is printed normally, then every subsequent warning is upgraded to an error.\n\n#### Environment\n\nyamllint 1.34.0+HEAD  \nPython 3.11.8 on macOS 14.3 (reproduced in a Docker container too)\n\n---\n\nLet me know if you need any additional info, I can bisect/try patches."
  },
  {
    "instance_id": "bottlepy__bottle.a8dfef30.sweagent_buggen__56f96296",
    "repo": "swesmith/bottlepy__bottle.a8dfef30",
    "patch": "diff --git a/bottle.py b/bottle.py\nindex 286b5bc..faf86cd 100755\n--- a/bottle.py\n+++ b/bottle.py\n@@ -190,12 +190,23 @@ def depr(major, minor, cause, fix, stacklevel=3):\n \n \n def makelist(data):  # This is just too handy\n-    if isinstance(data, (tuple, list, set, dict)):\n+    # Optimization: if the given object already resembles a collection we\n+    # can avoid creating a new list copy. Lists returned from this helper are\n+    # often processed immediately afterwards, so we only copy objects that are\n+    # known to be immutable or where a copy is required (tuple, set, dict).\n+    if isinstance(data, (tuple, set, dict)):\n         return list(data)\n-    elif data:\n+    # If the caller already passed a list we can safely return it as-is to\n+    # avoid the extra allocation.\n+    if isinstance(data, list):\n+        return data\n+    # Some plugin instances provide an ``apply`` attribute and behave like\n+    # callables. Treat these objects as atomic to avoid unnecessary wrapping.\n+    if hasattr(data, 'apply'):\n+        return data\n+    if data:\n         return [data]\n-    else:\n-        return []\n+    return []\n \n \n class DictProperty(object):\n",
    "FAIL_TO_PASS": [
      "test/test_plugins.py::TestPluginManagement::test_skip_nonlist"
    ],
    "PASS_TO_PASS": [
      "test/test_app.py::TestApplicationObject::test_setattr",
      "test/test_auth.py::TestBasicAuth::test__header",
      "test/test_config.py::TestConfDict::test_gc_overlays",
      "test/test_config.py::TestConfDict::test_isadict",
      "test/test_config.py::TestConfDict::test_load_dict",
      "test/test_config.py::TestConfDict::test_load_module",
      "test/test_config.py::TestConfDict::test_meta",
      "test/test_config.py::TestConfDict::test_namespaces",
      "test/test_config.py::TestConfDict::test_overlay",
      "test/test_config.py::TestConfDict::test_string_save_keys",
      "test/test_config.py::TestConfDict::test_update",
      "test/test_config.py::TestConfDict::test_write",
      "test/test_config.py::TestINIConfigLoader::test_load_config",
      "test/test_contextlocals.py::TestThreadLocals::test_request",
      "test/test_contextlocals.py::TestThreadLocals::test_response",
      "test/test_environ.py::TestRequest::test_app_property",
      "test/test_environ.py::TestRequest::test_auth",
      "test/test_environ.py::TestRequest::test_bigbody",
      "test/test_environ.py::TestRequest::test_body",
      "test/test_environ.py::TestRequest::test_body_noclose",
      "test/test_environ.py::TestRequest::test_bodypost",
      "test/test_environ.py::TestRequest::test_chunked",
      "test/test_environ.py::TestRequest::test_chunked_illegal_size",
      "test/test_environ.py::TestRequest::test_chunked_meta_fields",
      "test/test_environ.py::TestRequest::test_chunked_not_chunked_at_all",
      "test/test_environ.py::TestRequest::test_chunked_not_terminated",
      "test/test_environ.py::TestRequest::test_chunked_wrong_size",
      "test/test_environ.py::TestRequest::test_cookie_dict",
      "test/test_environ.py::TestRequest::test_dict_access",
      "test/test_environ.py::TestRequest::test_get",
      "test/test_environ.py::TestRequest::test_getpostleak",
      "test/test_environ.py::TestRequest::test_header_access",
      "test/test_environ.py::TestRequest::test_header_access_special",
      "test/test_environ.py::TestRequest::test_isajax",
      "test/test_environ.py::TestRequest::test_json_empty",
      "test/test_environ.py::TestRequest::test_json_forged_header_issue616",
      "test/test_environ.py::TestRequest::test_json_header_empty_body",
      "test/test_environ.py::TestRequest::test_json_noheader",
      "test/test_environ.py::TestRequest::test_json_tobig",
      "test/test_environ.py::TestRequest::test_json_valid",
      "test/test_environ.py::TestRequest::test_method",
      "test/test_environ.py::TestRequest::test_multipart",
      "test/test_environ.py::TestRequest::test_params",
      "test/test_environ.py::TestRequest::test_path",
      "test/test_environ.py::TestRequest::test_pathshift",
      "test/test_environ.py::TestRequest::test_post",
      "test/test_environ.py::TestRequest::test_readonly_environ",
      "test/test_environ.py::TestRequest::test_remote_addr",
      "test/test_environ.py::TestRequest::test_remote_route",
      "test/test_environ.py::TestRequest::test_route_property",
      "test/test_environ.py::TestRequest::test_script_name",
      "test/test_environ.py::TestRequest::test_tobigbody",
      "test/test_environ.py::TestRequest::test_url",
      "test/test_environ.py::TestRequest::test_url_for_property",
      "test/test_environ.py::TestRequest::test_user_defined_attributes",
      "test/test_environ.py::TestResponse::test_append_header",
      "test/test_environ.py::TestResponse::test_charset",
      "test/test_environ.py::TestResponse::test_clone_cookie",
      "test/test_environ.py::TestResponse::test_constructor_body",
      "test/test_environ.py::TestResponse::test_constructor_headerlist",
      "test/test_environ.py::TestResponse::test_constructor_status",
      "test/test_environ.py::TestResponse::test_content_type",
      "test/test_environ.py::TestResponse::test_delete_cookie",
      "test/test_environ.py::TestResponse::test_delete_header",
      "test/test_environ.py::TestResponse::test_expires_header",
      "test/test_environ.py::TestResponse::test_non_string_header",
      "test/test_environ.py::TestResponse::test_prevent_control_characters_in_headers",
      "test/test_environ.py::TestResponse::test_set_cookie",
      "test/test_environ.py::TestResponse::test_set_cookie_expires",
      "test/test_environ.py::TestResponse::test_set_cookie_httponly",
      "test/test_environ.py::TestResponse::test_set_cookie_maxage",
      "test/test_environ.py::TestResponse::test_set_cookie_name_long_string",
      "test/test_environ.py::TestResponse::test_set_cookie_samesite",
      "test/test_environ.py::TestResponse::test_set_cookie_secure",
      "test/test_environ.py::TestResponse::test_set_cookie_value_long_string",
      "test/test_environ.py::TestResponse::test_set_header",
      "test/test_environ.py::TestResponse::test_set_status",
      "test/test_environ.py::TestResponse::test_wsgi_header_values",
      "test/test_environ.py::TestRedirect::test_absolute_path",
      "test/test_environ.py::TestRedirect::test_host_http_1_0",
      "test/test_environ.py::TestRedirect::test_host_http_1_1",
      "test/test_environ.py::TestRedirect::test_host_http_proxy",
      "test/test_environ.py::TestRedirect::test_redirect_preserve_cookies",
      "test/test_environ.py::TestRedirect::test_relative_path",
      "test/test_environ.py::TestRedirect::test_sheme",
      "test/test_environ.py::TestRedirect::test_specialchars",
      "test/test_environ.py::TestWSGIHeaderDict::test_bytes",
      "test/test_environ.py::TestWSGIHeaderDict::test_dict",
      "test/test_environ.py::TestWSGIHeaderDict::test_empty",
      "test/test_environ.py::TestWSGIHeaderDict::test_native",
      "test/test_environ.py::TestWSGIHeaderDict::test_unicode",
      "test/test_exc.py::TestAppException::test_memory_error",
      "test/test_exc.py::TestAppException::test_no_exc",
      "test/test_exc.py::TestAppException::test_noncatched_error",
      "test/test_exc.py::TestAppException::test_other_error",
      "test/test_exc.py::TestAppException::test_system_Exit",
      "test/test_fileupload.py::TestFileUpload::test_content_type",
      "test/test_fileupload.py::TestFileUpload::test_filename",
      "test/test_fileupload.py::TestFileUpload::test_name",
      "test/test_fileupload.py::TestFileUpload::test_preserve_case_issue_582",
      "test/test_fileupload.py::TestFileUpload::test_raw_filename",
      "test/test_fileupload.py::TestFileUpload::test_save_buffer",
      "test/test_fileupload.py::TestFileUpload::test_save_dir",
      "test/test_fileupload.py::TestFileUpload::test_save_file",
      "test/test_fileupload.py::TestFileUpload::test_save_overwrite_lock",
      "test/test_formsdict.py::TestFormsDict::test_attr_access",
      "test/test_formsdict.py::TestFormsDict::test_attr_missing",
      "test/test_formsdict.py::TestFormsDict::test_attr_unicode_error",
      "test/test_formsdict.py::TestFormsDict::test_decode_method",
      "test/test_html_helper.py::TestHttpUtils::test_accept_header",
      "test/test_importhook.py::TestImportHooks::test_data_import",
      "test/test_importhook.py::TestImportHooks::test_direkt_import",
      "test/test_importhook.py::TestImportHooks::test_ext_isfile",
      "test/test_importhook.py::TestImportHooks::test_from_import",
      "test/test_importhook.py::TestImportHooks::test_import_fail",
      "test/test_jinja2.py::TestJinja2Template::test_custom_filters",
      "test/test_jinja2.py::TestJinja2Template::test_custom_tests",
      "test/test_jinja2.py::TestJinja2Template::test_error",
      "test/test_jinja2.py::TestJinja2Template::test_file",
      "test/test_jinja2.py::TestJinja2Template::test_inherit",
      "test/test_jinja2.py::TestJinja2Template::test_name",
      "test/test_jinja2.py::TestJinja2Template::test_notfound",
      "test/test_jinja2.py::TestJinja2Template::test_string",
      "test/test_jinja2.py::TestJinja2Template::test_template_shortcut",
      "test/test_jinja2.py::TestJinja2Template::test_view_decorator",
      "test/test_mdict.py::TestMultiDict::test_headergetbug",
      "test/test_mdict.py::TestMultiDict::test_isadict",
      "test/test_mdict.py::TestMultiDict::test_isheader",
      "test/test_mdict.py::TestMultiDict::test_ismulti",
      "test/test_mount.py::TestAppMounting::test_mount",
      "test/test_mount.py::TestAppMounting::test_mount_cookie",
      "test/test_mount.py::TestAppMounting::test_mount_get_url",
      "test/test_mount.py::TestAppMounting::test_mount_json_bug",
      "test/test_mount.py::TestAppMounting::test_mount_meta",
      "test/test_mount.py::TestAppMounting::test_mount_no_plugins",
      "test/test_mount.py::TestAppMounting::test_mount_order_bug581",
      "test/test_mount.py::TestAppMounting::test_mount_unicode_path_bug602",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi_ctype_bug",
      "test/test_mount.py::TestAppMounting::test_no_slash_prefix",
      "test/test_mount.py::TestAppMerging::test_merge",
      "test/test_multipart.py::TestHeaderParser::test_options_parser",
      "test/test_multipart.py::TestMultipartParser::test_big_file",
      "test/test_multipart.py::TestMultipartParser::test_file_seek",
      "test/test_multipart.py::TestMultipartParser::test_fuzzy_lineiter",
      "test/test_multipart.py::TestMultipartParser::test_iterlines",
      "test/test_multipart.py::TestMultipartParser::test_iterlines_limit",
      "test/test_multipart.py::TestMultipartParser::test_multiline_header",
      "test/test_multipart.py::TestMultipartParser::test_unicode_value",
      "test/test_multipart.py::TestBrokenMultipart::test_big_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_content_length_to_small",
      "test/test_multipart.py::TestBrokenMultipart::test_disk_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_invalid_header",
      "test/test_multipart.py::TestBrokenMultipart::test_mem_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_content_type",
      "test/test_multipart.py::TestBrokenMultipart::test_no_disposition_header",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_middle_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_no_terminator",
      "test/test_multipart.py::TestBrokenMultipart::test_preamble_before_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_unsupported_content_type",
      "test/test_multipart.py::TestWerkzeugExamples::test_werkzeug_examples",
      "test/test_oorouting.py::TestRoutes::test_route1",
      "test/test_outputfilter.py::TestOutputFilter::test_bytearray",
      "test/test_outputfilter.py::TestOutputFilter::test_bytes",
      "test/test_outputfilter.py::TestOutputFilter::test_cookie",
      "test/test_outputfilter.py::TestOutputFilter::test_empty_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_emptylist",
      "test/test_outputfilter.py::TestOutputFilter::test_error",
      "test/test_outputfilter.py::TestOutputFilter::test_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_file",
      "test/test_outputfilter.py::TestOutputFilter::test_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httperror_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httpresponse_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_illegal",
      "test/test_outputfilter.py::TestOutputFilter::test_invalid_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_iterator_with_close",
      "test/test_outputfilter.py::TestOutputFilter::test_json",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPError",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPResponse",
      "test/test_outputfilter.py::TestOutputFilter::test_json_serialization_error",
      "test/test_outputfilter.py::TestOutputFilter::test_none",
      "test/test_outputfilter.py::TestOutputFilter::test_tuple",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode_generator_callback",
      "test/test_plugins.py::TestPluginManagement::test_install_decorator",
      "test/test_plugins.py::TestPluginManagement::test_install_non_plugin",
      "test/test_plugins.py::TestPluginManagement::test_install_plugin",
      "test/test_plugins.py::TestPluginManagement::test_json_plugin_catches_httpresponse",
      "test/test_plugins.py::TestPluginManagement::test_plugin_oder",
      "test/test_plugins.py::TestPluginManagement::test_route_plugin",
      "test/test_plugins.py::TestPluginManagement::test_skip_all",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_class",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_name",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_all",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_name",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_type",
      "test/test_plugins.py::TestPluginAPI::test_apply",
      "test/test_plugins.py::TestPluginAPI::test_callable",
      "test/test_plugins.py::TestPluginAPI::test_close",
      "test/test_plugins.py::TestPluginAPI::test_instance_method_wrapper",
      "test/test_plugins.py::TestPluginAPI::test_setup",
      "test/test_resources.py::TestResourceManager::test_get",
      "test/test_resources.py::TestResourceManager::test_open",
      "test/test_resources.py::TestResourceManager::test_path_absolutize",
      "test/test_resources.py::TestResourceManager::test_path_create",
      "test/test_resources.py::TestResourceManager::test_path_normalize",
      "test/test_resources.py::TestResourceManager::test_path_order",
      "test/test_resources.py::TestResourceManager::test_path_unique",
      "test/test_resources.py::TestResourceManager::test_root_path",
      "test/test_route.py::TestReFlatten::test_re_flatten",
      "test/test_route.py::TestRoute::test_callback_inspection",
      "test/test_route.py::TestRoute::test_callback_inspection_multiple_args",
      "test/test_route.py::TestRoute::test_callback_inspection_newsig",
      "test/test_router.py::TestRouter::testBasic",
      "test/test_router.py::TestRouter::testBuild",
      "test/test_router.py::TestRouter::testBuildAnon",
      "test/test_router.py::TestRouter::testBuildFilter",
      "test/test_router.py::TestRouter::testErrorInPattern",
      "test/test_router.py::TestRouter::testFloatFilter",
      "test/test_router.py::TestRouter::testIntFilter",
      "test/test_router.py::TestRouter::testNewSyntax",
      "test/test_router.py::TestRouter::testParentheses",
      "test/test_router.py::TestRouter::testPathFilter",
      "test/test_router.py::TestRouter::testUnicode",
      "test/test_router.py::TestRouter::testValueErrorInFilter",
      "test/test_router.py::TestRouter::testWildcardNames",
      "test/test_router.py::TestRouter::test_any_static_before_dynamic",
      "test/test_router.py::TestRouter::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouter::test_dynamic_before_static_any",
      "test/test_router.py::TestRouter::test_lots_of_routes",
      "test/test_router.py::TestRouterInCGIMode::testBasic",
      "test/test_router.py::TestRouterInCGIMode::testBuild",
      "test/test_router.py::TestRouterInCGIMode::testBuildAnon",
      "test/test_router.py::TestRouterInCGIMode::testBuildFilter",
      "test/test_router.py::TestRouterInCGIMode::testErrorInPattern",
      "test/test_router.py::TestRouterInCGIMode::testFloatFilter",
      "test/test_router.py::TestRouterInCGIMode::testIntFilter",
      "test/test_router.py::TestRouterInCGIMode::testNewSyntax",
      "test/test_router.py::TestRouterInCGIMode::testParentheses",
      "test/test_router.py::TestRouterInCGIMode::testPathFilter",
      "test/test_router.py::TestRouterInCGIMode::testUnicode",
      "test/test_router.py::TestRouterInCGIMode::testValueErrorInFilter",
      "test/test_router.py::TestRouterInCGIMode::testWildcardNames",
      "test/test_router.py::TestRouterInCGIMode::test_any_static_before_dynamic",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_before_static_any",
      "test/test_router.py::TestRouterInCGIMode::test_lots_of_routes",
      "test/test_securecookies.py::TestSignedCookies::testValid",
      "test/test_securecookies.py::TestSignedCookies::testWrongKey",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testValid",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testWrongKey",
      "test/test_sendfile.py::TestDateParser::test_asctime",
      "test/test_sendfile.py::TestDateParser::test_bad",
      "test/test_sendfile.py::TestDateParser::test_rfc1123",
      "test/test_sendfile.py::TestDateParser::test_rfc850",
      "test/test_sendfile.py::TestSendFile::test_custom_headers",
      "test/test_sendfile.py::TestSendFile::test_download",
      "test/test_sendfile.py::TestSendFile::test_etag",
      "test/test_sendfile.py::TestSendFile::test_file_not_readable",
      "test/test_sendfile.py::TestSendFile::test_ims",
      "test/test_sendfile.py::TestSendFile::test_ims_empty",
      "test/test_sendfile.py::TestSendFile::test_invalid",
      "test/test_sendfile.py::TestSendFile::test_mime",
      "test/test_sendfile.py::TestSendFile::test_mime_gzip",
      "test/test_sendfile.py::TestSendFile::test_range",
      "test/test_sendfile.py::TestSendFile::test_range_parser",
      "test/test_sendfile.py::TestSendFile::test_valid",
      "test/test_stpl.py::TestSimpleTemplate::test_blocks",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_block_keywords_eat_prefixed_code",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_no_whitespace_before_stmt",
      "test/test_stpl.py::TestSimpleTemplate::test_commentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_commentonly",
      "test/test_stpl.py::TestSimpleTemplate::test_data",
      "test/test_stpl.py::TestSimpleTemplate::test_dedentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_defnied",
      "test/test_stpl.py::TestSimpleTemplate::test_elsebug",
      "test/test_stpl.py::TestSimpleTemplate::test_error",
      "test/test_stpl.py::TestSimpleTemplate::test_escape",
      "test/test_stpl.py::TestSimpleTemplate::test_escaped_codelines",
      "test/test_stpl.py::TestSimpleTemplate::test_file",
      "test/test_stpl.py::TestSimpleTemplate::test_get",
      "test/test_stpl.py::TestSimpleTemplate::test_global_config",
      "test/test_stpl.py::TestSimpleTemplate::test_htmlutils_quote",
      "test/test_stpl.py::TestSimpleTemplate::test_import",
      "test/test_stpl.py::TestSimpleTemplate::test_include",
      "test/test_stpl.py::TestSimpleTemplate::test_multiline",
      "test/test_stpl.py::TestSimpleTemplate::test_name",
      "test/test_stpl.py::TestSimpleTemplate::test_newline_in_parameterlist",
      "test/test_stpl.py::TestSimpleTemplate::test_nobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape_setting",
      "test/test_stpl.py::TestSimpleTemplate::test_nonobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_notfound",
      "test/test_stpl.py::TestSimpleTemplate::test_onelineblocks",
      "test/test_stpl.py::TestSimpleTemplate::test_onelinebugs",
      "test/test_stpl.py::TestSimpleTemplate::test_rebase",
      "test/test_stpl.py::TestSimpleTemplate::test_self_as_variable_name",
      "test/test_stpl.py::TestSimpleTemplate::test_setdefault",
      "test/test_stpl.py::TestSimpleTemplate::test_string",
      "test/test_stpl.py::TestSimpleTemplate::test_template_shortcut",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode_code",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator_issue_407",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks_end_bug",
      "test/test_stpl.py::TestSTPLDir::test_end_keyword_on_same_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_block",
      "test/test_stpl.py::TestSTPLDir::test_multiline_comprehensions_in_code_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_after_end",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_in_single_line_code",
      "test/test_stpl.py::TestSTPLDir::test_multiline_find_eob_in_comments",
      "test/test_stpl.py::TestSTPLDir::test_multiline_ignore_eob_in_string",
      "test/test_stpl.py::TestSTPLDir::test_multiline_indention",
      "test/test_stpl.py::TestSTPLDir::test_multiline_strings_in_code_line",
      "test/test_wsgi.py::TestWsgi::test_303",
      "test/test_wsgi.py::TestWsgi::test_401",
      "test/test_wsgi.py::TestWsgi::test_500",
      "test/test_wsgi.py::TestWsgi::test_500_unicode",
      "test/test_wsgi.py::TestWsgi::test_anymethod",
      "test/test_wsgi.py::TestWsgi::test_cookie",
      "test/test_wsgi.py::TestWsgi::test_generator_callback",
      "test/test_wsgi.py::TestWsgi::test_get",
      "test/test_wsgi.py::TestWsgi::test_headget",
      "test/test_wsgi.py::TestWsgi::test_post",
      "test/test_wsgi.py::TestWsgi::test_request_attrs",
      "test/test_wsgi.py::TestWsgi::test_utf8_404",
      "test/test_wsgi.py::TestWsgi::test_utf8_header",
      "test/test_wsgi.py::TestWsgi::test_utf8_url",
      "test/test_wsgi.py::TestErrorHandling::test_error_routing",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_may_rise_response_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception_in_before_hook",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_sees_HTTPError_response",
      "test/test_wsgi.py::TestRouteDecorator::test_after_response_hook_can_set_headers",
      "test/test_wsgi.py::TestRouteDecorator::test_apply",
      "test/test_wsgi.py::TestRouteDecorator::test_apply_list",
      "test/test_wsgi.py::TestRouteDecorator::test_callback",
      "test/test_wsgi.py::TestRouteDecorator::test_decorators",
      "test/test_wsgi.py::TestRouteDecorator::test_hooks",
      "test/test_wsgi.py::TestRouteDecorator::test_method",
      "test/test_wsgi.py::TestRouteDecorator::test_method_list",
      "test/test_wsgi.py::TestRouteDecorator::test_name",
      "test/test_wsgi.py::TestRouteDecorator::test_no_params_at_all",
      "test/test_wsgi.py::TestRouteDecorator::test_no_path",
      "test/test_wsgi.py::TestRouteDecorator::test_path_list",
      "test/test_wsgi.py::TestRouteDecorator::test_single_path",
      "test/test_wsgi.py::TestRouteDecorator::test_template",
      "test/test_wsgi.py::TestRouteDecorator::test_template_opts",
      "test/test_wsgi.py::TestDecorators::test_autoroute",
      "test/test_wsgi.py::TestDecorators::test_routebuild",
      "test/test_wsgi.py::TestDecorators::test_truncate_body",
      "test/test_wsgi.py::TestDecorators::test_view",
      "test/test_wsgi.py::TestDecorators::test_view_error",
      "test/test_wsgi.py::TestAppShortcuts::testWithStatement",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts_with_different_name"
    ],
    "created_at": "2025-06-19T18:37:07.458456",
    "image_name": "swesmith.x86_64.bottlepy__bottle.a8dfef30",
    "base_commit": "main",
    "problem_statement": "`@route(..., skip=<plugin>)` crashes when a single plugin instance is supplied  \n### What happens?\n\nSince the latest commit, handing a *single* plugin (not a list) to the\n`skip=` argument of `Bottle.route()` explodes with a `TypeError`\ndeep inside the routing machinery:\n\n```\nTraceback (most recent call last):\n  ...\n  File \"bottle.py\", line XXXX, in _add_route\n    for p in skip:\nTypeError: 'MyPlugin' object is not iterable\n```\n\nThe same piece of code worked for years \u2013 `skip` happily accepted either\na single plugin **or** an iterable of plugins.\n\n### How to reproduce\n\n```python\nfrom bottle import Bottle\n\napp = Bottle()\n\nclass MyPlugin:\n    name = 'g1'\n    api  = 2\n    def apply(self, fn, ctx):\n        def _wrapper(*a, **k):\n            return fn(*a, **k) + ';global-1'\n        return _wrapper\n\ng1 = app.install(MyPlugin())\n\n@app.route('/a')\n@app.route('/b', skip=g1)          # <-- only difference\ndef hello():\n    return 'plugin'\n\n# simulate a request without any external test framework\nhandler, _ = app.router.match('/b', 'GET')\nprint(handler())                   # used to print 'plugin'\n```\n\nWith current `master` this prints the traceback shown above instead of\nreturning the response.\n\n### What I expected\n\nHanding a lone plugin instance to `skip=` should behave exactly like\n`skip=[plugin]`:  \nthe route should be executed without the skipped plugin, producing the\nplain response string (`'plugin'` in the example).\n\n### Notes & context\n\n* Works fine if the plugin is wrapped in a list (`skip=[g1]`).\n* Regression observed on Python 3.12 as well as 3.10.\n* First broken build was `bottle 0.13-dev` commit\n  `faf86cd` (the one that tweaked `util.makelist()`).\n\nWould be great to get the \u201csingle value\u201d convenience back \u2013 it\u2019s used in\nlots of code in the wild."
  },
  {
    "instance_id": "burnash__gspread.a8be3b96.sweagent_buggen__f8d6ea11",
    "repo": "swesmith/burnash__gspread.a8be3b96",
    "patch": "diff --git a/gspread/utils.py b/gspread/utils.py\nindex 6daac86..f3cc8fc 100644\n--- a/gspread/utils.py\n+++ b/gspread/utils.py\n@@ -631,7 +631,10 @@ def wid_to_gid(wid: str) -> str:\n \n def rightpad(row: List[Any], max_len: int, padding_value: Any = \"\") -> List[Any]:\n     pad_len = max_len - len(row)\n-    return row + ([padding_value] * pad_len) if pad_len != 0 else row\n+    if pad_len != 0:\n+        row.extend([padding_value] * pad_len)\n+        return row\n+    return row\n \n \n def fill_gaps(\n",
    "FAIL_TO_PASS": [
      "tests/utils_test.py::UtilsTest::test_fill_gaps_with_value"
    ],
    "PASS_TO_PASS": [
      "tests/cell_test.py::CellTest::test_a1_value",
      "tests/cell_test.py::CellTest::test_define_named_range",
      "tests/cell_test.py::CellTest::test_delete_named_range",
      "tests/cell_test.py::CellTest::test_equality",
      "tests/cell_test.py::CellTest::test_merge_cells",
      "tests/cell_test.py::CellTest::test_numeric_value",
      "tests/cell_test.py::CellTest::test_properties",
      "tests/client_test.py::ClientTest::test_access_non_existing_spreadsheet",
      "tests/client_test.py::ClientTest::test_access_private_spreadsheet",
      "tests/client_test.py::ClientTest::test_add_timeout",
      "tests/client_test.py::ClientTest::test_client_export_spreadsheet",
      "tests/client_test.py::ClientTest::test_copy",
      "tests/client_test.py::ClientTest::test_create",
      "tests/client_test.py::ClientTest::test_import_csv",
      "tests/client_test.py::ClientTest::test_list_spreadsheet_files",
      "tests/client_test.py::ClientTest::test_no_found_exeption",
      "tests/client_test.py::ClientTest::test_open_all_has_metadata",
      "tests/client_test.py::ClientTest::test_open_by_key_has_metadata",
      "tests/client_test.py::ClientTest::test_open_by_name_has_metadata",
      "tests/client_test.py::ClientTest::test_openall",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_add_del_worksheet",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_bad_json_api_error",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_creationTime_prop",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_export_spreadsheet",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_get_lastUpdateTime",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_get_worksheet",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_get_worksheet_by_id",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_properties",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_sheet1",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_timezone_and_locale",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_update_title",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_values_batch_get",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_values_get",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_worksheet",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_worksheet_iteration",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_worksheets",
      "tests/spreadsheet_test.py::SpreadsheetTest::test_worksheets_exclude_hidden",
      "tests/utils_test.py::UtilsTest::test_a1_to_grid_range_improper_range",
      "tests/utils_test.py::UtilsTest::test_a1_to_grid_range_other_directions",
      "tests/utils_test.py::UtilsTest::test_a1_to_grid_range_simple",
      "tests/utils_test.py::UtilsTest::test_a1_to_grid_range_unbounded",
      "tests/utils_test.py::UtilsTest::test_a1_to_rowcol",
      "tests/utils_test.py::UtilsTest::test_addr_converters",
      "tests/utils_test.py::UtilsTest::test_column_letter_to_index",
      "tests/utils_test.py::UtilsTest::test_combine_merge_values",
      "tests/utils_test.py::UtilsTest::test_combine_merge_values_from_centre_of_sheet",
      "tests/utils_test.py::UtilsTest::test_combine_merge_values_outside_range",
      "tests/utils_test.py::UtilsTest::test_convert_colors_to_hex_value",
      "tests/utils_test.py::UtilsTest::test_convert_hex_to_color",
      "tests/utils_test.py::UtilsTest::test_extract_id_from_url",
      "tests/utils_test.py::UtilsTest::test_fill_gaps",
      "tests/utils_test.py::UtilsTest::test_fill_gaps_with_non_square_array",
      "tests/utils_test.py::UtilsTest::test_find_table_empty_top_left_corner",
      "tests/utils_test.py::UtilsTest::test_find_table_first_column_gap",
      "tests/utils_test.py::UtilsTest::test_find_table_first_row_gap",
      "tests/utils_test.py::UtilsTest::test_find_table_inner_gap",
      "tests/utils_test.py::UtilsTest::test_find_table_last_column_gap",
      "tests/utils_test.py::UtilsTest::test_find_table_simple",
      "tests/utils_test.py::UtilsTest::test_get_a1_from_absolute_range",
      "tests/utils_test.py::UtilsTest::test_get_gid",
      "tests/utils_test.py::UtilsTest::test_is_full_a1_notation",
      "tests/utils_test.py::UtilsTest::test_no_extract_id_from_url",
      "tests/utils_test.py::UtilsTest::test_numericise",
      "tests/utils_test.py::UtilsTest::test_rowcol_to_a1",
      "tests/utils_test.py::UtilsTest::test_to_records",
      "tests/utils_test.py::UtilsTest::test_to_records_empty_args",
      "tests/worksheet_test.py::WorksheetTest::test_acell",
      "tests/worksheet_test.py::WorksheetTest::test_add_protected_range_normal",
      "tests/worksheet_test.py::WorksheetTest::test_add_protected_range_warning",
      "tests/worksheet_test.py::WorksheetTest::test_add_validation",
      "tests/worksheet_test.py::WorksheetTest::test_append_row",
      "tests/worksheet_test.py::WorksheetTest::test_append_row_with_empty_value",
      "tests/worksheet_test.py::WorksheetTest::test_append_row_with_empty_value_and_table_range",
      "tests/worksheet_test.py::WorksheetTest::test_attributes",
      "tests/worksheet_test.py::WorksheetTest::test_auto_resize_columns",
      "tests/worksheet_test.py::WorksheetTest::test_basic_filters",
      "tests/worksheet_test.py::WorksheetTest::test_batch_clear",
      "tests/worksheet_test.py::WorksheetTest::test_batch_get",
      "tests/worksheet_test.py::WorksheetTest::test_batch_merged_cells",
      "tests/worksheet_test.py::WorksheetTest::test_batch_update",
      "tests/worksheet_test.py::WorksheetTest::test_cell",
      "tests/worksheet_test.py::WorksheetTest::test_cell_return_first",
      "tests/worksheet_test.py::WorksheetTest::test_clear",
      "tests/worksheet_test.py::WorksheetTest::test_clear_tab_color",
      "tests/worksheet_test.py::WorksheetTest::test_copy_cut_range",
      "tests/worksheet_test.py::WorksheetTest::test_delete_cols",
      "tests/worksheet_test.py::WorksheetTest::test_delete_protected_range",
      "tests/worksheet_test.py::WorksheetTest::test_delete_row",
      "tests/worksheet_test.py::WorksheetTest::test_find",
      "tests/worksheet_test.py::WorksheetTest::test_findall",
      "tests/worksheet_test.py::WorksheetTest::test_format",
      "tests/worksheet_test.py::WorksheetTest::test_freeze",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_different_header",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_duplicate_keys",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_numericise_unformatted",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_pad_more_than_one_key",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_pad_one_key",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_pad_values",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_value_render_options",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_with_all_values_blank",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_with_blank_final_headers",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_with_keys_blank",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_records_with_some_values_blank",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_values",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_values_date_time_render_options",
      "tests/worksheet_test.py::WorksheetTest::test_get_all_values_title_is_a1_notation",
      "tests/worksheet_test.py::WorksheetTest::test_get_and_get_values_have_same_signature",
      "tests/worksheet_test.py::WorksheetTest::test_get_merge_cells_and_unmerge_cells",
      "tests/worksheet_test.py::WorksheetTest::test_get_notes",
      "tests/worksheet_test.py::WorksheetTest::test_get_notes_2nd_sheet",
      "tests/worksheet_test.py::WorksheetTest::test_get_returns_ValueRange_with_metadata",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_and_combine_merged_cells",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_and_maintain_size",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_can_emulate_get_with_kwargs",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_merge_cells_from_centre_of_sheet",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_merge_cells_outside_of_range",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_merge_cells_with_named_range",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_returns_padded_get_as_listoflists",
      "tests/worksheet_test.py::WorksheetTest::test_get_values_with_args_or_kwargs",
      "tests/worksheet_test.py::WorksheetTest::test_group_columns",
      "tests/worksheet_test.py::WorksheetTest::test_group_rows",
      "tests/worksheet_test.py::WorksheetTest::test_hide_columns_rows",
      "tests/worksheet_test.py::WorksheetTest::test_hide_gridlines",
      "tests/worksheet_test.py::WorksheetTest::test_hide_show_worksheet",
      "tests/worksheet_test.py::WorksheetTest::test_insert_cols",
      "tests/worksheet_test.py::WorksheetTest::test_insert_row",
      "tests/worksheet_test.py::WorksheetTest::test_range",
      "tests/worksheet_test.py::WorksheetTest::test_range_get_all_values",
      "tests/worksheet_test.py::WorksheetTest::test_range_reversed",
      "tests/worksheet_test.py::WorksheetTest::test_range_unbounded",
      "tests/worksheet_test.py::WorksheetTest::test_reorder_worksheets",
      "tests/worksheet_test.py::WorksheetTest::test_resize",
      "tests/worksheet_test.py::WorksheetTest::test_show_gridlines",
      "tests/worksheet_test.py::WorksheetTest::test_sort",
      "tests/worksheet_test.py::WorksheetTest::test_update_acell",
      "tests/worksheet_test.py::WorksheetTest::test_update_and_get",
      "tests/worksheet_test.py::WorksheetTest::test_update_cell",
      "tests/worksheet_test.py::WorksheetTest::test_update_cell_multiline",
      "tests/worksheet_test.py::WorksheetTest::test_update_cell_objects",
      "tests/worksheet_test.py::WorksheetTest::test_update_cell_unicode",
      "tests/worksheet_test.py::WorksheetTest::test_update_cells",
      "tests/worksheet_test.py::WorksheetTest::test_update_cells_noncontiguous",
      "tests/worksheet_test.py::WorksheetTest::test_update_cells_unicode",
      "tests/worksheet_test.py::WorksheetTest::test_update_tab_color",
      "tests/worksheet_test.py::WorksheetTest::test_update_title",
      "tests/worksheet_test.py::WorksheetTest::test_worksheet_notes",
      "tests/worksheet_test.py::WorksheetTest::test_worksheet_update_index"
    ],
    "created_at": "2025-06-19T18:37:09.897318",
    "image_name": "swesmith.x86_64.burnash__gspread.a8be3b96",
    "base_commit": "main",
    "problem_statement": "rightpad / fill_gaps mutates the input matrix \u2013 same list object gets longer every call\n------------------------------------------------------------------------------------\n\n### What happens  \nAfter upgrading to the latest commit, `utils.fill_gaps()` (and, by extension, `utils.rightpad()`) no longer returns a *new* padded copy of the row / matrix but silently alters the list that is passed in.  \nBecause of that, every subsequent use of the same list produces ever-growing rows, and mixing different padding values becomes impossible.\n\n### How to reproduce  \n\n```python\nfrom gspread import utils\n\n# original data\nmatrix = [[1, 2, 3, 4],\n          [5, 6, 7, 8]]\n\n# keep an untouched copy for comparison\noriginal_copy = [row[:] for row in matrix]\n\n# 1) pad with the letter \"a\"\nout1 = utils.fill_gaps(matrix, rows=3, cols=6, value=\"a\")\nprint(\"out1:\", out1)\nprint(\"matrix after first call:\", matrix)       # <- unexpectedly changed\n\n# 2) pad the very same matrix with the number 3\nout2 = utils.fill_gaps(matrix, rows=3, cols=6, value=3)\nprint(\"out2:\", out2)                            # <- contains both \"a\" and 3\n```\n\nObserved output (abridged):\n\n```\nout1: [[1, 2, 3, 4, 'a', 'a'],\n       [5, 6, 7, 8, 'a', 'a'],\n       ['a', 'a', 'a', 'a', 'a', 'a']]\n\nmatrix after first call:  # <- was mutated!\n       [[1, 2, 3, 4, 'a', 'a'],\n        [5, 6, 7, 8, 'a', 'a']]\n\nout2: [[1, 2, 3, 4, 'a', 'a', 3, 3],   # <- contains leftover padding\n       [5, 6, 7, 8, 'a', 'a', 3, 3],\n       [3, 3, 3, 3, 3, 3]]\n```\n\n### What I expected  \n1. `matrix` should stay exactly as it was (`original_copy`), leaving the caller to decide whether to reuse or discard it.  \n2. Running the second call with a different padding value should *replace* the padding, not append to the previous one.\n\n### Environment  \n\u2022 gspread: current `main` HEAD (commit a6e7\u2026)  \n\u2022 Python: 3.10.16  \n\u2022 OS: Ubuntu 22.04  \n\nLet me know if you need a minimal repo \u2013 the snippet above should be enough to show the problem."
  },
  {
    "instance_id": "bottlepy__bottle.a8dfef30.sweagent_buggen__60707679",
    "repo": "swesmith/bottlepy__bottle.a8dfef30",
    "patch": "diff --git a/bottle.py b/bottle.py\nindex 286b5bc..dd19df6 100755\n--- a/bottle.py\n+++ b/bottle.py\n@@ -539,15 +539,22 @@ class Route(object):\n         \"\"\" Do all on-demand work immediately (useful for debugging).\"\"\"\n         self.call\n \n-    def all_plugins(self):\n+    def all_plugins(self, _seen_plugins=set()):\n         \"\"\" Yield all Plugins affecting this route. \"\"\"\n         unique = set()\n         for p in reversed(self.app.plugins + self.plugins):\n-            if True in self.skiplist: break\n+            if True in self.skiplist:\n+                break\n+            if p in _seen_plugins:\n+                continue\n             name = getattr(p, 'name', False)\n-            if name and (name in self.skiplist or name in unique): continue\n-            if p in self.skiplist or type(p) in self.skiplist: continue\n-            if name: unique.add(name)\n+            if name and (name in self.skiplist or name in unique):\n+                continue\n+            if p in self.skiplist or type(p) in self.skiplist:\n+                continue\n+            if name:\n+                unique.add(name)\n+            _seen_plugins.add(p)\n             yield p\n \n     def _make_callback(self):\n",
    "FAIL_TO_PASS": [
      "test/test_mount.py::TestAppMounting::test_mount_json_bug",
      "test/test_plugins.py::TestPluginManagement::test_json_plugin_catches_httpresponse",
      "test/test_plugins.py::TestPluginManagement::test_plugin_oder",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_instance",
      "test/test_wsgi.py::TestRouteDecorator::test_apply_list"
    ],
    "PASS_TO_PASS": [
      "test/test_app.py::TestApplicationObject::test_setattr",
      "test/test_auth.py::TestBasicAuth::test__header",
      "test/test_config.py::TestConfDict::test_gc_overlays",
      "test/test_config.py::TestConfDict::test_isadict",
      "test/test_config.py::TestConfDict::test_load_dict",
      "test/test_config.py::TestConfDict::test_load_module",
      "test/test_config.py::TestConfDict::test_meta",
      "test/test_config.py::TestConfDict::test_namespaces",
      "test/test_config.py::TestConfDict::test_overlay",
      "test/test_config.py::TestConfDict::test_string_save_keys",
      "test/test_config.py::TestConfDict::test_update",
      "test/test_config.py::TestConfDict::test_write",
      "test/test_config.py::TestINIConfigLoader::test_load_config",
      "test/test_contextlocals.py::TestThreadLocals::test_request",
      "test/test_contextlocals.py::TestThreadLocals::test_response",
      "test/test_environ.py::TestRequest::test_app_property",
      "test/test_environ.py::TestRequest::test_auth",
      "test/test_environ.py::TestRequest::test_bigbody",
      "test/test_environ.py::TestRequest::test_body",
      "test/test_environ.py::TestRequest::test_body_noclose",
      "test/test_environ.py::TestRequest::test_bodypost",
      "test/test_environ.py::TestRequest::test_chunked",
      "test/test_environ.py::TestRequest::test_chunked_illegal_size",
      "test/test_environ.py::TestRequest::test_chunked_meta_fields",
      "test/test_environ.py::TestRequest::test_chunked_not_chunked_at_all",
      "test/test_environ.py::TestRequest::test_chunked_not_terminated",
      "test/test_environ.py::TestRequest::test_chunked_wrong_size",
      "test/test_environ.py::TestRequest::test_cookie_dict",
      "test/test_environ.py::TestRequest::test_dict_access",
      "test/test_environ.py::TestRequest::test_get",
      "test/test_environ.py::TestRequest::test_getpostleak",
      "test/test_environ.py::TestRequest::test_header_access",
      "test/test_environ.py::TestRequest::test_header_access_special",
      "test/test_environ.py::TestRequest::test_isajax",
      "test/test_environ.py::TestRequest::test_json_empty",
      "test/test_environ.py::TestRequest::test_json_forged_header_issue616",
      "test/test_environ.py::TestRequest::test_json_header_empty_body",
      "test/test_environ.py::TestRequest::test_json_noheader",
      "test/test_environ.py::TestRequest::test_json_tobig",
      "test/test_environ.py::TestRequest::test_json_valid",
      "test/test_environ.py::TestRequest::test_method",
      "test/test_environ.py::TestRequest::test_multipart",
      "test/test_environ.py::TestRequest::test_params",
      "test/test_environ.py::TestRequest::test_path",
      "test/test_environ.py::TestRequest::test_pathshift",
      "test/test_environ.py::TestRequest::test_post",
      "test/test_environ.py::TestRequest::test_readonly_environ",
      "test/test_environ.py::TestRequest::test_remote_addr",
      "test/test_environ.py::TestRequest::test_remote_route",
      "test/test_environ.py::TestRequest::test_route_property",
      "test/test_environ.py::TestRequest::test_script_name",
      "test/test_environ.py::TestRequest::test_tobigbody",
      "test/test_environ.py::TestRequest::test_url",
      "test/test_environ.py::TestRequest::test_url_for_property",
      "test/test_environ.py::TestRequest::test_user_defined_attributes",
      "test/test_environ.py::TestResponse::test_append_header",
      "test/test_environ.py::TestResponse::test_charset",
      "test/test_environ.py::TestResponse::test_clone_cookie",
      "test/test_environ.py::TestResponse::test_constructor_body",
      "test/test_environ.py::TestResponse::test_constructor_headerlist",
      "test/test_environ.py::TestResponse::test_constructor_status",
      "test/test_environ.py::TestResponse::test_content_type",
      "test/test_environ.py::TestResponse::test_delete_cookie",
      "test/test_environ.py::TestResponse::test_delete_header",
      "test/test_environ.py::TestResponse::test_expires_header",
      "test/test_environ.py::TestResponse::test_non_string_header",
      "test/test_environ.py::TestResponse::test_prevent_control_characters_in_headers",
      "test/test_environ.py::TestResponse::test_set_cookie",
      "test/test_environ.py::TestResponse::test_set_cookie_expires",
      "test/test_environ.py::TestResponse::test_set_cookie_httponly",
      "test/test_environ.py::TestResponse::test_set_cookie_maxage",
      "test/test_environ.py::TestResponse::test_set_cookie_name_long_string",
      "test/test_environ.py::TestResponse::test_set_cookie_samesite",
      "test/test_environ.py::TestResponse::test_set_cookie_secure",
      "test/test_environ.py::TestResponse::test_set_cookie_value_long_string",
      "test/test_environ.py::TestResponse::test_set_header",
      "test/test_environ.py::TestResponse::test_set_status",
      "test/test_environ.py::TestResponse::test_wsgi_header_values",
      "test/test_environ.py::TestRedirect::test_absolute_path",
      "test/test_environ.py::TestRedirect::test_host_http_1_0",
      "test/test_environ.py::TestRedirect::test_host_http_1_1",
      "test/test_environ.py::TestRedirect::test_host_http_proxy",
      "test/test_environ.py::TestRedirect::test_redirect_preserve_cookies",
      "test/test_environ.py::TestRedirect::test_relative_path",
      "test/test_environ.py::TestRedirect::test_sheme",
      "test/test_environ.py::TestRedirect::test_specialchars",
      "test/test_environ.py::TestWSGIHeaderDict::test_bytes",
      "test/test_environ.py::TestWSGIHeaderDict::test_dict",
      "test/test_environ.py::TestWSGIHeaderDict::test_empty",
      "test/test_environ.py::TestWSGIHeaderDict::test_native",
      "test/test_environ.py::TestWSGIHeaderDict::test_unicode",
      "test/test_exc.py::TestAppException::test_memory_error",
      "test/test_exc.py::TestAppException::test_no_exc",
      "test/test_exc.py::TestAppException::test_noncatched_error",
      "test/test_exc.py::TestAppException::test_other_error",
      "test/test_exc.py::TestAppException::test_system_Exit",
      "test/test_fileupload.py::TestFileUpload::test_content_type",
      "test/test_fileupload.py::TestFileUpload::test_filename",
      "test/test_fileupload.py::TestFileUpload::test_name",
      "test/test_fileupload.py::TestFileUpload::test_preserve_case_issue_582",
      "test/test_fileupload.py::TestFileUpload::test_raw_filename",
      "test/test_fileupload.py::TestFileUpload::test_save_buffer",
      "test/test_fileupload.py::TestFileUpload::test_save_dir",
      "test/test_fileupload.py::TestFileUpload::test_save_file",
      "test/test_fileupload.py::TestFileUpload::test_save_overwrite_lock",
      "test/test_formsdict.py::TestFormsDict::test_attr_access",
      "test/test_formsdict.py::TestFormsDict::test_attr_missing",
      "test/test_formsdict.py::TestFormsDict::test_attr_unicode_error",
      "test/test_formsdict.py::TestFormsDict::test_decode_method",
      "test/test_html_helper.py::TestHttpUtils::test_accept_header",
      "test/test_importhook.py::TestImportHooks::test_data_import",
      "test/test_importhook.py::TestImportHooks::test_direkt_import",
      "test/test_importhook.py::TestImportHooks::test_ext_isfile",
      "test/test_importhook.py::TestImportHooks::test_from_import",
      "test/test_importhook.py::TestImportHooks::test_import_fail",
      "test/test_jinja2.py::TestJinja2Template::test_custom_filters",
      "test/test_jinja2.py::TestJinja2Template::test_custom_tests",
      "test/test_jinja2.py::TestJinja2Template::test_error",
      "test/test_jinja2.py::TestJinja2Template::test_file",
      "test/test_jinja2.py::TestJinja2Template::test_inherit",
      "test/test_jinja2.py::TestJinja2Template::test_name",
      "test/test_jinja2.py::TestJinja2Template::test_notfound",
      "test/test_jinja2.py::TestJinja2Template::test_string",
      "test/test_jinja2.py::TestJinja2Template::test_template_shortcut",
      "test/test_jinja2.py::TestJinja2Template::test_view_decorator",
      "test/test_mdict.py::TestMultiDict::test_headergetbug",
      "test/test_mdict.py::TestMultiDict::test_isadict",
      "test/test_mdict.py::TestMultiDict::test_isheader",
      "test/test_mdict.py::TestMultiDict::test_ismulti",
      "test/test_mount.py::TestAppMounting::test_mount",
      "test/test_mount.py::TestAppMounting::test_mount_cookie",
      "test/test_mount.py::TestAppMounting::test_mount_get_url",
      "test/test_mount.py::TestAppMounting::test_mount_meta",
      "test/test_mount.py::TestAppMounting::test_mount_no_plugins",
      "test/test_mount.py::TestAppMounting::test_mount_order_bug581",
      "test/test_mount.py::TestAppMounting::test_mount_unicode_path_bug602",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi",
      "test/test_mount.py::TestAppMounting::test_mount_wsgi_ctype_bug",
      "test/test_mount.py::TestAppMounting::test_no_slash_prefix",
      "test/test_mount.py::TestAppMerging::test_merge",
      "test/test_multipart.py::TestHeaderParser::test_options_parser",
      "test/test_multipart.py::TestMultipartParser::test_big_file",
      "test/test_multipart.py::TestMultipartParser::test_file_seek",
      "test/test_multipart.py::TestMultipartParser::test_fuzzy_lineiter",
      "test/test_multipart.py::TestMultipartParser::test_iterlines",
      "test/test_multipart.py::TestMultipartParser::test_iterlines_limit",
      "test/test_multipart.py::TestMultipartParser::test_multiline_header",
      "test/test_multipart.py::TestMultipartParser::test_unicode_value",
      "test/test_multipart.py::TestBrokenMultipart::test_big_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_content_length_to_small",
      "test/test_multipart.py::TestBrokenMultipart::test_disk_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_invalid_header",
      "test/test_multipart.py::TestBrokenMultipart::test_mem_limit",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_missing_content_type",
      "test/test_multipart.py::TestBrokenMultipart::test_no_disposition_header",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_newline_after_middle_content",
      "test/test_multipart.py::TestBrokenMultipart::test_no_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_no_terminator",
      "test/test_multipart.py::TestBrokenMultipart::test_preamble_before_start_boundary",
      "test/test_multipart.py::TestBrokenMultipart::test_unsupported_content_type",
      "test/test_multipart.py::TestWerkzeugExamples::test_werkzeug_examples",
      "test/test_oorouting.py::TestRoutes::test_route1",
      "test/test_outputfilter.py::TestOutputFilter::test_bytearray",
      "test/test_outputfilter.py::TestOutputFilter::test_bytes",
      "test/test_outputfilter.py::TestOutputFilter::test_cookie",
      "test/test_outputfilter.py::TestOutputFilter::test_empty_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_emptylist",
      "test/test_outputfilter.py::TestOutputFilter::test_error",
      "test/test_outputfilter.py::TestOutputFilter::test_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error",
      "test/test_outputfilter.py::TestOutputFilter::test_fatal_error_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_file",
      "test/test_outputfilter.py::TestOutputFilter::test_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httperror_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_httpresponse_in_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_illegal",
      "test/test_outputfilter.py::TestOutputFilter::test_invalid_generator_callback",
      "test/test_outputfilter.py::TestOutputFilter::test_iterator_with_close",
      "test/test_outputfilter.py::TestOutputFilter::test_json",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPError",
      "test/test_outputfilter.py::TestOutputFilter::test_json_HTTPResponse",
      "test/test_outputfilter.py::TestOutputFilter::test_json_serialization_error",
      "test/test_outputfilter.py::TestOutputFilter::test_none",
      "test/test_outputfilter.py::TestOutputFilter::test_tuple",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode",
      "test/test_outputfilter.py::TestOutputFilter::test_unicode_generator_callback",
      "test/test_plugins.py::TestPluginManagement::test_install_decorator",
      "test/test_plugins.py::TestPluginManagement::test_install_non_plugin",
      "test/test_plugins.py::TestPluginManagement::test_install_plugin",
      "test/test_plugins.py::TestPluginManagement::test_route_plugin",
      "test/test_plugins.py::TestPluginManagement::test_skip_all",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_class",
      "test/test_plugins.py::TestPluginManagement::test_skip_by_name",
      "test/test_plugins.py::TestPluginManagement::test_skip_nonlist",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_all",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_instance",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_name",
      "test/test_plugins.py::TestPluginManagement::test_uninstall_by_type",
      "test/test_plugins.py::TestPluginAPI::test_apply",
      "test/test_plugins.py::TestPluginAPI::test_callable",
      "test/test_plugins.py::TestPluginAPI::test_close",
      "test/test_plugins.py::TestPluginAPI::test_instance_method_wrapper",
      "test/test_plugins.py::TestPluginAPI::test_setup",
      "test/test_resources.py::TestResourceManager::test_get",
      "test/test_resources.py::TestResourceManager::test_open",
      "test/test_resources.py::TestResourceManager::test_path_absolutize",
      "test/test_resources.py::TestResourceManager::test_path_create",
      "test/test_resources.py::TestResourceManager::test_path_normalize",
      "test/test_resources.py::TestResourceManager::test_path_order",
      "test/test_resources.py::TestResourceManager::test_path_unique",
      "test/test_resources.py::TestResourceManager::test_root_path",
      "test/test_route.py::TestReFlatten::test_re_flatten",
      "test/test_route.py::TestRoute::test_callback_inspection",
      "test/test_route.py::TestRoute::test_callback_inspection_multiple_args",
      "test/test_route.py::TestRoute::test_callback_inspection_newsig",
      "test/test_router.py::TestRouter::testBasic",
      "test/test_router.py::TestRouter::testBuild",
      "test/test_router.py::TestRouter::testBuildAnon",
      "test/test_router.py::TestRouter::testBuildFilter",
      "test/test_router.py::TestRouter::testErrorInPattern",
      "test/test_router.py::TestRouter::testFloatFilter",
      "test/test_router.py::TestRouter::testIntFilter",
      "test/test_router.py::TestRouter::testNewSyntax",
      "test/test_router.py::TestRouter::testParentheses",
      "test/test_router.py::TestRouter::testPathFilter",
      "test/test_router.py::TestRouter::testUnicode",
      "test/test_router.py::TestRouter::testValueErrorInFilter",
      "test/test_router.py::TestRouter::testWildcardNames",
      "test/test_router.py::TestRouter::test_any_static_before_dynamic",
      "test/test_router.py::TestRouter::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouter::test_dynamic_before_static_any",
      "test/test_router.py::TestRouter::test_lots_of_routes",
      "test/test_router.py::TestRouterInCGIMode::testBasic",
      "test/test_router.py::TestRouterInCGIMode::testBuild",
      "test/test_router.py::TestRouterInCGIMode::testBuildAnon",
      "test/test_router.py::TestRouterInCGIMode::testBuildFilter",
      "test/test_router.py::TestRouterInCGIMode::testErrorInPattern",
      "test/test_router.py::TestRouterInCGIMode::testFloatFilter",
      "test/test_router.py::TestRouterInCGIMode::testIntFilter",
      "test/test_router.py::TestRouterInCGIMode::testNewSyntax",
      "test/test_router.py::TestRouterInCGIMode::testParentheses",
      "test/test_router.py::TestRouterInCGIMode::testPathFilter",
      "test/test_router.py::TestRouterInCGIMode::testUnicode",
      "test/test_router.py::TestRouterInCGIMode::testValueErrorInFilter",
      "test/test_router.py::TestRouterInCGIMode::testWildcardNames",
      "test/test_router.py::TestRouterInCGIMode::test_any_static_before_dynamic",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_any_if_method_exists",
      "test/test_router.py::TestRouterInCGIMode::test_dynamic_before_static_any",
      "test/test_router.py::TestRouterInCGIMode::test_lots_of_routes",
      "test/test_securecookies.py::TestSignedCookies::testValid",
      "test/test_securecookies.py::TestSignedCookies::testWrongKey",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testValid",
      "test/test_securecookies.py::TestSignedCookiesWithPickle::testWrongKey",
      "test/test_sendfile.py::TestDateParser::test_asctime",
      "test/test_sendfile.py::TestDateParser::test_bad",
      "test/test_sendfile.py::TestDateParser::test_rfc1123",
      "test/test_sendfile.py::TestDateParser::test_rfc850",
      "test/test_sendfile.py::TestSendFile::test_custom_headers",
      "test/test_sendfile.py::TestSendFile::test_download",
      "test/test_sendfile.py::TestSendFile::test_etag",
      "test/test_sendfile.py::TestSendFile::test_file_not_readable",
      "test/test_sendfile.py::TestSendFile::test_ims",
      "test/test_sendfile.py::TestSendFile::test_ims_empty",
      "test/test_sendfile.py::TestSendFile::test_invalid",
      "test/test_sendfile.py::TestSendFile::test_mime",
      "test/test_sendfile.py::TestSendFile::test_mime_gzip",
      "test/test_sendfile.py::TestSendFile::test_range",
      "test/test_sendfile.py::TestSendFile::test_range_parser",
      "test/test_sendfile.py::TestSendFile::test_valid",
      "test/test_stpl.py::TestSimpleTemplate::test_blocks",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_block_keywords_eat_prefixed_code",
      "test/test_stpl.py::TestSimpleTemplate::test_bug_no_whitespace_before_stmt",
      "test/test_stpl.py::TestSimpleTemplate::test_commentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_commentonly",
      "test/test_stpl.py::TestSimpleTemplate::test_data",
      "test/test_stpl.py::TestSimpleTemplate::test_dedentbug",
      "test/test_stpl.py::TestSimpleTemplate::test_defnied",
      "test/test_stpl.py::TestSimpleTemplate::test_elsebug",
      "test/test_stpl.py::TestSimpleTemplate::test_error",
      "test/test_stpl.py::TestSimpleTemplate::test_escape",
      "test/test_stpl.py::TestSimpleTemplate::test_escaped_codelines",
      "test/test_stpl.py::TestSimpleTemplate::test_file",
      "test/test_stpl.py::TestSimpleTemplate::test_get",
      "test/test_stpl.py::TestSimpleTemplate::test_global_config",
      "test/test_stpl.py::TestSimpleTemplate::test_htmlutils_quote",
      "test/test_stpl.py::TestSimpleTemplate::test_import",
      "test/test_stpl.py::TestSimpleTemplate::test_include",
      "test/test_stpl.py::TestSimpleTemplate::test_multiline",
      "test/test_stpl.py::TestSimpleTemplate::test_name",
      "test/test_stpl.py::TestSimpleTemplate::test_newline_in_parameterlist",
      "test/test_stpl.py::TestSimpleTemplate::test_nobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape",
      "test/test_stpl.py::TestSimpleTemplate::test_noescape_setting",
      "test/test_stpl.py::TestSimpleTemplate::test_nonobreak",
      "test/test_stpl.py::TestSimpleTemplate::test_notfound",
      "test/test_stpl.py::TestSimpleTemplate::test_onelineblocks",
      "test/test_stpl.py::TestSimpleTemplate::test_onelinebugs",
      "test/test_stpl.py::TestSimpleTemplate::test_rebase",
      "test/test_stpl.py::TestSimpleTemplate::test_self_as_variable_name",
      "test/test_stpl.py::TestSimpleTemplate::test_setdefault",
      "test/test_stpl.py::TestSimpleTemplate::test_string",
      "test/test_stpl.py::TestSimpleTemplate::test_template_shortcut",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode",
      "test/test_stpl.py::TestSimpleTemplate::test_unicode_code",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator",
      "test/test_stpl.py::TestSimpleTemplate::test_view_decorator_issue_407",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks",
      "test/test_stpl.py::TestSimpleTemplate::test_winbreaks_end_bug",
      "test/test_stpl.py::TestSTPLDir::test_end_keyword_on_same_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_block",
      "test/test_stpl.py::TestSTPLDir::test_multiline_comprehensions_in_code_line",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_after_end",
      "test/test_stpl.py::TestSTPLDir::test_multiline_eob_in_single_line_code",
      "test/test_stpl.py::TestSTPLDir::test_multiline_find_eob_in_comments",
      "test/test_stpl.py::TestSTPLDir::test_multiline_ignore_eob_in_string",
      "test/test_stpl.py::TestSTPLDir::test_multiline_indention",
      "test/test_stpl.py::TestSTPLDir::test_multiline_strings_in_code_line",
      "test/test_wsgi.py::TestWsgi::test_303",
      "test/test_wsgi.py::TestWsgi::test_401",
      "test/test_wsgi.py::TestWsgi::test_500",
      "test/test_wsgi.py::TestWsgi::test_500_unicode",
      "test/test_wsgi.py::TestWsgi::test_anymethod",
      "test/test_wsgi.py::TestWsgi::test_cookie",
      "test/test_wsgi.py::TestWsgi::test_generator_callback",
      "test/test_wsgi.py::TestWsgi::test_get",
      "test/test_wsgi.py::TestWsgi::test_headget",
      "test/test_wsgi.py::TestWsgi::test_post",
      "test/test_wsgi.py::TestWsgi::test_request_attrs",
      "test/test_wsgi.py::TestWsgi::test_utf8_404",
      "test/test_wsgi.py::TestWsgi::test_utf8_header",
      "test/test_wsgi.py::TestWsgi::test_utf8_url",
      "test/test_wsgi.py::TestErrorHandling::test_error_routing",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_may_rise_response_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_hooks_run_after_exception_in_before_hook",
      "test/test_wsgi.py::TestRouteDecorator::test_after_request_sees_HTTPError_response",
      "test/test_wsgi.py::TestRouteDecorator::test_after_response_hook_can_set_headers",
      "test/test_wsgi.py::TestRouteDecorator::test_apply",
      "test/test_wsgi.py::TestRouteDecorator::test_callback",
      "test/test_wsgi.py::TestRouteDecorator::test_decorators",
      "test/test_wsgi.py::TestRouteDecorator::test_hooks",
      "test/test_wsgi.py::TestRouteDecorator::test_method",
      "test/test_wsgi.py::TestRouteDecorator::test_method_list",
      "test/test_wsgi.py::TestRouteDecorator::test_name",
      "test/test_wsgi.py::TestRouteDecorator::test_no_params_at_all",
      "test/test_wsgi.py::TestRouteDecorator::test_no_path",
      "test/test_wsgi.py::TestRouteDecorator::test_path_list",
      "test/test_wsgi.py::TestRouteDecorator::test_single_path",
      "test/test_wsgi.py::TestRouteDecorator::test_template",
      "test/test_wsgi.py::TestRouteDecorator::test_template_opts",
      "test/test_wsgi.py::TestDecorators::test_autoroute",
      "test/test_wsgi.py::TestDecorators::test_routebuild",
      "test/test_wsgi.py::TestDecorators::test_truncate_body",
      "test/test_wsgi.py::TestDecorators::test_view",
      "test/test_wsgi.py::TestDecorators::test_view_error",
      "test/test_wsgi.py::TestAppShortcuts::testWithStatement",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts",
      "test/test_wsgi.py::TestAppShortcuts::test_module_shortcuts_with_different_name"
    ],
    "created_at": "2025-06-19T18:37:09.024651",
    "image_name": "swesmith.x86_64.bottlepy__bottle.a8dfef30",
    "base_commit": "main",
    "problem_statement": "[BUG] `all_plugins()` keeps state between routes  \n\nDescription  \n------------  \nAfter `e7cc5f9` (the change that added the optional `_seen_plugins` argument to\n`Route.all_plugins()`), the list of active plugins starts to \u201cbleed\u201d from one\nroute (or even one application) into the next.  \nOnce a plugin is yielded for the very first route, later routes can no longer\nsee it \u2013 or see _only_ it \u2013 depending on whether they appear before or after\nthe first evaluation.  \nThis breaks a couple of typical patterns such as:\n\n* installing a plugin only for a sub-application created with `mount()`\n* calling `uninstall()` for a single route or instance\n* using `@apply([...])` several times in a single file\n\nReproducer  \n-----------  \n\n```python\nfrom bottle import Bottle, PluginError\n\n# A minimal dummy plugin\nclass DummyPlugin(object):\n    name = 'dummy'\n    api  = 2\n    def apply(self, callback, route):\n        def _wrapper(*a, **k):\n            return 'plugin:' + callback(*a, **k)\n        return _wrapper\n\ndummy = DummyPlugin()\n\napp = Bottle()\n\n# install the plugin only for the first handler ------------------------------\napp.install(dummy)\n\n@app.get('/one')\ndef first():\n    return 'one'\n\n# Examine which plugins are attached to /one\np_one = list(app.routes[-1].all_plugins())   # <\u2014 evaluates all_plugins()\nprint('plugins one:', [getattr(p, \"name\", p) for p in p_one])\n\n# Now remove the plugin and register a second handler ------------------------\napp.uninstall('dummy')\n\n@app.get('/two')\ndef second():\n    return 'two'\n\np_two = list(app.routes[-1].all_plugins())\nprint('plugins two:', [getattr(p, \"name\", p) for p in p_two])\n```\n\nExpected output  \n```\nplugins one: ['dummy']\nplugins two: []\n```\n\nActual output with current `master`  \n```\nplugins one: ['dummy']\nplugins two: ['dummy']   # <-- still there, even though it was uninstalled\n```\n\nA similar surprise happens when the order is reversed: if the first route is\ndefined without any plugins, subsequent routes never receive plugins that are\ninstalled later in the file.\n\nImpact  \n------  \nThe stray state causes:\n\n* mounted apps to inherit or lose plugins unpredictably\n* route specific skips (`route.skiplist.append(plugin)`) to stop working after\n  the first call to `all_plugins()`\n* decorators such as `@apply([my_plugin])` to mis-behave when used more than\n  once in the same module\n\nThanks for taking a look!"
  },
  {
    "instance_id": "adrienverge__yamllint.8513d9b9.sweagent_buggen__03706798",
    "repo": "swesmith/adrienverge__yamllint.8513d9b9",
    "patch": "diff --git a/yamllint/rules/_global_state.py b/yamllint/rules/_global_state.py\nnew file mode 100644\nindex 0000000..bd2dc3f\n--- /dev/null\n+++ b/yamllint/rules/_global_state.py\n@@ -0,0 +1,2 @@\n+# Internal module to hold global state for yamllint rules.\n+_first_missing_starting_space_ignored = False\ndiff --git a/yamllint/rules/comments.py b/yamllint/rules/comments.py\nindex 7e4f04c..146457a 100644\n--- a/yamllint/rules/comments.py\n+++ b/yamllint/rules/comments.py\n@@ -70,8 +70,11 @@ Use this rule to control the position and formatting of comments.\n    ::\n \n     x = 2 ^ 127 - 1 # Mersenne prime number\n+\n \"\"\"\n \n+import yamllint.rules._global_state as _global_state\n+\n \n from yamllint.linter import LintProblem\n \n@@ -86,6 +89,13 @@ DEFAULT = {'require-starting-space': True,\n \n \n def check(conf, comment):\n+    if conf['ignore-shebangs'] and _global_state._first_missing_starting_space_ignored:\n+        end = comment.buffer.find('\\n', comment.pointer)\n+        if end == -1:\n+            end = len(comment.buffer)\n+        if comment.buffer[comment.pointer:end].startswith('#!'):\n+            return\n+\n     if (conf['min-spaces-from-content'] != -1 and comment.is_inline() and\n             comment.pointer - comment.token_before.end_mark.pointer <\n             conf['min-spaces-from-content']):\n@@ -102,7 +112,9 @@ def check(conf, comment):\n                     comment.line_no == 1 and\n                     comment.column_no == 1 and\n                     comment.buffer[text_start] == '!'):\n-                return\n+                if not _global_state._first_missing_starting_space_ignored:\n+                        _global_state._first_missing_starting_space_ignored = True\n+                        return\n             # We can test for both \\r and \\r\\n just by checking first char\n             # \\r itself is a valid newline on some older OS.\n             elif comment.buffer[text_start] not in {' ', '\\n', '\\r', '\\x00'}:\n",
    "FAIL_TO_PASS": [
      "tests/rules/test_comments.py::CommentsTestCase::test_ignore_shebang"
    ],
    "PASS_TO_PASS": [
      "tests/rules/test_anchors.py::AnchorsTestCase::test_disabled",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_duplicated_anchors",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_undeclared_aliases",
      "tests/rules/test_anchors.py::AnchorsTestCase::test_forbid_unused_anchors",
      "tests/rules/test_braces.py::ColonTestCase::test_disabled",
      "tests/rules/test_braces.py::ColonTestCase::test_forbid",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_braces.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_braces.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_brackets.py::ColonTestCase::test_disabled",
      "tests/rules/test_brackets.py::ColonTestCase::test_forbid",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_and_max_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces",
      "tests/rules/test_brackets.py::ColonTestCase::test_min_spaces_empty",
      "tests/rules/test_brackets.py::ColonTestCase::test_mixed_empty_nonempty",
      "tests/rules/test_colons.py::ColonTestCase::test_after_do_not_confound_with_trailing_space",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_after_enabled_question_mark",
      "tests/rules/test_colons.py::ColonTestCase::test_after_max",
      "tests/rules/test_colons.py::ColonTestCase::test_after_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_before_enabled",
      "tests/rules/test_colons.py::ColonTestCase::test_before_max",
      "tests/rules/test_colons.py::ColonTestCase::test_before_with_explicit_block_mappings",
      "tests/rules/test_colons.py::ColonTestCase::test_both_before_and_after",
      "tests/rules/test_colons.py::ColonTestCase::test_disabled",
      "tests/rules/test_colons.py::ColonTestCase::test_with_alias_as_key",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max",
      "tests/rules/test_commas.py::CommaTestCase::test_after_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_after_min",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_3",
      "tests/rules/test_commas.py::CommaTestCase::test_before_max_with_comma_on_new_line",
      "tests/rules/test_commas.py::CommaTestCase::test_both_before_and_after",
      "tests/rules/test_commas.py::CommaTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_both",
      "tests/rules/test_comments.py::CommentsTestCase::test_disabled",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_disabled_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_empty_comment_crlf_dos_newlines",
      "tests/rules/test_comments.py::CommentsTestCase::test_first_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_last_line",
      "tests/rules/test_comments.py::CommentsTestCase::test_multi_line_scalar",
      "tests/rules/test_comments.py::CommentsTestCase::test_shebang",
      "tests/rules/test_comments.py::CommentsTestCase::test_spaces_from_content",
      "tests/rules/test_comments.py::CommentsTestCase::test_starting_space",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_disable",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_empty_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_enabled",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_first_line",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_inline_comment",
      "tests/rules/test_comments_indentation.py::CommentsIndentationTestCase::test_no_newline_at_end",
      "tests/rules/test_common.py::CommonTestCase::test_get_line_indent",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_directives",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_disabled",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_forbidden",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_multiple_documents",
      "tests/rules/test_document_end.py::DocumentEndTestCase::test_required",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_directives",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_disabled",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_forbidden",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_multiple_documents",
      "tests/rules/test_document_start.py::DocumentStartTestCase::test_required",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_0_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_10_empty_lines",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_disabled",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_document",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_end",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_empty_lines_at_start",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_spaces",
      "tests/rules/test_empty_lines.py::EmptyLinesTestCase::test_with_dos_newlines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_all_lines",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_different_level",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_block_sequence",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_empty_flow_mapping",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_explicit_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_empty_or_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_not_end_of_document",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_mappings_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_complex_objects",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_primative_item",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_block_sequences_various_explicit_null",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_comments",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_disabled",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_multi_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_single_line",
      "tests/rules/test_empty_values.py::EmptyValuesTestCase::test_in_flow_mappings_various_explicit_null",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_disabled",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_inf",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_nan",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_numeral_before_decimal",
      "tests/rules/test_float_values.py::FloatValuesTestCase::test_scientific_notation",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_disabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_enabled",
      "tests/rules/test_hyphens.py::HyphenTestCase::test_max_3",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_non_indented_sequences",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_mapping",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_simple_sequence",
      "tests/rules/test_indentation.py::IndentationStackTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_anchors",
      "tests/rules/test_indentation.py::IndentationTestCase::test_broken_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_clear_sequence_item",
      "tests/rules/test_indentation.py::IndentationTestCase::test_cleared_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_consistent_spaces_and_indent_sequences",
      "tests/rules/test_indentation.py::IndentationTestCase::test_direct_flows",
      "tests/rules/test_indentation.py::IndentationTestCase::test_disabled",
      "tests/rules/test_indentation.py::IndentationTestCase::test_empty_value",
      "tests/rules/test_indentation.py::IndentationTestCase::test_explicit_block_mappings",
      "tests/rules/test_indentation.py::IndentationTestCase::test_first_line",
      "tests/rules/test_indentation.py::IndentationTestCase::test_flows_imbrication",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_indent_sequences_whatever",
      "tests/rules/test_indentation.py::IndentationTestCase::test_multi_lines",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections",
      "tests/rules/test_indentation.py::IndentationTestCase::test_nested_collections_with_spaces_consistent",
      "tests/rules/test_indentation.py::IndentationTestCase::test_one_space",
      "tests/rules/test_indentation.py::IndentationTestCase::test_over_indented",
      "tests/rules/test_indentation.py::IndentationTestCase::test_return",
      "tests/rules/test_indentation.py::IndentationTestCase::test_tags",
      "tests/rules/test_indentation.py::IndentationTestCase::test_three_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_two_spaces",
      "tests/rules/test_indentation.py::IndentationTestCase::test_under_indented",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_basics_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_folded_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_literal_style",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_check_multi_line_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_consistent",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_double_quoted",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_folded",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_literal",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_plain",
      "tests/rules/test_indentation.py::ScalarIndentationTestCase::test_paragraph_single_quoted",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_disabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_enabled",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_forbid_duplicated_merge_keys",
      "tests/rules/test_key_duplicates.py::KeyDuplicatesTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_disabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_enabled",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_duplicates",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_key_tokens_in_flow_sequences",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_accents",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_locale_case",
      "tests/rules/test_key_ordering.py::KeyOrderingTestCase::test_word_length",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_default",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_disabled",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_max_length_10",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_inline_mappings",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_non_breakable_word",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_spaces",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_unicode",
      "tests/rules/test_line_length.py::LineLengthTestCase::test_with_dos_newlines",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_disabled",
      "tests/rules/test_new_line_at_end_of_file.py::NewLineAtEndOfFileTestCase::test_enabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_disabled",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_dos_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_platform_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type",
      "tests/rules/test_new_lines.py::NewLinesTestCase::test_unix_type_required_st_sp",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_disabled",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_explicit_octal_values",
      "tests/rules/test_octal_values.py::OctalValuesTestCase::test_implicit_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedValuesTestCase::test_single_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_allow_quoted_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_any_quotes_not_required",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_default",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_disabled",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_octal_values",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_corner_cases",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_extras",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_only_when_needed_single_quotes",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_any",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_double",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_quote_type_single",
      "tests/rules/test_quoted_strings.py::QuotedKeysTestCase::test_single_quotes_not_required",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_disabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_enabled",
      "tests/rules/test_trailing_spaces.py::TrailingSpacesTestCase::test_with_dos_new_lines",
      "tests/rules/test_truthy.py::TruthyTestCase::test_check_keys_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_combined_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_different_allowed_values",
      "tests/rules/test_truthy.py::TruthyTestCase::test_disabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_enabled",
      "tests/rules/test_truthy.py::TruthyTestCase::test_explicit_types",
      "tests/rules/test_truthy.py::TruthyTestCase::test_no_allowed_values",
      "tests/test_cli.py::CommandLineTestCase::test_find_files_recursively",
      "tests/test_cli.py::CommandLineTestCase::test_github_actions_detection",
      "tests/test_cli.py::CommandLineTestCase::test_run_auto_output_without_tty_output",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_in_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_default_format_output_without_tty",
      "tests/test_cli.py::CommandLineTestCase::test_run_empty_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_colored_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_format_github",
      "tests/test_cli.py::CommandLineTestCase::test_run_list_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_multiple_files",
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings",
      "tests/test_cli.py::CommandLineTestCase::test_run_no_warnings_and_strict",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_ascii_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_existing_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_non_universal_newline",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_ok_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_problem_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_one_warning",
      "tests/test_cli.py::CommandLineTestCase::test_run_piped_output_nocolor",
      "tests/test_cli.py::CommandLineTestCase::test_run_read_from_stdin",
      "tests/test_cli.py::CommandLineTestCase::test_run_version",
      "tests/test_cli.py::CommandLineTestCase::test_run_warning_in_strict_mode",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_arguments",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_bad_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_empty_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_implicit_extends_config",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_locale",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_global_config_file",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_xdg_config_home_in_env",
      "tests/test_cli.py::CommandLineTestCase::test_run_with_user_yamllint_config_file_in_env",
      "tests/test_cli.py::CommandLineConfigTestCase::test_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_multiple_parent_config_file",
      "tests/test_cli.py::CommandLineConfigTestCase::test_parent_config_file",
      "tests/test_config.py::SimpleConfigTestCase::test_enable_disable_keywords",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_locale",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_rule_ignore_from_file",
      "tests/test_config.py::SimpleConfigTestCase::test_invalid_yaml_files",
      "tests/test_config.py::SimpleConfigTestCase::test_missing_option",
      "tests/test_config.py::SimpleConfigTestCase::test_parse_config",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_option",
      "tests/test_config.py::SimpleConfigTestCase::test_unknown_rule",
      "tests/test_config.py::SimpleConfigTestCase::test_validate_rule_conf",
      "tests/test_config.py::SimpleConfigTestCase::test_yes_no_for_booleans",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_edit_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_file",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_on_object",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_recursive_default_values",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_reenable_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extend_remove_rule",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_list",
      "tests/test_config.py::ExtendedConfigTestCase::test_extended_ignore_str",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_disable_rule",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_rule_partly",
      "tests/test_config.py::ExtendedLibraryConfigTestCase::test_extend_config_override_whole_rule",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_incorrect_type",
      "tests/test_config.py::IgnoreConfigTestCase::test_ignore_from_file_not_exist",
      "tests/test_config.py::IgnoreConfigTestCase::test_mutually_exclusive_ignore_keys",
      "tests/test_config.py::IgnoreConfigTestCase::test_no_ignore",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_from_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_list",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_on_ignored_file",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_str",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignore_with_broken_symlink",
      "tests/test_config.py::IgnoreConfigTestCase::test_run_with_ignored_from_file",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_with_rule",
      "tests/test_linter.py::LinterTestCase::test_linter_problem_repr_without_rule",
      "tests/test_linter.py::LinterTestCase::test_run_on_bytes",
      "tests/test_linter.py::LinterTestCase::test_run_on_int",
      "tests/test_linter.py::LinterTestCase::test_run_on_list",
      "tests/test_linter.py::LinterTestCase::test_run_on_non_ascii_chars",
      "tests/test_linter.py::LinterTestCase::test_run_on_stream",
      "tests/test_linter.py::LinterTestCase::test_run_on_string",
      "tests/test_linter.py::LinterTestCase::test_run_on_unicode",
      "tests/test_module.py::ModuleTestCase::test_run_module_no_args",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_bad_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_dir",
      "tests/test_module.py::ModuleTestCase::test_run_module_on_file",
      "tests/test_parser.py::ParserTestCase::test_line_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_generator",
      "tests/test_parser.py::ParserTestCase::test_token_or_comment_or_line_generator",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-10.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.21",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.25",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.26",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-2.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.3",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-5.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.28",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.29",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-6.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.18",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.19",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.23",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.24",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-7.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.10",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.11",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.12",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.13",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.14",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.15",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.16",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.17",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.20",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.22",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.4",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.5",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.6",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.7",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.8",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-8.9",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.1",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.2",
      "tests/test_spec_examples.py::SpecificationTestCase::test_example-9.6",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_empty_flows",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_explicit_mapping",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_mapping_between_sequences",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_sets",
      "tests/test_syntax_errors.py::YamlLintTestCase::test_syntax_errors",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_itself",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_directive_on_last_line",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_directive_with_rules_and_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_not_at_first_position",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_dos_lines",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_file_directive_with_syntax_error",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_disable_line_directive_with_rules",
      "tests/test_yamllint_directives.py::YamllintDirectivesTestCase::test_indented_directive"
    ],
    "created_at": "2025-06-19T18:37:03.518376",
    "image_name": "swesmith.x86_64.adrienverge__yamllint.8513d9b9",
    "base_commit": "main",
    "problem_statement": "[BUG] comments rule: non-first `#!` lines slip through the \u201cstarting-space\u201d check  \n\n### What I\u2019m seeing  \nWith the following configuration \u2026  \n\n```yaml\ncomments:\n  require-starting-space: true\n  ignore-shebangs: true\ncomments-indentation: disable\ndocument-start: disable\n```  \n\n\u2026 the linter is supposed to forgive the very first shebang line (`#!/usr/bin/env \u2026`) but keep enforcing the usual \u201cspace after #\u201d rule on every other comment.  \nSince a recent update, every line that begins with `#!` is ignored, not just the header one.\n\n### Minimal repro  \n\nCreate `sample.yml`:\n\n```yaml\n#!/bin/env my-interpreter        # \u2190 first line: OK, should be ignored\n# normal comment                 # OK\n#!/bin/env another-interpreter   # \u2190 should raise \u201cmissing starting space\u201d, but doesn\u2019t\nkey:  #!/not/a/shebang           # \u2190 inline: should raise, but doesn\u2019t\n```\n\nRun (for example):\n\n```\nyamllint -d ./config.yml sample.yml\n```\n\nExpected output  \n```\nsample.yml:3:1 [error] missing starting space in comment (comments)\nsample.yml:4:7 [error] missing starting space in comment (comments)\n```\n\nActual output  \n(nothing \u2014 exit status 0)\n\n### Extra context  \n\u2022 Happens regardless of file position: a second shebang in the middle or at the end is silently ignored.  \n\u2022 Rolling back to the previous commit restores the old behaviour, so this looks like a regression introduced very recently.  \n\u2022 The issue also affects inline occurrences (`key: #!/foo/bar`) that are obviously not real shebangs.\n\nLet me know if you need more details!"
  },
  {
    "instance_id": "cloudpipe__cloudpickle.6220b0ce.sweagent_buggen__70ff6678",
    "repo": "swesmith/cloudpipe__cloudpickle.6220b0ce",
    "patch": "diff --git a/cloudpickle/cloudpickle.py b/cloudpickle/cloudpickle.py\nindex 8c50ba1..1c9cdca 100644\n--- a/cloudpickle/cloudpickle.py\n+++ b/cloudpickle/cloudpickle.py\n@@ -309,7 +309,7 @@ def _extract_code_globals(co):\n         # We use a dict with None values instead of a set to get a\n         # deterministic order and avoid introducing non-deterministic pickle\n         # bytes as a results.\n-        out_names = {name: None for name in _walk_global_ops(co)}\n+        out_names = {name: None for name in set(_walk_global_ops(co))}\n \n         # Declaring a function inside another one using the \"def ...\" syntax\n         # generates a constant code object corresponding to the one of the\n",
    "FAIL_TO_PASS": [
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_pickle_bytes_for_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_pickle_bytes_for_function"
    ],
    "PASS_TO_PASS": [
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_closed_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_empty_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_pickling_special_file_handles",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_plus_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_r_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_seek",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_w_mode",
      "tests/cloudpickle_test.py::test_extract_class_dict",
      "tests/cloudpickle_test.py::CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_out_of_band_buffers",
      "tests/cloudpickle_test.py::CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_dynamic_typevar",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_stdlib_typevar",
      "tests/cloudpickle_test.py::test_module_level_pickler",
      "tests/test_backward_compat.py::test_simple_func",
      "tests/test_backward_compat.py::test_simple_class",
      "tests/test_backward_compat.py::test_dynamic_module",
      "tests/test_backward_compat.py::test_simple_enum",
      "tests/test_backward_compat.py::test_complex_class",
      "tests/test_backward_compat.py::test_complex_function",
      "tests/test_backward_compat.py::test_nested_function"
    ],
    "created_at": "2025-06-19T18:37:13.117883",
    "image_name": "swesmith.x86_64.cloudpipe__cloudpickle.6220b0ce",
    "base_commit": "main",
    "problem_statement": "Deterministic pickles for functions are no longer deterministic  \n===============================================================\n\n### Description  \n\nUntil very recently it was possible to rely on `cloudpickle.dumps()` producing **identical** byte streams for the same function, no matter what `PYTHONHASHSEED` was set to.  \nWith the current `main` branch, the payload suddenly changes from one interpreter launch to another, breaking byte-level caching that depends on stable digests.\n\n### Expected behaviour  \n\nSerialising the same function five times with five different hash seeds should yield one single digest:\n\n```\n$ for s in 0 1 2 3 4; do\n>   PYTHONHASHSEED=$s python - <<'PY'\nimport cloudpickle, hashlib, os, pickletools\n_TEST_GLOBAL_VARIABLE     = 40\n_TEST_GLOBAL_VARIABLE2    = 2\n\ndef func_with_globals():\n    return _TEST_GLOBAL_VARIABLE + _TEST_GLOBAL_VARIABLE2\n\npayload = cloudpickle.dumps(func_with_globals, protocol=cloudpickle.DEFAULT_PROTOCOL)\nprint(os.environ['PYTHONHASHSEED'], hashlib.sha256(payload).hexdigest())\nPY\ndone\n0 c70355c0\u2026\n1 c70355c0\u2026\n2 c70355c0\u2026\n3 c70355c0\u2026\n4 c70355c0\u2026\n```\n\n### What actually happens  \n\nRunning the snippet above now produces **two different digests** (sometimes even more):\n\n```\n0 9db7f1d1\u2026\n1 9db7f1d1\u2026\n2 52e2d4de\u2026\n3 9db7f1d1\u2026\n4 52e2d4de\u2026\n```\n\nIf you disassemble the two payloads with `pickletools.dis()`, the order of the global names inside the code object varies, which in turn shifts the whole frame and changes the final bytes.\n\n### Minimal reproduction  \n\n```python\nimport cloudpickle, hashlib, pickletools, os\n\n_TEST_GLOBAL_VARIABLE  = 40\n_TEST_GLOBAL_VARIABLE2 = 2\n\ndef payload(seed):\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    def func_with_globals():\n        return _TEST_GLOBAL_VARIABLE + _TEST_GLOBAL_VARIABLE2\n    return cloudpickle.dumps(func_with_globals, protocol=cloudpickle.DEFAULT_PROTOCOL)\n\ndigests = {}\nfor seed in range(5):\n    p = payload(seed)\n    h = hashlib.sha256(p).hexdigest()\n    digests.setdefault(h, []).append(seed)\n\nprint(\"Number of distinct digests:\", len(digests))\nfor h, seeds in digests.items():\n    print(h, \"\u2190 produced with seeds\", seeds)\n```\n\nWith the previous release this prints  \n\n```\nNumber of distinct digests: 1\n```\n\nbut on current `main` it prints `2` (or sometimes `3`).\n\n### Versions  \n\n* cloudpickle: current `main` @ 1c9cdca  \n* Python      : 3.10.15  \n* OS          : Ubuntu 22.04 (but reproducible on macOS too)\n\nWould love to get determinism back \u2013 our cache misses you!"
  },
  {
    "instance_id": "cloudpipe__cloudpickle.6220b0ce.sweagent_buggen__4eec0406",
    "repo": "swesmith/cloudpipe__cloudpickle.6220b0ce",
    "patch": "diff --git a/cloudpickle/cloudpickle.py b/cloudpickle/cloudpickle.py\nindex 8c50ba1..d446bb3 100644\n--- a/cloudpickle/cloudpickle.py\n+++ b/cloudpickle/cloudpickle.py\n@@ -1200,7 +1200,8 @@ _DATACLASSE_FIELD_TYPE_SENTINELS = {\n \n \n def _get_dataclass_field_type_sentinel(name):\n-    return _DATACLASSE_FIELD_TYPE_SENTINELS[name]\n+    import copy as _copy_module\n+    return _copy_module.copy(_DATACLASSE_FIELD_TYPE_SENTINELS[name])\n \n \n class Pickler(pickle.Pickler):\n",
    "FAIL_TO_PASS": [
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass_fields_are_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_dataclass_with_initvar_and_classvar"
    ],
    "PASS_TO_PASS": [
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_closed_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_empty_file",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_pickling_special_file_handles",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_plus_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_r_mode",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_seek",
      "tests/cloudpickle_file_test.py::CloudPickleFileTests::test_w_mode",
      "tests/cloudpickle_test.py::test_extract_class_dict",
      "tests/cloudpickle_test.py::CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_pickle_bytes_for_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::CloudPickleTest::test_out_of_band_buffers",
      "tests/cloudpickle_test.py::CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_Ellipsis",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_EllipsisType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NamedTuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NoneType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplemented",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_NotImplementedType",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abc_cache_not_pickled",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_abstracts",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_always_use_up_to_date_copyreg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_attrgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_bound_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classicmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_slotmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_staticmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_builtin_type_constructor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cell_manipulation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_class_no_firstlineno_deletion_",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_classmethod",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_interacting_with_a_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_closure_none_is_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cloudpickle_extract_nested_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_correct_globals_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_cycle_in_classdict_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dataclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_dynamic_class_attr_ordering_for_chained_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_pickle_bytes_for_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_deterministic_str_interning_for_chained_dynamic_class_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_class_determinist_subworker_tuple_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_func_deterministic_roundtrip",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_no_package",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamic_module_with_unpicklable_builtin",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_dynamically_generated_class_that_uses_super",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_empty_cell_preserved",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_extended_arg",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_final_or_classvar_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_func_globals",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_module_name",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_function_qualname",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generator",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_subclass",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_generic_type",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_getset_descriptor",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_import",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_importing_multiprocessing_does_not_impact_whichmodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instance_with_slots",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_instancemethods_without_self",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_dynamic_type_and_stored_remote_instances",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_memory_leak",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactive_remote_function_calls_no_side_effect",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_keyword_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_func_with_positional_only_argument",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_interactively_defined_global_variable",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itemgetter",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_itertools_count",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_lambda",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_large_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_literal_misdetection",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_dynamic_module_in_grandchild_process",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_load_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_loads_namespace",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_class_with_type_hints",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_enum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_function_and_class",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_locally_defined_intenum",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_logger",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_mappingproxy",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_method_descriptors",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_module_locals_behavior",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocess",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_multiprocessing_lock_raises",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_namedtuple",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_nested_lambdas",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_non_module_object_passing_whichmodule_test",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_items",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_keys",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_odict_values",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_partial",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_constructs_from_module_registered_for_pickling_by_value",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_memoization",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_dynamic_typevar_tracking",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickle_reraise",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_pickling_file_handles",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_property",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursion_during_pickling",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_recursive_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_reducer_override_reference_cycle",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_sliced_and_non_contiguous_memoryview",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_submodule_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_tornado_coroutine",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_type_hint",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_ufunc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_closure",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unhashable_function",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_unrelated_faulty_module",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_weakset_identity_preservation",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_annotations",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_doc",
      "tests/cloudpickle_test.py::Protocol2CloudPickleTest::test_wraps_preserves_function_name",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_dynamic_typevar",
      "tests/cloudpickle_test.py::test_lookup_module_and_qualname_stdlib_typevar",
      "tests/cloudpickle_test.py::test_module_level_pickler",
      "tests/test_backward_compat.py::test_simple_func",
      "tests/test_backward_compat.py::test_simple_class",
      "tests/test_backward_compat.py::test_dynamic_module",
      "tests/test_backward_compat.py::test_simple_enum",
      "tests/test_backward_compat.py::test_complex_class",
      "tests/test_backward_compat.py::test_complex_function",
      "tests/test_backward_compat.py::test_nested_function"
    ],
    "created_at": "2025-06-19T18:37:12.831791",
    "image_name": "swesmith.x86_64.cloudpipe__cloudpickle.6220b0ce",
    "base_commit": "main",
    "problem_statement": "Dataclass field types are not preserved after a round-trip through cloudpickle\nI noticed that sending a plain `@dataclass` through `cloudpickle.dumps / loads` mutates the private `_field_type` attribute of the dataclass fields.  \nThis breaks code that relies on the identity of the three official sentinels\n`dataclasses._FIELD`, `dataclasses._FIELD_INITVAR` and `dataclasses._FIELD_CLASSVAR`.\n\nReproducer\n-----------\n\n```python\nimport io, cloudpickle, dataclasses, typing\n\n# a minimal dataclass containing one regular, one InitVar and one ClassVar\n@dataclasses.dataclass\nclass Foo:\n    a: int\n    b: dataclasses.InitVar[int]\n    c: typing.ClassVar[int] = 0\n\n# round-trip the class itself, not an instance\nbuf = io.BytesIO()\ncloudpickle.dump(Foo, buf)\nbuf.seek(0)\nFoo2 = cloudpickle.load(buf)\n\noriginal   = [f._field_type for f in Foo.__dataclass_fields__.values()]\nroundtrip  = [f._field_type for f in Foo2.__dataclass_fields__.values()]\n\nprint(\"before:\", original)\nprint(\"after :\", roundtrip)\nprint(\"identical:\", [o is r for o, r in zip(original, roundtrip)])\n```\n\nOutput on my machine (Python 3.11):\n\n```\nbefore: [<dataclasses._FIELD object at 0x...>,\n          <dataclasses._FIELD_INITVAR object at 0x...>,\n          <dataclasses._FIELD_CLASSVAR object at 0x...>]\nafter : [<dataclasses._FIELD object at 0x...>,       # new address!\n         <dataclasses._FIELD_INITVAR object at 0x...>,\n         <dataclasses._FIELD_CLASSVAR object at 0x...>]\nidentical: [False, False, False]\n```\n\nExpected\n========\nEvery entry in `identical` should be `True`; the dataclass definition should be byte-for-byte the same after deserialisation, including the identity of its internal sentinels.\n\nImpact\n------\n\u2022 Introspection utilities that do `field._field_type is dataclasses._FIELD` (or the two other sentinels) now silently fail.  \n\u2022 Interactive workflows that pickle a dataclass and later re-attach it to `dataclasses.replace` or similar helpers raise unexpected errors.\n\nEnvironment\n-----------\ncloudpickle master (commit after v3.0.0)  \nPython 3.10 / 3.11 (reproduced on both)  \nmacOS 14.5 & Ubuntu 22.04"
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__0faae3b5",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/testing/websocket.py b/channels/testing/websocket.py\nindex 24e58d3..9206d2c 100644\n--- a/channels/testing/websocket.py\n+++ b/channels/testing/websocket.py\n@@ -1,4 +1,12 @@\n import json\n+_BASE_SCOPE_TEMPLATE = {\n+    \"type\": \"websocket\",\n+    \"path\": \"\",\n+    \"query_string\": b\"\",\n+    \"headers\": [],\n+    \"subprotocols\": [],\n+}\n+\n from urllib.parse import unquote, urlparse\n \n from channels.testing.application import ApplicationCommunicator\n@@ -18,15 +26,16 @@ class WebsocketCommunicator(ApplicationCommunicator):\n         if not isinstance(path, str):\n             raise TypeError(\"Expected str, got {}\".format(type(path)))\n         parsed = urlparse(path)\n-        self.scope = {\n-            \"type\": \"websocket\",\n-            \"path\": unquote(parsed.path),\n-            \"query_string\": parsed.query.encode(\"utf-8\"),\n-            \"headers\": headers or [],\n-            \"subprotocols\": subprotocols or [],\n-        }\n+        self.scope = _BASE_SCOPE_TEMPLATE\n+        self.scope[\"path\"] = unquote(parsed.path)\n+        self.scope[\"query_string\"] = parsed.query.encode(\"utf-8\")\n+        self.scope[\"headers\"] = headers or []\n+        self.scope[\"subprotocols\"] = subprotocols or []\n         if spec_version:\n             self.scope[\"spec_version\"] = spec_version\n+        else:\n+            # Remove lingering spec_version from previous communicator, if any.\n+            self.scope.pop(\"spec_version\", None)\n         super().__init__(application, self.scope)\n         self.response_headers = None\n \n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:14.720117",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "WebsocketCommunicator re-uses scope between instances  \nWhen I spin up two `WebsocketCommunicator`s in the same test I\u2019m getting bleed-through of the previous scope. The second communicator unexpectedly \u201cinherits\u201d whatever path / headers / sub-protocols the first one set up.\n\nCode sample (copy-pastable)\n\n```python\nimport asyncio\nfrom channels.testing import WebsocketCommunicator\n\n# Dummy ASGI app that immediately accepts and closes\nasync def app(scope, receive, send):\n    await send({\"type\": \"websocket.accept\"})\n    await send({\"type\": \"websocket.close\"})\n\nasync def main():\n    c1 = WebsocketCommunicator(app, \"/alpha/?foo=1\", headers=[(b\"x-first\", b\"yes\")])\n    await c1.connect()\n    await c1.disconnect()\n\n    # totally separate communicator, different path & no headers\n    c2 = WebsocketCommunicator(app, \"/bravo/\")\n    # No connect needed, we\u2019re just inspecting the scope\n    print(\"expected:\", \"/bravo/\", \"got:\", c2.scope[\"path\"])\n    print(\"headers  :\", c2.scope[\"headers\"])\n\nasyncio.run(main())\n```\n\nObserved output on current `main` branch\n\n```\nexpected: /bravo/ got: /alpha/\nheaders  : [(b'x-first', b'yes')]\n```\n\nAs soon as one communicator runs, every communicator created after it seems to pick up the same `path`, `query_string`, `headers` and `subprotocols`.  This is especially painful when a batch of websocket tests are run together \u2013 later tests suddenly carry session cookies or auth headers that belonged to earlier ones and assertions start to fail in surprising ways.\n\nExpected behaviour  \nEach `WebsocketCommunicator` should receive a fresh, isolated `scope` so that state from a previous communicator cannot leak into the next one.\n\nEnvironment\n\n\u2022 channels 4.0.dev (current HEAD)  \n\u2022 Django 5.1.6  \n\u2022 Python 3.10.16 on Linux  \n\nLet me know if you need any more info \u2013 happy to help!"
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__5df4c89b",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/layers.py b/channels/layers.py\nindex 5fc53f7..422fea9 100644\n--- a/channels/layers.py\n+++ b/channels/layers.py\n@@ -347,14 +347,16 @@ class InMemoryChannelLayer(BaseChannelLayer):\n         # Both should be text and valid\n         self.require_valid_channel_name(channel)\n         self.require_valid_group_name(group)\n-        # Remove from group set\n-        group_channels = self.groups.get(group, None)\n-        if group_channels:\n-            # remove channel if in group\n-            group_channels.pop(channel, None)\n-            # is group now empty? If yes remove it\n-            if not group_channels:\n-                self.groups.pop(group, None)\n+\n+        async def _discard():\n+            await asyncio.sleep(0)\n+            group_channels = self.groups.get(group, None)\n+            if group_channels:\n+                group_channels.pop(channel, None)\n+                if not group_channels:\n+                    self.groups.pop(group, None)\n+\n+        asyncio.create_task(_discard())\n \n     async def group_send(self, group, message):\n         # Check types\n",
    "FAIL_TO_PASS": [
      "tests/test_inmemorychannel.py::test_groups_basic"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:15.271219",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "[Bug]: `group_discard()` is no longer atomic \u2013 messages may reach channels that have already left the group  \n\n### What happens\n\nAfter upgrading to the current `main` (commit 422fea9), a channel that calls `group_discard()` can still receive a message that is sent to the group **immediately** afterwards.  \nOn 4.1-stable this never happened \u2013 once `await layer.group_discard(...)` returned, the channel was guaranteed to be out of the group.\n\n### Minimal reproduction (async console)\n\n```python\nimport asyncio\nfrom channels.layers import InMemoryChannelLayer\n\nasync def main():\n    layer = InMemoryChannelLayer()\n    channel = await layer.new_channel()\n\n    group = \"chat\"\n\n    # join + sanity-check\n    await layer.group_add(group, channel)\n    await layer.group_send(group, {\"type\": \"x\"})\n    assert (await layer.receive(channel))[\"type\"] == \"x\"\n\n    # leave the group\n    await layer.group_discard(group, channel)\n\n    # immediately send another message to the SAME group\n    await layer.group_send(group, {\"type\": \"y\"})\n\n    # give the channel a chance to receive \u2013 it **should** time out\n    try:\n        msg = await asyncio.wait_for(layer.receive(channel), timeout=0.1)\n    except asyncio.TimeoutError:\n        print(\"OK \u2013 nothing delivered\")\n    else:\n        print(\"unexpected message:\", msg)\n\nasyncio.run(main())\n```\n\n### Actual output\n\n```\nunexpected message: {'type': 'y'}\n```\n\nA short pause (`await asyncio.sleep(0)`) between `group_discard` and `group_send` hides the problem, which makes it look like a race condition that was introduced recently.\n\n### Expected output\n\nThe script should print:\n\n```\nOK \u2013 nothing delivered\n```\n\ni.e. the channel must be removed from the group before `group_discard()` returns.\n\n### Notes\n\n\u2022 Reproduces reliably on CPython 3.10 and 3.11  \n\u2022 Only affects the in-memory layer \u2013 Redis layer behaves correctly.  \n\u2022 This breaks applications that rely on the \u201cleave group \u2192 send broadcast\u201d pattern (e.g. presence lists)."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__8358ceef",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/sessions.py b/channels/sessions.py\nindex f1d51d4..2435c19 100644\n--- a/channels/sessions.py\n+++ b/channels/sessions.py\n@@ -183,6 +183,9 @@ class InstanceSessionWrapper:\n                 and (modified or settings.SESSION_SAVE_EVERY_REQUEST)\n             ):\n                 await self.save_session()\n+                if message[\"type\"] in self.save_message_types:\n+                    self.save_message_types.remove(message[\"type\"])\n+\n                 # If this is a message type that can transport cookies back to the\n                 # client, then do so.\n                 if message[\"type\"] in self.cookie_response_message_types:\n",
    "FAIL_TO_PASS": [
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:15.575501",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "Session cookies (and their SameSite flag) no longer sent on the first response  \nAfter updating to the latest commit, the first HTTP response that is supposed to create or modify the session is coming back without any `Set-Cookie` header. Subsequent responses do set the cookie, but by then the client has already missed the information, breaking login flows and CSRF protection in browsers that block third-party requests without SameSite.\n\nWhat I\u2019m seeing\n\n1. An anonymous GET to a view that writes to the session (e.g. `request.session[\"foo\"] = \"bar\"`).  \n2. Response status is `200 OK`, **but no `Set-Cookie` header is present**.  \n3. A second request to the same view _does_ include the header, with the correct value and SameSite attribute.\n\nBecause the cookie is not sent the first time, the client never stores the session and any logic that relies on it (flash messages, login, etc.) silently fails. If I manually refresh twice everything starts working, so it looks like the session is only transmitted after the first message has already been handled.\n\nExpected behaviour\n\nThe very first response that mutates the session should always include one `Set-Cookie` header, complete with the configured `SameSite=<Strict|Lax|None>` attribute.\n\nQuick reproduction script (can be dropped into `manage.py shell`)\n\n```python\nfrom channels.testing import HttpCommunicator\nfrom django.urls import path\nfrom channels.sessions import CookieMiddleware\nfrom channels.consumer import AsyncConsumer\n\nclass TouchSession(AsyncConsumer):\n    async def http_request(self, body):\n        self.scope[\"session\"][\"ping\"] = \"pong\"\n        await self.send_response(200, b\"ok\")\n\napplication = CookieMiddleware(lambda scope: TouchSession(scope))\n\nasync def run():\n    com = HttpCommunicator(application, \"GET\", \"/\")\n    status, headers, body = await com.get_response()\n    print(\"status:\", status)\n    print(\"headers (first call):\", headers)          # <- no Set-Cookie\n    await com.disconnect()\n\n    com = HttpCommunicator(application, \"GET\", \"/\")\n    status, headers, body = await com.get_response()\n    print(\"headers (second call):\", headers)         # <- cookie suddenly appears\n    await com.disconnect()\n\nimport asyncio, sys\nasyncio.run(run())\n```\n\nRunning this prints:\n\n```\nstatus: 200\nheaders (first call): []\nheaders (second call): [(b'set-cookie', b'sessionid=...; SameSite=Strict; Path=/; HttpOnly')]\n```\n\nNotes\n\n\u2022 The regression appeared after the last merge to `channels/sessions.py`.  \n\u2022 The bug affects both `Strict` and `None` SameSite settings; an invalid SameSite value is now silently ignored as well.  \n\u2022 Behaviour is identical for HTTP and WebSocket consumers that rely on the session middleware.\n\nWould be great to have a look\u2014this breaks single-page apps that expect the cookie immediately."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__8369cb93",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/consumer.py b/channels/consumer.py\nindex fc06543..b16af88 100644\n--- a/channels/consumer.py\n+++ b/channels/consumer.py\n@@ -90,8 +90,15 @@ class AsyncConsumer:\n         initkwargs will be used to instantiate the consumer instance.\n         \"\"\"\n \n+        _instance_cache = {}\n+\n         async def app(scope, receive, send):\n-            consumer = cls(**initkwargs)\n+            # Reuse the same consumer instance for the given class if available.\n+            if cls in _instance_cache:\n+                consumer = _instance_cache[cls]\n+            else:\n+                consumer = cls(**initkwargs)\n+                _instance_cache[cls] = consumer\n             return await consumer(scope, receive, send)\n \n         app.consumer_class = cls\n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_http.py::test_multiple_sessions"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:15.834243",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "AsyncConsumer instances are unexpectedly shared between requests  \n-----------------------------------------------------------------------------\n\nSince the last update I\u2019m seeing some very odd cross-talk between totally\nunrelated connections.  It looks as if only one `AsyncConsumer` object is\nbeing reused for every incoming scope, which means per-connection state ends\nup being global.  Besides leaking data between users this eventually blows up\nwith asyncio complaining that \u201cEvent loop is closed\u201d.\n\nMinimal repro\n~~~~~~~~~~~~~\n\n```python\n# consumers.py\nfrom channels.consumer import AsyncConsumer\n\nclass EchoPath(AsyncConsumer):\n    async def websocket_connect(self, event):\n        # store something \"per connection\"\n        self.my_path = self.scope[\"path\"]\n        await self.send({\"type\": \"websocket.accept\"})\n\n    async def websocket_receive(self, event):\n        # echo back what the consumer thinks its own path is\n        await self.send({\n            \"type\": \"websocket.send\",\n            \"text\": self.my_path,\n        })\n```\n\n1.  Add the consumer to your routing twice, under two different URLs:\n\n```python\nwebsocket_urlpatterns = [\n    path(\"first/\", EchoPath.as_asgi()),\n    path(\"second/\", EchoPath.as_asgi()),\n]\n```\n\n2.  Open two WebSocket connections (for example with\n    `wscat` or your browser dev-tools):\n\n```\nwscat -c ws://localhost:8000/first/\nwscat -c ws://localhost:8000/second/\n```\n\n3.  Send any message in each connection.\n\nObserved behaviour\n------------------\n\nBoth sockets receive **`/second/`** (the path of the most recent connection),\nand not their own path.  After a few open/close cycles the server prints\nwarnings like\n\n```\nTask was destroyed but it is pending!\nRuntimeError: Event loop is closed\n```\n\nExpected behaviour\n------------------\n\nEach connection should get back its own path (`/first/` or `/second/`) and\ncleanup should happen quietly when the socket closes.\n\nEnvironment\n-----------\n\n\u2022 channels 4.0.dev (commit  \u2026)  \n\u2022 Django 5.1  \n\u2022 Python 3.10  \n\nThis breaks any consumer that keeps per-connection attributes (sessions,\ngroups, cached queries, etc.) and also seems to leave dangling tasks behind."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__09619ac2",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/layers.py b/channels/layers.py\nindex 5fc53f7..2c915ea 100644\n--- a/channels/layers.py\n+++ b/channels/layers.py\n@@ -341,7 +341,7 @@ class InMemoryChannelLayer(BaseChannelLayer):\n         self.require_valid_channel_name(channel)\n         # Add to group dict\n         self.groups.setdefault(group, {})\n-        self.groups[group][channel] = time.time()\n+        self.groups[group][self.non_local_name(channel)] = time.time()\n \n     async def group_discard(self, group, channel):\n         # Both should be text and valid\n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:13.382033",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "Group messages disappear with default in-memory channel layer\n-------------------------------------------------------------\n\nWe just bumped to the current `main` and noticed that any message sent to a group never reaches the WebSocket(s) that previously called `self.channel_layer.group_add(...)` \u2013 but only when the default `InMemoryChannelLayer` is in use.  \nWith Redis or IPC back-ends everything still works.\n\nExpected result\n~~~~~~~~~~~~~~~\nA consumer that did\n\n```python\nasync def connect(self):\n    await self.channel_layer.group_add(\"chat\", self.channel_name)\n    await self.accept()\n\nasync def chat_message(self, event):\n    await self.send_json(event)\n```\n\nshould receive the payload that somebody later sends with\n\n```python\nawait channel_layer.group_send(\"chat\", {\"type\": \"chat.message\", \"text\": \"ping\"})\n```\n\nActual result\n~~~~~~~~~~~~~\nNothing is delivered; the `chat_message` handler is never invoked.  \nNo exception is raised, the message simply vanishes.\n\nHow to reproduce\n~~~~~~~~~~~~~~~~\n\nMinimal script (can be dropped into `manage.py shell` or a pytest-style test, but this shows the idea):\n\n```python\nimport asyncio\nfrom channels.layers import get_channel_layer\nfrom channels.testing import WebsocketCommunicator\nfrom channels.routing import ProtocolTypeRouter, URLRouter\nfrom django.urls import re_path\nfrom channels.generic.websocket import AsyncWebsocketConsumer\n\nchannel_layer = get_channel_layer()          # default -> InMemoryChannelLayer\n\nclass Echo(AsyncWebsocketConsumer):\n    async def connect(self):\n        await self.channel_layer.group_add(\"grp\", self.channel_name)\n        await self.accept()\n\n    async def chat_message(self, event):\n        # will never be called on current main\n        await self.send(event[\"text\"])\n\napplication = ProtocolTypeRouter({\n    \"websocket\": URLRouter([re_path(r\"^/ws/$\", Echo.as_asgi())]),\n})\n\nasync def run():\n    comm = WebsocketCommunicator(application, \"/ws/\")\n    await comm.connect()\n\n    # server-side broadcast\n    await channel_layer.group_send(\"grp\", {\"type\": \"chat.message\", \"text\": \"hello\"})\n    received = await comm.receive_from(timeout=0.2)\n\n    print(\"received:\", received)\n\n    await comm.disconnect()\n\nasyncio.run(run())\n```\n\nOutput with 4.1.0 (last good commit):\n\n```\nreceived: hello\n```\n\nOutput with current `main`:\n\n```\nreceived: None   # blocks until timeout, then returns None\n```\n\nSystem info\n~~~~~~~~~~~\n\n```\nPython            3.12.3\nDjango            5.1.6\nchannels          current HEAD (f7420e9)\nasgiref           3.8.1\nOS                Ubuntu 22.04 (kernel 6.5.0)\n```\n\nLet me know if more details are needed \u2013 happy to bisect or try patches."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__3cf80f3c",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/sessions.py b/channels/sessions.py\nindex f1d51d4..ed8d4f3 100644\n--- a/channels/sessions.py\n+++ b/channels/sessions.py\n@@ -1,4 +1,7 @@\n import datetime\n+# Global shared header list (internal)\n+_SHARED_HEADER_CACHE = []\n+\n import time\n from importlib import import_module\n \n@@ -18,6 +21,9 @@ from channels.db import database_sync_to_async\n \n class CookieMiddleware:\n     \"\"\"\n+\n+\n+\n     Extracts cookies from HTTP or WebSocket-style scopes and adds them as a\n     scope[\"cookies\"] entry with the same format as Django's request.COOKIES.\n     \"\"\"\n@@ -106,8 +112,13 @@ class CookieMiddleware:\n             ], \"samesite must be either 'strict', 'lax' or 'none'\"\n             cookies[key][\"samesite\"] = samesite\n         # Write out the cookies to the response\n+        # Ensure all messages share the same underlying headers list so that\n+        # subsequent mutations will be visible across messages.\n+        headers_list = message.setdefault(\"headers\", _SHARED_HEADER_CACHE)\n+        if headers_list is not _SHARED_HEADER_CACHE:\n+            message[\"headers\"] = _SHARED_HEADER_CACHE\n         for c in cookies.values():\n-            message.setdefault(\"headers\", []).append(\n+            message[\"headers\"].append(\n                 (b\"Set-Cookie\", bytes(c.output(header=\"\").strip(), encoding=\"utf-8\"))\n             )\n \n",
    "FAIL_TO_PASS": [
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_set_cookie"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:14.999285",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "[Bug]: `Set-Cookie` headers \u201cbleed\u201d from one request to the next\n\n### Bug summary  \nAfter upgrading to the current `main` branch we started noticing that HTTP\nresponses coming from a Channels application suddenly contain **all** cookies\never produced since the process booted.  \nA fresh request that should return a single `Set-Cookie` header instead returns\nan ever-growing list of previously issued cookies.\n\nSo far we can reproduce the problem with any consumer that relies on\n`CookieMiddleware`, including the standard session middleware stack.\n\n### Code for reproduction\n\n```python\nimport asyncio\nfrom channels.sessions import CookieMiddleware\nfrom channels.generic.http import AsyncHttpConsumer\nfrom asgiref.testing import ApplicationCommunicator\n\nclass CookieEcho(AsyncHttpConsumer):\n    async def handle(self, body):\n        # create/refresh one cookie for every request\n        self.scope[\"session\"][\"counter\"] = self.scope[\"session\"].get(\"counter\", 0) + 1\n        await self.send_headers()\n        await self.send_body(b\"ok\")\n\n# Wrap the app in CookieMiddleware\napp = CookieMiddleware(CookieEcho())\n\nasync def one_roundtrip():\n    comm = ApplicationCommunicator(\n        app,\n        {\n            \"type\": \"http\",\n            \"method\": \"GET\",\n            \"path\": \"/\",\n            \"headers\": [],\n        },\n    )\n    await comm.send_input({\"type\": \"http.request\"})\n    response_start = await comm.receive_output()\n    response_body = await comm.receive_output()\n    await comm.wait()\n    # extract set-cookie headers for inspection\n    print([h for h in response_start[\"headers\"] if h[0] == b\"set-cookie\"])\n\nasync def demo():\n    print(\"first request:\")\n    await one_roundtrip()\n    print(\"second request:\")\n    await one_roundtrip()\n\nasyncio.run(demo())\n```\n\n### Actual outcome\n\n```\nfirst request:\n[(b'set-cookie', b'counter=1; Path=/; SameSite=Lax')]\nsecond request:\n[(b'set-cookie', b'counter=2; Path=/; SameSite=Lax'),\n (b'set-cookie', b'counter=1; Path=/; SameSite=Lax')]   # \ud83d\udc48 duplicated!\n```\n\nEvery new request re-emits **all** previously generated cookies in addition to\nthe one that belongs to the current response. In a long-running server the list\nkeeps growing indefinitely.\n\n### Expected outcome  \nEach request should only include the cookies that were explicitly set during\nthat request \u2013 in the example above the second response should only contain\n`counter=2`.\n\n### Additional information\n\n* Python 3.10.16  \n* Django 5.1.6  \n* Channels built from `main` (commit after 4.1.0)  \n* ASGI server: daphne 4.1.0\n\nThe issue is visible with both synchronous and asynchronous consumers and seems\nto appear as soon as `CookieMiddleware` is in the stack. Clearing server-side\nstate or restarting the worker resets the list, which is consistent with the\nidea that the `headers` container is being shared globally instead of being\ninitialised per response."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__d1599141",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/sessions.py b/channels/sessions.py\nindex f1d51d4..a4d1340 100644\n--- a/channels/sessions.py\n+++ b/channels/sessions.py\n@@ -98,12 +98,18 @@ class CookieMiddleware:\n             cookies[key][\"secure\"] = True\n         if httponly:\n             cookies[key][\"httponly\"] = True\n-        if samesite is not None:\n+        if not getattr(cls, \"_validated_samesite_once\", False):\n             assert samesite.lower() in [\n                 \"strict\",\n                 \"lax\",\n                 \"none\",\n             ], \"samesite must be either 'strict', 'lax' or 'none'\"\n+            cls._validated_samesite_once = True\n+        else:\n+            if samesite.lower() not in [\"strict\", \"lax\", \"none\"]:\n+                samesite = \"lax\"\n+\n+        if samesite is not None:\n             cookies[key][\"samesite\"] = samesite\n         # Write out the cookies to the response\n         for c in cookies.values():\n",
    "FAIL_TO_PASS": [
      "tests/test_http.py::test_session_samesite_invalid"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:16.111377",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "CookieMiddleware stops validating SameSite after the first request\nI noticed that invalid `SameSite=` values are now being silently rewritten instead of triggering the usual assertion error.\n\nHow to see it\n```python\nimport asyncio\n\nfrom channels.sessions import CookieMiddleware\nfrom channels.testing import HttpCommunicator\n\n\nasync def app(scope, receive, send):\n    # a bare-bones ASGI app that immediately returns 200 OK\n    await send({\"type\": \"http.response.start\", \"status\": 200, \"headers\": []})\n    await send({\"type\": \"http.response.body\", \"body\": b\"hi\"})\n\nasync def run_once(bogus_value):\n    wrapped = CookieMiddleware(app, samesite=bogus_value)   # <\u2500 bogus!\n    comm = HttpCommunicator(wrapped, \"GET\", \"/\")\n    try:\n        await comm.get_response()\n        print(f\"\u2714  '{bogus_value}' was accepted, cookie header \u2192\",\n              [h for h in comm._response[1] if h[0].lower() == b'set-cookie'])\n    except AssertionError as exc:\n        print(f\"\u2718  '{bogus_value}' raised:\", exc)\n\nasyncio.run(run_once(\"notarealoption\"))\n```\n\nCurrent result  \n```\n\u2714  'notarealoption' was accepted, cookie header \u2192 [b'sessionid=...; SameSite=Lax']\n```\n\nExpected result  \n```\n\u2718  'notarealoption' raised: samesite must be either 'strict', 'lax' or 'none'\n```\n\nOnce the middleware has processed one request, every subsequent request behaves the same way, so an app can quietly ship cookies with an unexpected `SameSite=Lax`.\n\nEnvironment\n\u2022 channels 5.1.6 (current main)  \n\u2022 Django 5.1  \n\u2022 Python 3.10.16  \n\u2022 macOS & Linux (both reproduced)\n\nThis breaks the guarantee that only the three official values are allowed and could lead to surprises for projects relying on the earlier strict validation."
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__f92fa27a",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/layers.py b/channels/layers.py\nindex 5fc53f7..8ba71e5 100644\n--- a/channels/layers.py\n+++ b/channels/layers.py\n@@ -347,14 +347,19 @@ class InMemoryChannelLayer(BaseChannelLayer):\n         # Both should be text and valid\n         self.require_valid_channel_name(channel)\n         self.require_valid_group_name(group)\n-        # Remove from group set\n-        group_channels = self.groups.get(group, None)\n-        if group_channels:\n-            # remove channel if in group\n-            group_channels.pop(channel, None)\n-            # is group now empty? If yes remove it\n-            if not group_channels:\n-                self.groups.pop(group, None)\n+\n+        loop = asyncio.get_running_loop()\n+\n+        async def _delayed_cleanup():\n+            await asyncio.sleep(0.05)\n+            group_channels = self.groups.get(group, None)\n+            if group_channels:\n+                group_channels.pop(channel, None)\n+                if not group_channels:\n+                    self.groups.pop(group, None)\n+\n+        # Schedule the actual discard asynchronously and return immediately.\n+        loop.create_task(_delayed_cleanup())\n \n     async def group_send(self, group, message):\n         # Check types\n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_inmemorychannel.py::test_groups_basic"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:16.942366",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "`group_discard()` is now async-ish but not really  \n================================================\n\nDescription\n-----------\n\nSince upgrading to the latest commit, we\u2019re seeing channels that were *supposed* to be removed from a group still receive the very next message that is sent to that group.\n\nA tiny reproduction script (needs only the built-in `InMemoryChannelLayer`) illustrates it:\n\n```py\nimport asyncio\nfrom channels.layers import InMemoryChannelLayer\n\nasync def demo():\n    layer = InMemoryChannelLayer(capacity=1)\n\n    # put the channel in the group\n    await layer.group_add(\"chat\", \"chan!\")\n\n    # take it out again\n    await layer.group_discard(\"chat\", \"chan!\")\n\n    # immediately broadcast to the group\n    await layer.group_send(\"chat\", {\"type\": \"ping\"})\n\n    try:\n        # If the discard really happened, this should time out\n        message = await asyncio.wait_for(layer.receive(\"chan!\"), 0.1)\n    except asyncio.TimeoutError:\n        print(\"\u2705 expected \u2013 channel did NOT get the message\")\n    else:\n        print(\"\u274c unexpected \u2013 channel STILL got:\", message)\n\nasyncio.run(demo())\n```\n\nOutput we get:\n\n```\n\u274c unexpected \u2013 channel STILL got: {'type': 'ping'}\nTask was destroyed but it is pending!  # sometimes appears on shutdown\n```\n\nWhat we expected:\n\n```\n\u2705 expected \u2013 channel did NOT get the message\n```\n\nAside from the leaked message, the interpreter also complains about a pending task when the event loop closes.\n\nQuestions\n---------\n\n1. Should `group_discard()` guarantee synchronous removal (as it did before)?\n2. If the delayed cleanup is intentional, how are we supposed to safely call `group_send()` right after discarding?\n\nAny insight would be appreciated \u2013 right now we have to add an `await asyncio.sleep(...)` workaround between the two calls which feels a bit brittle."
  },
  {
    "instance_id": "encode__starlette.db5063c2.sweagent_buggen__b8426da8",
    "repo": "swesmith/encode__starlette.db5063c2",
    "patch": "diff --git a/starlette/background.py b/starlette/background.py\nindex 0430fc0..74eade4 100644\n--- a/starlette/background.py\n+++ b/starlette/background.py\n@@ -37,5 +37,12 @@ class BackgroundTasks(BackgroundTask):\n         self.tasks.append(task)\n \n     async def __call__(self) -> None:\n+        first_exc: Exception | None = None\n         for task in self.tasks:\n-            await task()\n+            try:\n+                await task()\n+            except Exception as exc:  # noqa: BLE001\n+                if first_exc is None:\n+                    first_exc = exc\n+        if first_exc is not None:\n+            raise first_exc\ndiff --git a/starlette/staticfiles.py b/starlette/staticfiles.py\nindex 746e740..b976777 100644\n--- a/starlette/staticfiles.py\n+++ b/starlette/staticfiles.py\n@@ -161,9 +161,26 @@ class StaticFiles:\n                 # directory.\n                 continue\n             try:\n-                return full_path, os.stat(full_path)\n+                # Perform an os.stat call so that we preserve existing behaviour, but\n+                # also ensure that the directory is readable by the current process.\n+                stat_result = os.stat(full_path)\n+                parent_dir = os.path.dirname(full_path) if os.path.isfile(full_path) else full_path\n+                dir_stat = os.stat(parent_dir)\n+                # If the owner permissions on the directory do not include read and\n+                # execute, then we treat it as inaccessible in order to surface a\n+                # PermissionError that higher level code will translate into a 401\n+                # response. This additional access check makes the behaviour\n+                # consistent across environments that run with elevated privileges\n+                # (such as CI or containers running as root).\n+                if not (dir_stat.st_mode & stat.S_IRUSR and dir_stat.st_mode & stat.S_IXUSR):\n+                    raise PermissionError()\n+                return full_path, stat_result\n             except (FileNotFoundError, NotADirectoryError):\n                 continue\n+            except PermissionError:\n+                # Propagate PermissionError so that get_response can translate it\n+                # correctly.\n+                raise\n         return \"\", None\n \n     def file_response(\n",
    "FAIL_TO_PASS": [
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[asyncio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[trio]"
    ],
    "PASS_TO_PASS": [
      "tests/middleware/test_base.py::test_custom_middleware[asyncio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[asyncio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[asyncio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[asyncio]",
      "tests/middleware/test_base.py::test_contextvars[asyncio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[asyncio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[asyncio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[asyncio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[asyncio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-False]",
      "tests/middleware/test_base.py::test_custom_middleware[trio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[trio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[trio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[trio]",
      "tests/middleware/test_base.py::test_contextvars[trio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[trio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[trio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[trio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[trio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-False]",
      "tests/middleware/test_base.py::test_pr_1519_comment_1236166180_example",
      "tests/middleware/test_cors.py::test_cors_allow_all[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[asyncio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[asyncio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[asyncio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[trio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[trio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[trio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[trio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[trio]",
      "tests/middleware/test_errors.py::test_handler[asyncio]",
      "tests/middleware/test_errors.py::test_debug_text[asyncio]",
      "tests/middleware/test_errors.py::test_debug_html[asyncio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[asyncio]",
      "tests/middleware/test_errors.py::test_debug_not_http[asyncio]",
      "tests/middleware/test_errors.py::test_background_task[asyncio]",
      "tests/middleware/test_errors.py::test_handler[trio]",
      "tests/middleware/test_errors.py::test_debug_text[trio]",
      "tests/middleware/test_errors.py::test_debug_html[trio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[trio]",
      "tests/middleware/test_errors.py::test_debug_not_http[trio]",
      "tests/middleware/test_errors.py::test_background_task[trio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[trio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[asyncio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[trio]",
      "tests/middleware/test_middleware.py::test_middleware_repr",
      "tests/middleware/test_middleware.py::test_middleware_iter",
      "tests/middleware/test_session.py::test_session[asyncio]",
      "tests/middleware/test_session.py::test_session_expires[asyncio]",
      "tests/middleware/test_session.py::test_secure_session[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[asyncio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_domain_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session[trio]",
      "tests/middleware/test_session.py::test_session_expires[trio]",
      "tests/middleware/test_session.py::test_secure_session[trio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[trio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[trio]",
      "tests/middleware/test_session.py::test_session_cookie[trio]",
      "tests/middleware/test_session.py::test_domain_cookie[trio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[asyncio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[asyncio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[trio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[trio]",
      "tests/middleware/test_trusted_host.py::test_default_allowed_hosts",
      "tests/middleware/test_wsgi.py::test_wsgi_get[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_get[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[trio]",
      "tests/middleware/test_wsgi.py::test_build_environ",
      "tests/middleware/test_wsgi.py::test_build_environ_encoding",
      "tests/test__utils.py::test_async_func",
      "tests/test__utils.py::test_async_partial",
      "tests/test__utils.py::test_async_method",
      "tests/test__utils.py::test_async_object_call",
      "tests/test__utils.py::test_async_partial_object_call",
      "tests/test__utils.py::test_async_nested_partial",
      "tests/test__utils.py::test_get_route_path[scope0-/foo-123/bar]",
      "tests/test__utils.py::test_get_route_path[scope1-/bar]",
      "tests/test__utils.py::test_get_route_path[scope2-]",
      "tests/test__utils.py::test_get_route_path[scope3-/foo/bar]",
      "tests/test_applications.py::test_url_path_for",
      "tests/test_applications.py::test_func_route[asyncio]",
      "tests/test_applications.py::test_async_route[asyncio]",
      "tests/test_applications.py::test_class_route[asyncio]",
      "tests/test_applications.py::test_mounted_route[asyncio]",
      "tests/test_applications.py::test_mounted_route_path_params[asyncio]",
      "tests/test_applications.py::test_subdomain_route[asyncio]",
      "tests/test_applications.py::test_websocket_route[asyncio]",
      "tests/test_applications.py::test_400[asyncio]",
      "tests/test_applications.py::test_405[asyncio]",
      "tests/test_applications.py::test_500[asyncio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[asyncio]",
      "tests/test_applications.py::test_middleware[asyncio]",
      "tests/test_applications.py::test_app_mount[asyncio]",
      "tests/test_applications.py::test_app_debug[asyncio]",
      "tests/test_applications.py::test_app_add_route[asyncio]",
      "tests/test_applications.py::test_app_add_websocket_route[asyncio]",
      "tests/test_applications.py::test_app_add_event_handler[asyncio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[asyncio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_middleware_stack_init[asyncio]",
      "tests/test_applications.py::test_middleware_args[asyncio]",
      "tests/test_applications.py::test_middleware_factory[asyncio]",
      "tests/test_applications.py::test_func_route[trio]",
      "tests/test_applications.py::test_async_route[trio]",
      "tests/test_applications.py::test_class_route[trio]",
      "tests/test_applications.py::test_mounted_route[trio]",
      "tests/test_applications.py::test_mounted_route_path_params[trio]",
      "tests/test_applications.py::test_subdomain_route[trio]",
      "tests/test_applications.py::test_websocket_route[trio]",
      "tests/test_applications.py::test_400[trio]",
      "tests/test_applications.py::test_405[trio]",
      "tests/test_applications.py::test_500[trio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[trio]",
      "tests/test_applications.py::test_middleware[trio]",
      "tests/test_applications.py::test_app_mount[trio]",
      "tests/test_applications.py::test_app_debug[trio]",
      "tests/test_applications.py::test_app_add_route[trio]",
      "tests/test_applications.py::test_app_add_websocket_route[trio]",
      "tests/test_applications.py::test_app_add_event_handler[trio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[trio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[trio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[trio]",
      "tests/test_applications.py::test_middleware_stack_init[trio]",
      "tests/test_applications.py::test_middleware_args[trio]",
      "tests/test_applications.py::test_middleware_factory[trio]",
      "tests/test_applications.py::test_routes",
      "tests/test_applications.py::test_decorator_deprecations",
      "tests/test_applications.py::test_lifespan_app_subclass",
      "tests/test_authentication.py::test_invalid_decorator_usage",
      "tests/test_authentication.py::test_user_interface[asyncio]",
      "tests/test_authentication.py::test_authentication_required[asyncio]",
      "tests/test_authentication.py::test_websocket_authentication_required[asyncio]",
      "tests/test_authentication.py::test_authentication_redirect[asyncio]",
      "tests/test_authentication.py::test_custom_on_error[asyncio]",
      "tests/test_authentication.py::test_user_interface[trio]",
      "tests/test_authentication.py::test_authentication_required[trio]",
      "tests/test_authentication.py::test_websocket_authentication_required[trio]",
      "tests/test_authentication.py::test_authentication_redirect[trio]",
      "tests/test_authentication.py::test_custom_on_error[trio]",
      "tests/test_background.py::test_async_task[asyncio]",
      "tests/test_background.py::test_sync_task[asyncio]",
      "tests/test_background.py::test_multiple_tasks[asyncio]",
      "tests/test_background.py::test_async_task[trio]",
      "tests/test_background.py::test_sync_task[trio]",
      "tests/test_background.py::test_multiple_tasks[trio]",
      "tests/test_concurrency.py::test_run_until_first_complete[asyncio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[asyncio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[asyncio]",
      "tests/test_concurrency.py::test_run_until_first_complete[trio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[trio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[trio]",
      "tests/test_config.py::test_config_types",
      "tests/test_config.py::test_config",
      "tests/test_config.py::test_missing_env_file_raises",
      "tests/test_config.py::test_environ",
      "tests/test_config.py::test_config_with_env_prefix",
      "tests/test_convertors.py::test_datetime_convertor[asyncio]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1-0-404]",
      "tests/test_convertors.py::test_datetime_convertor[trio]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1-0-404]",
      "tests/test_datastructures.py::test_url",
      "tests/test_datastructures.py::test_url_query_params",
      "tests/test_datastructures.py::test_hidden_password",
      "tests/test_datastructures.py::test_csv",
      "tests/test_datastructures.py::test_url_from_scope",
      "tests/test_datastructures.py::test_headers",
      "tests/test_datastructures.py::test_mutable_headers",
      "tests/test_datastructures.py::test_mutable_headers_merge",
      "tests/test_datastructures.py::test_mutable_headers_merge_dict",
      "tests/test_datastructures.py::test_mutable_headers_update",
      "tests/test_datastructures.py::test_mutable_headers_update_dict",
      "tests/test_datastructures.py::test_mutable_headers_merge_not_mapping",
      "tests/test_datastructures.py::test_headers_mutablecopy",
      "tests/test_datastructures.py::test_mutable_headers_from_scope",
      "tests/test_datastructures.py::test_url_blank_params",
      "tests/test_datastructures.py::test_queryparams",
      "tests/test_datastructures.py::test_upload_file_file_input[asyncio]",
      "tests/test_datastructures.py::test_upload_file_without_size[asyncio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[asyncio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[asyncio]",
      "tests/test_datastructures.py::test_upload_file_file_input[trio]",
      "tests/test_datastructures.py::test_upload_file_without_size[trio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[trio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[trio]",
      "tests/test_datastructures.py::test_formdata",
      "tests/test_datastructures.py::test_multidict",
      "tests/test_endpoints.py::test_http_endpoint_route[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[trio]",
      "tests/test_exceptions.py::test_not_acceptable[asyncio]",
      "tests/test_exceptions.py::test_no_content[asyncio]",
      "tests/test_exceptions.py::test_not_modified[asyncio]",
      "tests/test_exceptions.py::test_with_headers[asyncio]",
      "tests/test_exceptions.py::test_websockets_should_raise[asyncio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[asyncio]",
      "tests/test_exceptions.py::test_force_500_response[asyncio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[asyncio]",
      "tests/test_exceptions.py::test_not_acceptable[trio]",
      "tests/test_exceptions.py::test_no_content[trio]",
      "tests/test_exceptions.py::test_not_modified[trio]",
      "tests/test_exceptions.py::test_with_headers[trio]",
      "tests/test_exceptions.py::test_websockets_should_raise[trio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[trio]",
      "tests/test_exceptions.py::test_force_500_response[trio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[trio]",
      "tests/test_exceptions.py::test_http_str",
      "tests/test_exceptions.py::test_http_repr",
      "tests/test_exceptions.py::test_websocket_str",
      "tests/test_exceptions.py::test_websocket_repr",
      "tests/test_exceptions.py::test_exception_middleware_deprecation",
      "tests/test_formparsers.py::test_multipart_request_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[asyncio]",
      "tests/test_formparsers.py::test_multi_items[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[asyncio]",
      "tests/test_formparsers.py::test_no_request_data[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[asyncio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_multipart_request_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[trio]",
      "tests/test_formparsers.py::test_multi_items[trio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[trio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[trio]",
      "tests/test_formparsers.py::test_no_request_data[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[trio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[trio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_user_safe_decode_helper",
      "tests/test_formparsers.py::test_user_safe_decode_ignores_wrong_charset",
      "tests/test_requests.py::test_request_url[asyncio]",
      "tests/test_requests.py::test_request_query_params[asyncio]",
      "tests/test_requests.py::test_request_headers[asyncio]",
      "tests/test_requests.py::test_request_body[asyncio]",
      "tests/test_requests.py::test_request_stream[asyncio]",
      "tests/test_requests.py::test_request_form_urlencoded[asyncio]",
      "tests/test_requests.py::test_request_form_context_manager[asyncio]",
      "tests/test_requests.py::test_request_body_then_stream[asyncio]",
      "tests/test_requests.py::test_request_stream_then_body[asyncio]",
      "tests/test_requests.py::test_request_json[asyncio]",
      "tests/test_requests.py::test_request_raw_path[asyncio]",
      "tests/test_requests.py::test_request_without_setting_receive[asyncio]",
      "tests/test_requests.py::test_request_disconnect[asyncio]",
      "tests/test_requests.py::test_request_is_disconnected[asyncio]",
      "tests/test_requests.py::test_request_state[asyncio]",
      "tests/test_requests.py::test_request_cookies[asyncio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[asyncio]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[asyncio]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages0]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages1]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages2]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[asyncio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url[trio]",
      "tests/test_requests.py::test_request_query_params[trio]",
      "tests/test_requests.py::test_request_headers[trio]",
      "tests/test_requests.py::test_request_body[trio]",
      "tests/test_requests.py::test_request_stream[trio]",
      "tests/test_requests.py::test_request_form_urlencoded[trio]",
      "tests/test_requests.py::test_request_form_context_manager[trio]",
      "tests/test_requests.py::test_request_body_then_stream[trio]",
      "tests/test_requests.py::test_request_stream_then_body[trio]",
      "tests/test_requests.py::test_request_json[trio]",
      "tests/test_requests.py::test_request_raw_path[trio]",
      "tests/test_requests.py::test_request_without_setting_receive[trio]",
      "tests/test_requests.py::test_request_disconnect[trio]",
      "tests/test_requests.py::test_request_is_disconnected[trio]",
      "tests/test_requests.py::test_request_state[trio]",
      "tests/test_requests.py::test_request_cookies[trio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[trio]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[trio]",
      "tests/test_requests.py::test_request_send_push_promise[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[trio]",
      "tests/test_requests.py::test_request_rcv[trio-messages0]",
      "tests/test_requests.py::test_request_rcv[trio-messages1]",
      "tests/test_requests.py::test_request_rcv[trio-messages2]",
      "tests/test_requests.py::test_request_rcv[trio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[trio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[trio]",
      "tests/test_requests.py::test_request_url_starlette_context[trio]",
      "tests/test_requests.py::test_request_client[scope0-expected_client0]",
      "tests/test_requests.py::test_request_client[scope1-None]",
      "tests/test_requests.py::test_request_client[scope2-None]",
      "tests/test_requests.py::test_request_scope_interface",
      "tests/test_requests.py::test_request_state_object",
      "tests/test_responses.py::test_text_response[asyncio]",
      "tests/test_responses.py::test_bytes_response[asyncio]",
      "tests/test_responses.py::test_json_none_response[asyncio]",
      "tests/test_responses.py::test_redirect_response[asyncio]",
      "tests/test_responses.py::test_quoting_redirect_response[asyncio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[asyncio]",
      "tests/test_responses.py::test_streaming_response[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[asyncio]",
      "tests/test_responses.py::test_sync_streaming_response[asyncio]",
      "tests/test_responses.py::test_response_headers[asyncio]",
      "tests/test_responses.py::test_response_phrase[asyncio]",
      "tests/test_responses.py::test_file_response[asyncio]",
      "tests/test_responses.py::test_file_response_on_head_method[asyncio]",
      "tests/test_responses.py::test_file_response_set_media_type[asyncio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[asyncio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[asyncio]",
      "tests/test_responses.py::test_file_response_with_range_header[asyncio]",
      "tests/test_responses.py::test_set_cookie[asyncio]",
      "tests/test_responses.py::test_set_cookie_path_none[asyncio]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-int]",
      "tests/test_responses.py::test_delete_cookie[asyncio]",
      "tests/test_responses.py::test_populate_headers[asyncio]",
      "tests/test_responses.py::test_head_method[asyncio]",
      "tests/test_responses.py::test_empty_response[asyncio]",
      "tests/test_responses.py::test_empty_204_response[asyncio]",
      "tests/test_responses.py::test_non_empty_response[asyncio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[asyncio]",
      "tests/test_responses.py::test_file_response_known_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_known_size[asyncio]",
      "tests/test_responses.py::test_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[asyncio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[asyncio]",
      "tests/test_responses.py::test_file_response_without_range[asyncio]",
      "tests/test_responses.py::test_file_response_head[asyncio]",
      "tests/test_responses.py::test_file_response_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_invalid[asyncio]",
      "tests/test_responses.py::test_file_response_range_head_max[asyncio]",
      "tests/test_responses.py::test_file_response_range_416[asyncio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[asyncio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[asyncio]",
      "tests/test_responses.py::test_file_response_merge_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_insert_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[asyncio]",
      "tests/test_responses.py::test_text_response[trio]",
      "tests/test_responses.py::test_bytes_response[trio]",
      "tests/test_responses.py::test_json_none_response[trio]",
      "tests/test_responses.py::test_redirect_response[trio]",
      "tests/test_responses.py::test_quoting_redirect_response[trio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[trio]",
      "tests/test_responses.py::test_streaming_response[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[trio]",
      "tests/test_responses.py::test_sync_streaming_response[trio]",
      "tests/test_responses.py::test_response_headers[trio]",
      "tests/test_responses.py::test_response_phrase[trio]",
      "tests/test_responses.py::test_file_response[trio]",
      "tests/test_responses.py::test_file_response_on_head_method[trio]",
      "tests/test_responses.py::test_file_response_set_media_type[trio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[trio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[trio]",
      "tests/test_responses.py::test_file_response_with_range_header[trio]",
      "tests/test_responses.py::test_set_cookie[trio]",
      "tests/test_responses.py::test_set_cookie_path_none[trio]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-int]",
      "tests/test_responses.py::test_delete_cookie[trio]",
      "tests/test_responses.py::test_populate_headers[trio]",
      "tests/test_responses.py::test_head_method[trio]",
      "tests/test_responses.py::test_empty_response[trio]",
      "tests/test_responses.py::test_empty_204_response[trio]",
      "tests/test_responses.py::test_non_empty_response[trio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[trio]",
      "tests/test_responses.py::test_file_response_known_size[trio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[trio]",
      "tests/test_responses.py::test_streaming_response_known_size[trio]",
      "tests/test_responses.py::test_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[trio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[trio]",
      "tests/test_responses.py::test_file_response_without_range[trio]",
      "tests/test_responses.py::test_file_response_head[trio]",
      "tests/test_responses.py::test_file_response_range[trio]",
      "tests/test_responses.py::test_file_response_range_head[trio]",
      "tests/test_responses.py::test_file_response_range_multi[trio]",
      "tests/test_responses.py::test_file_response_range_multi_head[trio]",
      "tests/test_responses.py::test_file_response_range_invalid[trio]",
      "tests/test_responses.py::test_file_response_range_head_max[trio]",
      "tests/test_responses.py::test_file_response_range_416[trio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[trio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[trio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[trio]",
      "tests/test_responses.py::test_file_response_merge_ranges[trio]",
      "tests/test_responses.py::test_file_response_insert_ranges[trio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[trio]",
      "tests/test_responses.py::test_file_response_with_method_warns",
      "tests/test_routing.py::test_router[asyncio]",
      "tests/test_routing.py::test_route_converters[asyncio]",
      "tests/test_routing.py::test_router_add_route[asyncio]",
      "tests/test_routing.py::test_router_duplicate_path[asyncio]",
      "tests/test_routing.py::test_router_add_websocket_route[asyncio]",
      "tests/test_routing.py::test_router_middleware[asyncio]",
      "tests/test_routing.py::test_protocol_switch[asyncio]",
      "tests/test_routing.py::test_mount_urls[asyncio]",
      "tests/test_routing.py::test_mount_at_root[asyncio]",
      "tests/test_routing.py::test_host_routing[asyncio]",
      "tests/test_routing.py::test_subdomain_routing[asyncio]",
      "tests/test_routing.py::test_url_for_with_root_path[asyncio]",
      "tests/test_routing.py::test_standalone_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_lifespan_async[asyncio]",
      "tests/test_routing.py::test_lifespan_with_on_events[asyncio]",
      "tests/test_routing.py::test_lifespan_sync[asyncio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[asyncio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[asyncio]",
      "tests/test_routing.py::test_raise_on_startup[asyncio]",
      "tests/test_routing.py::test_raise_on_shutdown[asyncio]",
      "tests/test_routing.py::test_partial_async_endpoint[asyncio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[asyncio]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app0]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app1]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[asyncio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[asyncio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[asyncio]",
      "tests/test_routing.py::test_websocket_route_middleware[asyncio]",
      "tests/test_routing.py::test_paths_with_root_path[asyncio]",
      "tests/test_routing.py::test_router[trio]",
      "tests/test_routing.py::test_route_converters[trio]",
      "tests/test_routing.py::test_router_add_route[trio]",
      "tests/test_routing.py::test_router_duplicate_path[trio]",
      "tests/test_routing.py::test_router_add_websocket_route[trio]",
      "tests/test_routing.py::test_router_middleware[trio]",
      "tests/test_routing.py::test_protocol_switch[trio]",
      "tests/test_routing.py::test_mount_urls[trio]",
      "tests/test_routing.py::test_mount_at_root[trio]",
      "tests/test_routing.py::test_host_routing[trio]",
      "tests/test_routing.py::test_subdomain_routing[trio]",
      "tests/test_routing.py::test_url_for_with_root_path[trio]",
      "tests/test_routing.py::test_standalone_route_matches[trio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[trio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[trio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[trio]",
      "tests/test_routing.py::test_lifespan_async[trio]",
      "tests/test_routing.py::test_lifespan_with_on_events[trio]",
      "tests/test_routing.py::test_lifespan_sync[trio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[trio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[trio]",
      "tests/test_routing.py::test_raise_on_startup[trio]",
      "tests/test_routing.py::test_raise_on_shutdown[trio]",
      "tests/test_routing.py::test_partial_async_endpoint[trio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[trio]",
      "tests/test_routing.py::test_base_route_middleware[trio-app0]",
      "tests/test_routing.py::test_base_route_middleware[trio-app1]",
      "tests/test_routing.py::test_base_route_middleware[trio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[trio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[trio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[trio]",
      "tests/test_routing.py::test_websocket_route_middleware[trio]",
      "tests/test_routing.py::test_paths_with_root_path[trio]",
      "tests/test_routing.py::test_url_path_for",
      "tests/test_routing.py::test_url_for",
      "tests/test_routing.py::test_reverse_mount_urls",
      "tests/test_routing.py::test_host_reverse_urls",
      "tests/test_routing.py::test_subdomain_reverse_urls",
      "tests/test_routing.py::test_url_for_with_double_mount",
      "tests/test_routing.py::test_duplicated_param_names",
      "tests/test_routing.py::test_route_name[function]",
      "tests/test_routing.py::test_route_name[method]",
      "tests/test_routing.py::test_route_name[classmethod]",
      "tests/test_routing.py::test_route_name[staticmethod]",
      "tests/test_routing.py::test_route_name[object]",
      "tests/test_routing.py::test_route_name[lambda]",
      "tests/test_routing.py::test_mount_routes_with_middleware_url_path_for",
      "tests/test_routing.py::test_mount_asgi_app_with_middleware_url_path_for",
      "tests/test_routing.py::test_route_repr",
      "tests/test_routing.py::test_route_repr_without_methods",
      "tests/test_routing.py::test_websocket_route_repr",
      "tests/test_routing.py::test_mount_repr",
      "tests/test_routing.py::test_mount_named_repr",
      "tests/test_routing.py::test_host_repr",
      "tests/test_routing.py::test_host_named_repr",
      "tests/test_routing.py::test_decorator_deprecations",
      "tests/test_schemas.py::test_schema_generation",
      "tests/test_schemas.py::test_schema_endpoint[asyncio]",
      "tests/test_schemas.py::test_schema_endpoint[trio]",
      "tests/test_staticfiles.py::test_staticfiles[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_post[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[trio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[trio]",
      "tests/test_staticfiles.py::test_staticfiles_post[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[trio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[trio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[trio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[trio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_instantiated_with_missing_directory",
      "tests/test_staticfiles.py::test_staticfiles_prevents_breaking_out_of_directory",
      "tests/test_staticfiles.py::test_staticfiles_disallows_path_traversal_with_symlinks",
      "tests/test_staticfiles.py::test_staticfiles_avoids_path_traversal",
      "tests/test_templates.py::test_templates[asyncio]",
      "tests/test_templates.py::test_calls_context_processors[asyncio]",
      "tests/test_templates.py::test_template_with_middleware[asyncio]",
      "tests/test_templates.py::test_templates_with_directories[asyncio]",
      "tests/test_templates.py::test_templates_with_environment[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[asyncio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[asyncio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[asyncio]",
      "tests/test_templates.py::test_templates[trio]",
      "tests/test_templates.py::test_calls_context_processors[trio]",
      "tests/test_templates.py::test_template_with_middleware[trio]",
      "tests/test_templates.py::test_templates_with_directories[trio]",
      "tests/test_templates.py::test_templates_with_environment[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[trio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[trio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[trio]",
      "tests/test_templates.py::test_templates_require_directory_or_environment",
      "tests/test_templates.py::test_templates_require_directory_or_enviroment_not_both",
      "tests/test_templates.py::test_templates_with_directory",
      "tests/test_templates.py::test_templates_with_environment_options_emit_warning",
      "tests/test_templates.py::test_templates_with_kwargs_only_requires_request_in_context",
      "tests/test_templates.py::test_templates_with_requires_request_in_context",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[asyncio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[asyncio]",
      "tests/test_testclient.py::test_error_on_startup[asyncio]",
      "tests/test_testclient.py::test_exception_in_middleware[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi2[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi3[asyncio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[asyncio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[asyncio]",
      "tests/test_testclient.py::test_client[asyncio]",
      "tests/test_testclient.py::test_query_params[asyncio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[asyncio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[asyncio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[asyncio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[asyncio]",
      "tests/test_testclient.py::test_with_duplicate_headers[asyncio]",
      "tests/test_testclient.py::test_merge_url[asyncio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[asyncio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[asyncio]",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[trio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[trio]",
      "tests/test_testclient.py::test_error_on_startup[trio]",
      "tests/test_testclient.py::test_exception_in_middleware[trio]",
      "tests/test_testclient.py::test_testclient_asgi2[trio]",
      "tests/test_testclient.py::test_testclient_asgi3[trio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[trio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[trio]",
      "tests/test_testclient.py::test_client[trio]",
      "tests/test_testclient.py::test_query_params[trio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[trio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[trio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[trio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[trio]",
      "tests/test_testclient.py::test_with_duplicate_headers[trio]",
      "tests/test_testclient.py::test_merge_url[trio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[trio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[trio]",
      "tests/test_testclient.py::test_testclient_headers_behavior",
      "tests/test_websockets.py::test_websocket_url[asyncio]",
      "tests/test_websockets.py::test_websocket_binary_json[asyncio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[asyncio]",
      "tests/test_websockets.py::test_websocket_query_params[asyncio]",
      "tests/test_websockets.py::test_websocket_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_port[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_text[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_json[asyncio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[asyncio]",
      "tests/test_websockets.py::test_client_close[asyncio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[asyncio]",
      "tests/test_websockets.py::test_application_close[asyncio]",
      "tests/test_websockets.py::test_rejected_connection[asyncio]",
      "tests/test_websockets.py::test_send_denial_response[asyncio]",
      "tests/test_websockets.py::test_send_response_multi[asyncio]",
      "tests/test_websockets.py::test_send_response_unsupported[asyncio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[asyncio]",
      "tests/test_websockets.py::test_subprotocol[asyncio]",
      "tests/test_websockets.py::test_additional_headers[asyncio]",
      "tests/test_websockets.py::test_no_additional_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_exception[asyncio]",
      "tests/test_websockets.py::test_duplicate_close[asyncio]",
      "tests/test_websockets.py::test_duplicate_disconnect[asyncio]",
      "tests/test_websockets.py::test_websocket_close_reason[asyncio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_text_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_json_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_receive_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_websocket_url[trio]",
      "tests/test_websockets.py::test_websocket_binary_json[trio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[trio]",
      "tests/test_websockets.py::test_websocket_query_params[trio]",
      "tests/test_websockets.py::test_websocket_headers[trio]",
      "tests/test_websockets.py::test_websocket_port[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[trio]",
      "tests/test_websockets.py::test_websocket_iter_text[trio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[trio]",
      "tests/test_websockets.py::test_websocket_iter_json[trio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[trio]",
      "tests/test_websockets.py::test_client_close[trio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[trio]",
      "tests/test_websockets.py::test_application_close[trio]",
      "tests/test_websockets.py::test_rejected_connection[trio]",
      "tests/test_websockets.py::test_send_denial_response[trio]",
      "tests/test_websockets.py::test_send_response_multi[trio]",
      "tests/test_websockets.py::test_send_response_unsupported[trio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[trio]",
      "tests/test_websockets.py::test_subprotocol[trio]",
      "tests/test_websockets.py::test_additional_headers[trio]",
      "tests/test_websockets.py::test_no_additional_headers[trio]",
      "tests/test_websockets.py::test_websocket_exception[trio]",
      "tests/test_websockets.py::test_duplicate_close[trio]",
      "tests/test_websockets.py::test_duplicate_disconnect[trio]",
      "tests/test_websockets.py::test_websocket_close_reason[trio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_text_before_accept[trio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[trio]",
      "tests/test_websockets.py::test_receive_json_before_accept[trio]",
      "tests/test_websockets.py::test_send_before_accept[trio]",
      "tests/test_websockets.py::test_send_wrong_message_type[trio]",
      "tests/test_websockets.py::test_receive_before_accept[trio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[trio]",
      "tests/test_websockets.py::test_websocket_scope_interface"
    ],
    "created_at": "2025-06-19T18:37:19.337762",
    "image_name": "swesmith.x86_64.encode__starlette.db5063c2",
    "base_commit": "main",
    "problem_statement": "BackgroundTasks continue to run after the first task fails (behaviour change between 0.36 and main)\n\nI\u2019ve just bumped a small project from the latest release (0.36.3) to current `main` and noticed that my error-handling middleware suddenly started reporting double-execution of background jobs.\n\nWhat I was relying on before:\n\n\u2022 If one background task raises an exception, execution stops right there  \n\u2022 The first exception is propagated back to the client  \n\u2022 Later tasks in the list are never touched (so their side-effects don\u2019t happen)\n\nAfter the upgrade I\u2019m seeing *all* the tasks being executed even though the first one blows up. That means any state mutations in the later tasks still happen, which in my case leaves the DB in an inconsistent state.\n\nTiny repro (no external dependencies other than Starlette itself):\n\n```python\nfrom starlette.background import BackgroundTasks\nfrom starlette.responses import Response\nfrom starlette.testclient import TestClient\n\nCOUNTER = 0\n\ndef job() -> None:\n    global COUNTER\n    COUNTER += 1\n    if COUNTER == 1:\n        # Simulate a broken first task\n        raise RuntimeError(\"first task explodes\")\n\nasync def app(scope, receive, send):\n    tasks = BackgroundTasks()\n    tasks.add_task(job)\n    tasks.add_task(job)     # this one should never run if the first fails\n    response = Response(\"ok\", background=tasks)\n    await response(scope, receive, send)\n\nclient = TestClient(app)\n\ntry:\n    client.get(\"/\")\nexcept RuntimeError:\n    # after the request COUNTER used to be 1, now it is 2\n    print(\"counter =\", COUNTER)\n```\n\nExpected output:\n```\ncounter = 1\n```\n\nCurrent `main` output:\n```\ncounter = 2\n```\n\nSo the second `job` is executed even though the first one already failed, which is a change from the previous behaviour and, at least for me, a pretty surprising one."
  },
  {
    "instance_id": "encode__starlette.db5063c2.sweagent_buggen__0f852440",
    "repo": "swesmith/encode__starlette.db5063c2",
    "patch": "diff --git a/starlette/background.py b/starlette/background.py\nindex 0430fc0..a3cf3a5 100644\n--- a/starlette/background.py\n+++ b/starlette/background.py\n@@ -23,7 +23,7 @@ class BackgroundTask:\n \n     async def __call__(self) -> None:\n         if self.is_async:\n-            await self.func(*self.args, **self.kwargs)\n+            self.func(*self.args, **self.kwargs)\n         else:\n             await run_in_threadpool(self.func, *self.args, **self.kwargs)\n \n",
    "FAIL_TO_PASS": [
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[asyncio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[trio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[trio]",
      "tests/test_background.py::test_async_task[asyncio]",
      "tests/test_background.py::test_async_task[trio]",
      "tests/test_responses.py::test_streaming_response[asyncio]",
      "tests/test_responses.py::test_file_response[asyncio]",
      "tests/test_responses.py::test_streaming_response[trio]",
      "tests/test_responses.py::test_file_response[trio]"
    ],
    "PASS_TO_PASS": [
      "tests/middleware/test_base.py::test_custom_middleware[asyncio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[asyncio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[asyncio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[asyncio]",
      "tests/middleware/test_base.py::test_contextvars[asyncio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[asyncio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[asyncio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[asyncio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-False]",
      "tests/middleware/test_base.py::test_custom_middleware[trio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[trio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[trio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[trio]",
      "tests/middleware/test_base.py::test_contextvars[trio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[trio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[trio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[trio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-False]",
      "tests/middleware/test_base.py::test_pr_1519_comment_1236166180_example",
      "tests/middleware/test_cors.py::test_cors_allow_all[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[asyncio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[asyncio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[asyncio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[trio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[trio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[trio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[trio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[trio]",
      "tests/middleware/test_errors.py::test_handler[asyncio]",
      "tests/middleware/test_errors.py::test_debug_text[asyncio]",
      "tests/middleware/test_errors.py::test_debug_html[asyncio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[asyncio]",
      "tests/middleware/test_errors.py::test_debug_not_http[asyncio]",
      "tests/middleware/test_errors.py::test_background_task[asyncio]",
      "tests/middleware/test_errors.py::test_handler[trio]",
      "tests/middleware/test_errors.py::test_debug_text[trio]",
      "tests/middleware/test_errors.py::test_debug_html[trio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[trio]",
      "tests/middleware/test_errors.py::test_debug_not_http[trio]",
      "tests/middleware/test_errors.py::test_background_task[trio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[trio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[asyncio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[trio]",
      "tests/middleware/test_middleware.py::test_middleware_repr",
      "tests/middleware/test_middleware.py::test_middleware_iter",
      "tests/middleware/test_session.py::test_session[asyncio]",
      "tests/middleware/test_session.py::test_session_expires[asyncio]",
      "tests/middleware/test_session.py::test_secure_session[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[asyncio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_domain_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session[trio]",
      "tests/middleware/test_session.py::test_session_expires[trio]",
      "tests/middleware/test_session.py::test_secure_session[trio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[trio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[trio]",
      "tests/middleware/test_session.py::test_session_cookie[trio]",
      "tests/middleware/test_session.py::test_domain_cookie[trio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[asyncio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[asyncio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[trio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[trio]",
      "tests/middleware/test_trusted_host.py::test_default_allowed_hosts",
      "tests/middleware/test_wsgi.py::test_wsgi_get[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_get[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[trio]",
      "tests/middleware/test_wsgi.py::test_build_environ",
      "tests/middleware/test_wsgi.py::test_build_environ_encoding",
      "tests/test__utils.py::test_async_func",
      "tests/test__utils.py::test_async_partial",
      "tests/test__utils.py::test_async_method",
      "tests/test__utils.py::test_async_object_call",
      "tests/test__utils.py::test_async_partial_object_call",
      "tests/test__utils.py::test_async_nested_partial",
      "tests/test__utils.py::test_get_route_path[scope0-/foo-123/bar]",
      "tests/test__utils.py::test_get_route_path[scope1-/bar]",
      "tests/test__utils.py::test_get_route_path[scope2-]",
      "tests/test__utils.py::test_get_route_path[scope3-/foo/bar]",
      "tests/test_applications.py::test_url_path_for",
      "tests/test_applications.py::test_func_route[asyncio]",
      "tests/test_applications.py::test_async_route[asyncio]",
      "tests/test_applications.py::test_class_route[asyncio]",
      "tests/test_applications.py::test_mounted_route[asyncio]",
      "tests/test_applications.py::test_mounted_route_path_params[asyncio]",
      "tests/test_applications.py::test_subdomain_route[asyncio]",
      "tests/test_applications.py::test_websocket_route[asyncio]",
      "tests/test_applications.py::test_400[asyncio]",
      "tests/test_applications.py::test_405[asyncio]",
      "tests/test_applications.py::test_500[asyncio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[asyncio]",
      "tests/test_applications.py::test_middleware[asyncio]",
      "tests/test_applications.py::test_app_mount[asyncio]",
      "tests/test_applications.py::test_app_debug[asyncio]",
      "tests/test_applications.py::test_app_add_route[asyncio]",
      "tests/test_applications.py::test_app_add_websocket_route[asyncio]",
      "tests/test_applications.py::test_app_add_event_handler[asyncio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[asyncio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_middleware_stack_init[asyncio]",
      "tests/test_applications.py::test_middleware_args[asyncio]",
      "tests/test_applications.py::test_middleware_factory[asyncio]",
      "tests/test_applications.py::test_func_route[trio]",
      "tests/test_applications.py::test_async_route[trio]",
      "tests/test_applications.py::test_class_route[trio]",
      "tests/test_applications.py::test_mounted_route[trio]",
      "tests/test_applications.py::test_mounted_route_path_params[trio]",
      "tests/test_applications.py::test_subdomain_route[trio]",
      "tests/test_applications.py::test_websocket_route[trio]",
      "tests/test_applications.py::test_400[trio]",
      "tests/test_applications.py::test_405[trio]",
      "tests/test_applications.py::test_500[trio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[trio]",
      "tests/test_applications.py::test_middleware[trio]",
      "tests/test_applications.py::test_app_mount[trio]",
      "tests/test_applications.py::test_app_debug[trio]",
      "tests/test_applications.py::test_app_add_route[trio]",
      "tests/test_applications.py::test_app_add_websocket_route[trio]",
      "tests/test_applications.py::test_app_add_event_handler[trio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[trio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[trio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[trio]",
      "tests/test_applications.py::test_middleware_stack_init[trio]",
      "tests/test_applications.py::test_middleware_args[trio]",
      "tests/test_applications.py::test_middleware_factory[trio]",
      "tests/test_applications.py::test_routes",
      "tests/test_applications.py::test_decorator_deprecations",
      "tests/test_applications.py::test_lifespan_app_subclass",
      "tests/test_authentication.py::test_invalid_decorator_usage",
      "tests/test_authentication.py::test_user_interface[asyncio]",
      "tests/test_authentication.py::test_authentication_required[asyncio]",
      "tests/test_authentication.py::test_websocket_authentication_required[asyncio]",
      "tests/test_authentication.py::test_authentication_redirect[asyncio]",
      "tests/test_authentication.py::test_custom_on_error[asyncio]",
      "tests/test_authentication.py::test_user_interface[trio]",
      "tests/test_authentication.py::test_authentication_required[trio]",
      "tests/test_authentication.py::test_websocket_authentication_required[trio]",
      "tests/test_authentication.py::test_authentication_redirect[trio]",
      "tests/test_authentication.py::test_custom_on_error[trio]",
      "tests/test_background.py::test_sync_task[asyncio]",
      "tests/test_background.py::test_multiple_tasks[asyncio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[asyncio]",
      "tests/test_background.py::test_sync_task[trio]",
      "tests/test_background.py::test_multiple_tasks[trio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[trio]",
      "tests/test_concurrency.py::test_run_until_first_complete[asyncio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[asyncio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[asyncio]",
      "tests/test_concurrency.py::test_run_until_first_complete[trio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[trio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[trio]",
      "tests/test_config.py::test_config_types",
      "tests/test_config.py::test_config",
      "tests/test_config.py::test_missing_env_file_raises",
      "tests/test_config.py::test_environ",
      "tests/test_config.py::test_config_with_env_prefix",
      "tests/test_convertors.py::test_datetime_convertor[asyncio]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1-0-404]",
      "tests/test_convertors.py::test_datetime_convertor[trio]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1-0-404]",
      "tests/test_datastructures.py::test_url",
      "tests/test_datastructures.py::test_url_query_params",
      "tests/test_datastructures.py::test_hidden_password",
      "tests/test_datastructures.py::test_csv",
      "tests/test_datastructures.py::test_url_from_scope",
      "tests/test_datastructures.py::test_headers",
      "tests/test_datastructures.py::test_mutable_headers",
      "tests/test_datastructures.py::test_mutable_headers_merge",
      "tests/test_datastructures.py::test_mutable_headers_merge_dict",
      "tests/test_datastructures.py::test_mutable_headers_update",
      "tests/test_datastructures.py::test_mutable_headers_update_dict",
      "tests/test_datastructures.py::test_mutable_headers_merge_not_mapping",
      "tests/test_datastructures.py::test_headers_mutablecopy",
      "tests/test_datastructures.py::test_mutable_headers_from_scope",
      "tests/test_datastructures.py::test_url_blank_params",
      "tests/test_datastructures.py::test_queryparams",
      "tests/test_datastructures.py::test_upload_file_file_input[asyncio]",
      "tests/test_datastructures.py::test_upload_file_without_size[asyncio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[asyncio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[asyncio]",
      "tests/test_datastructures.py::test_upload_file_file_input[trio]",
      "tests/test_datastructures.py::test_upload_file_without_size[trio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[trio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[trio]",
      "tests/test_datastructures.py::test_formdata",
      "tests/test_datastructures.py::test_multidict",
      "tests/test_endpoints.py::test_http_endpoint_route[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[trio]",
      "tests/test_exceptions.py::test_not_acceptable[asyncio]",
      "tests/test_exceptions.py::test_no_content[asyncio]",
      "tests/test_exceptions.py::test_not_modified[asyncio]",
      "tests/test_exceptions.py::test_with_headers[asyncio]",
      "tests/test_exceptions.py::test_websockets_should_raise[asyncio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[asyncio]",
      "tests/test_exceptions.py::test_force_500_response[asyncio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[asyncio]",
      "tests/test_exceptions.py::test_not_acceptable[trio]",
      "tests/test_exceptions.py::test_no_content[trio]",
      "tests/test_exceptions.py::test_not_modified[trio]",
      "tests/test_exceptions.py::test_with_headers[trio]",
      "tests/test_exceptions.py::test_websockets_should_raise[trio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[trio]",
      "tests/test_exceptions.py::test_force_500_response[trio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[trio]",
      "tests/test_exceptions.py::test_http_str",
      "tests/test_exceptions.py::test_http_repr",
      "tests/test_exceptions.py::test_websocket_str",
      "tests/test_exceptions.py::test_websocket_repr",
      "tests/test_exceptions.py::test_exception_middleware_deprecation",
      "tests/test_formparsers.py::test_multipart_request_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[asyncio]",
      "tests/test_formparsers.py::test_multi_items[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[asyncio]",
      "tests/test_formparsers.py::test_no_request_data[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[asyncio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_multipart_request_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[trio]",
      "tests/test_formparsers.py::test_multi_items[trio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[trio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[trio]",
      "tests/test_formparsers.py::test_no_request_data[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[trio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[trio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_user_safe_decode_helper",
      "tests/test_formparsers.py::test_user_safe_decode_ignores_wrong_charset",
      "tests/test_requests.py::test_request_url[asyncio]",
      "tests/test_requests.py::test_request_query_params[asyncio]",
      "tests/test_requests.py::test_request_headers[asyncio]",
      "tests/test_requests.py::test_request_body[asyncio]",
      "tests/test_requests.py::test_request_stream[asyncio]",
      "tests/test_requests.py::test_request_form_urlencoded[asyncio]",
      "tests/test_requests.py::test_request_form_context_manager[asyncio]",
      "tests/test_requests.py::test_request_body_then_stream[asyncio]",
      "tests/test_requests.py::test_request_stream_then_body[asyncio]",
      "tests/test_requests.py::test_request_json[asyncio]",
      "tests/test_requests.py::test_request_raw_path[asyncio]",
      "tests/test_requests.py::test_request_without_setting_receive[asyncio]",
      "tests/test_requests.py::test_request_disconnect[asyncio]",
      "tests/test_requests.py::test_request_is_disconnected[asyncio]",
      "tests/test_requests.py::test_request_state[asyncio]",
      "tests/test_requests.py::test_request_cookies[asyncio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[asyncio]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[asyncio]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages0]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages1]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages2]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[asyncio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url[trio]",
      "tests/test_requests.py::test_request_query_params[trio]",
      "tests/test_requests.py::test_request_headers[trio]",
      "tests/test_requests.py::test_request_body[trio]",
      "tests/test_requests.py::test_request_stream[trio]",
      "tests/test_requests.py::test_request_form_urlencoded[trio]",
      "tests/test_requests.py::test_request_form_context_manager[trio]",
      "tests/test_requests.py::test_request_body_then_stream[trio]",
      "tests/test_requests.py::test_request_stream_then_body[trio]",
      "tests/test_requests.py::test_request_json[trio]",
      "tests/test_requests.py::test_request_raw_path[trio]",
      "tests/test_requests.py::test_request_without_setting_receive[trio]",
      "tests/test_requests.py::test_request_disconnect[trio]",
      "tests/test_requests.py::test_request_is_disconnected[trio]",
      "tests/test_requests.py::test_request_state[trio]",
      "tests/test_requests.py::test_request_cookies[trio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[trio]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[trio]",
      "tests/test_requests.py::test_request_send_push_promise[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[trio]",
      "tests/test_requests.py::test_request_rcv[trio-messages0]",
      "tests/test_requests.py::test_request_rcv[trio-messages1]",
      "tests/test_requests.py::test_request_rcv[trio-messages2]",
      "tests/test_requests.py::test_request_rcv[trio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[trio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[trio]",
      "tests/test_requests.py::test_request_url_starlette_context[trio]",
      "tests/test_requests.py::test_request_client[scope0-expected_client0]",
      "tests/test_requests.py::test_request_client[scope1-None]",
      "tests/test_requests.py::test_request_client[scope2-None]",
      "tests/test_requests.py::test_request_scope_interface",
      "tests/test_requests.py::test_request_state_object",
      "tests/test_responses.py::test_text_response[asyncio]",
      "tests/test_responses.py::test_bytes_response[asyncio]",
      "tests/test_responses.py::test_json_none_response[asyncio]",
      "tests/test_responses.py::test_redirect_response[asyncio]",
      "tests/test_responses.py::test_quoting_redirect_response[asyncio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[asyncio]",
      "tests/test_responses.py::test_sync_streaming_response[asyncio]",
      "tests/test_responses.py::test_response_headers[asyncio]",
      "tests/test_responses.py::test_response_phrase[asyncio]",
      "tests/test_responses.py::test_file_response_on_head_method[asyncio]",
      "tests/test_responses.py::test_file_response_set_media_type[asyncio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[asyncio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[asyncio]",
      "tests/test_responses.py::test_file_response_with_range_header[asyncio]",
      "tests/test_responses.py::test_set_cookie[asyncio]",
      "tests/test_responses.py::test_set_cookie_path_none[asyncio]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-int]",
      "tests/test_responses.py::test_delete_cookie[asyncio]",
      "tests/test_responses.py::test_populate_headers[asyncio]",
      "tests/test_responses.py::test_head_method[asyncio]",
      "tests/test_responses.py::test_empty_response[asyncio]",
      "tests/test_responses.py::test_empty_204_response[asyncio]",
      "tests/test_responses.py::test_non_empty_response[asyncio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[asyncio]",
      "tests/test_responses.py::test_file_response_known_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_known_size[asyncio]",
      "tests/test_responses.py::test_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[asyncio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[asyncio]",
      "tests/test_responses.py::test_file_response_without_range[asyncio]",
      "tests/test_responses.py::test_file_response_head[asyncio]",
      "tests/test_responses.py::test_file_response_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_invalid[asyncio]",
      "tests/test_responses.py::test_file_response_range_head_max[asyncio]",
      "tests/test_responses.py::test_file_response_range_416[asyncio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[asyncio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[asyncio]",
      "tests/test_responses.py::test_file_response_merge_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_insert_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[asyncio]",
      "tests/test_responses.py::test_text_response[trio]",
      "tests/test_responses.py::test_bytes_response[trio]",
      "tests/test_responses.py::test_json_none_response[trio]",
      "tests/test_responses.py::test_redirect_response[trio]",
      "tests/test_responses.py::test_quoting_redirect_response[trio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[trio]",
      "tests/test_responses.py::test_sync_streaming_response[trio]",
      "tests/test_responses.py::test_response_headers[trio]",
      "tests/test_responses.py::test_response_phrase[trio]",
      "tests/test_responses.py::test_file_response_on_head_method[trio]",
      "tests/test_responses.py::test_file_response_set_media_type[trio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[trio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[trio]",
      "tests/test_responses.py::test_file_response_with_range_header[trio]",
      "tests/test_responses.py::test_set_cookie[trio]",
      "tests/test_responses.py::test_set_cookie_path_none[trio]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-int]",
      "tests/test_responses.py::test_delete_cookie[trio]",
      "tests/test_responses.py::test_populate_headers[trio]",
      "tests/test_responses.py::test_head_method[trio]",
      "tests/test_responses.py::test_empty_response[trio]",
      "tests/test_responses.py::test_empty_204_response[trio]",
      "tests/test_responses.py::test_non_empty_response[trio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[trio]",
      "tests/test_responses.py::test_file_response_known_size[trio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[trio]",
      "tests/test_responses.py::test_streaming_response_known_size[trio]",
      "tests/test_responses.py::test_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[trio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[trio]",
      "tests/test_responses.py::test_file_response_without_range[trio]",
      "tests/test_responses.py::test_file_response_head[trio]",
      "tests/test_responses.py::test_file_response_range[trio]",
      "tests/test_responses.py::test_file_response_range_head[trio]",
      "tests/test_responses.py::test_file_response_range_multi[trio]",
      "tests/test_responses.py::test_file_response_range_multi_head[trio]",
      "tests/test_responses.py::test_file_response_range_invalid[trio]",
      "tests/test_responses.py::test_file_response_range_head_max[trio]",
      "tests/test_responses.py::test_file_response_range_416[trio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[trio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[trio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[trio]",
      "tests/test_responses.py::test_file_response_merge_ranges[trio]",
      "tests/test_responses.py::test_file_response_insert_ranges[trio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[trio]",
      "tests/test_responses.py::test_file_response_with_method_warns",
      "tests/test_routing.py::test_router[asyncio]",
      "tests/test_routing.py::test_route_converters[asyncio]",
      "tests/test_routing.py::test_router_add_route[asyncio]",
      "tests/test_routing.py::test_router_duplicate_path[asyncio]",
      "tests/test_routing.py::test_router_add_websocket_route[asyncio]",
      "tests/test_routing.py::test_router_middleware[asyncio]",
      "tests/test_routing.py::test_protocol_switch[asyncio]",
      "tests/test_routing.py::test_mount_urls[asyncio]",
      "tests/test_routing.py::test_mount_at_root[asyncio]",
      "tests/test_routing.py::test_host_routing[asyncio]",
      "tests/test_routing.py::test_subdomain_routing[asyncio]",
      "tests/test_routing.py::test_url_for_with_root_path[asyncio]",
      "tests/test_routing.py::test_standalone_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_lifespan_async[asyncio]",
      "tests/test_routing.py::test_lifespan_with_on_events[asyncio]",
      "tests/test_routing.py::test_lifespan_sync[asyncio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[asyncio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[asyncio]",
      "tests/test_routing.py::test_raise_on_startup[asyncio]",
      "tests/test_routing.py::test_raise_on_shutdown[asyncio]",
      "tests/test_routing.py::test_partial_async_endpoint[asyncio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[asyncio]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app0]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app1]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[asyncio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[asyncio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[asyncio]",
      "tests/test_routing.py::test_websocket_route_middleware[asyncio]",
      "tests/test_routing.py::test_paths_with_root_path[asyncio]",
      "tests/test_routing.py::test_router[trio]",
      "tests/test_routing.py::test_route_converters[trio]",
      "tests/test_routing.py::test_router_add_route[trio]",
      "tests/test_routing.py::test_router_duplicate_path[trio]",
      "tests/test_routing.py::test_router_add_websocket_route[trio]",
      "tests/test_routing.py::test_router_middleware[trio]",
      "tests/test_routing.py::test_protocol_switch[trio]",
      "tests/test_routing.py::test_mount_urls[trio]",
      "tests/test_routing.py::test_mount_at_root[trio]",
      "tests/test_routing.py::test_host_routing[trio]",
      "tests/test_routing.py::test_subdomain_routing[trio]",
      "tests/test_routing.py::test_url_for_with_root_path[trio]",
      "tests/test_routing.py::test_standalone_route_matches[trio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[trio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[trio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[trio]",
      "tests/test_routing.py::test_lifespan_async[trio]",
      "tests/test_routing.py::test_lifespan_with_on_events[trio]",
      "tests/test_routing.py::test_lifespan_sync[trio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[trio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[trio]",
      "tests/test_routing.py::test_raise_on_startup[trio]",
      "tests/test_routing.py::test_raise_on_shutdown[trio]",
      "tests/test_routing.py::test_partial_async_endpoint[trio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[trio]",
      "tests/test_routing.py::test_base_route_middleware[trio-app0]",
      "tests/test_routing.py::test_base_route_middleware[trio-app1]",
      "tests/test_routing.py::test_base_route_middleware[trio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[trio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[trio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[trio]",
      "tests/test_routing.py::test_websocket_route_middleware[trio]",
      "tests/test_routing.py::test_paths_with_root_path[trio]",
      "tests/test_routing.py::test_url_path_for",
      "tests/test_routing.py::test_url_for",
      "tests/test_routing.py::test_reverse_mount_urls",
      "tests/test_routing.py::test_host_reverse_urls",
      "tests/test_routing.py::test_subdomain_reverse_urls",
      "tests/test_routing.py::test_url_for_with_double_mount",
      "tests/test_routing.py::test_duplicated_param_names",
      "tests/test_routing.py::test_route_name[function]",
      "tests/test_routing.py::test_route_name[method]",
      "tests/test_routing.py::test_route_name[classmethod]",
      "tests/test_routing.py::test_route_name[staticmethod]",
      "tests/test_routing.py::test_route_name[object]",
      "tests/test_routing.py::test_route_name[lambda]",
      "tests/test_routing.py::test_mount_routes_with_middleware_url_path_for",
      "tests/test_routing.py::test_mount_asgi_app_with_middleware_url_path_for",
      "tests/test_routing.py::test_route_repr",
      "tests/test_routing.py::test_route_repr_without_methods",
      "tests/test_routing.py::test_websocket_route_repr",
      "tests/test_routing.py::test_mount_repr",
      "tests/test_routing.py::test_mount_named_repr",
      "tests/test_routing.py::test_host_repr",
      "tests/test_routing.py::test_host_named_repr",
      "tests/test_routing.py::test_decorator_deprecations",
      "tests/test_schemas.py::test_schema_generation",
      "tests/test_schemas.py::test_schema_endpoint[asyncio]",
      "tests/test_schemas.py::test_schema_endpoint[trio]",
      "tests/test_staticfiles.py::test_staticfiles[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_post[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[trio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[trio]",
      "tests/test_staticfiles.py::test_staticfiles_post[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[trio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[trio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[trio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[trio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_instantiated_with_missing_directory",
      "tests/test_staticfiles.py::test_staticfiles_prevents_breaking_out_of_directory",
      "tests/test_staticfiles.py::test_staticfiles_disallows_path_traversal_with_symlinks",
      "tests/test_staticfiles.py::test_staticfiles_avoids_path_traversal",
      "tests/test_templates.py::test_templates[asyncio]",
      "tests/test_templates.py::test_calls_context_processors[asyncio]",
      "tests/test_templates.py::test_template_with_middleware[asyncio]",
      "tests/test_templates.py::test_templates_with_directories[asyncio]",
      "tests/test_templates.py::test_templates_with_environment[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[asyncio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[asyncio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[asyncio]",
      "tests/test_templates.py::test_templates[trio]",
      "tests/test_templates.py::test_calls_context_processors[trio]",
      "tests/test_templates.py::test_template_with_middleware[trio]",
      "tests/test_templates.py::test_templates_with_directories[trio]",
      "tests/test_templates.py::test_templates_with_environment[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[trio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[trio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[trio]",
      "tests/test_templates.py::test_templates_require_directory_or_environment",
      "tests/test_templates.py::test_templates_require_directory_or_enviroment_not_both",
      "tests/test_templates.py::test_templates_with_directory",
      "tests/test_templates.py::test_templates_with_environment_options_emit_warning",
      "tests/test_templates.py::test_templates_with_kwargs_only_requires_request_in_context",
      "tests/test_templates.py::test_templates_with_requires_request_in_context",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[asyncio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[asyncio]",
      "tests/test_testclient.py::test_error_on_startup[asyncio]",
      "tests/test_testclient.py::test_exception_in_middleware[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi2[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi3[asyncio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[asyncio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[asyncio]",
      "tests/test_testclient.py::test_client[asyncio]",
      "tests/test_testclient.py::test_query_params[asyncio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[asyncio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[asyncio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[asyncio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[asyncio]",
      "tests/test_testclient.py::test_with_duplicate_headers[asyncio]",
      "tests/test_testclient.py::test_merge_url[asyncio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[asyncio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[asyncio]",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[trio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[trio]",
      "tests/test_testclient.py::test_error_on_startup[trio]",
      "tests/test_testclient.py::test_exception_in_middleware[trio]",
      "tests/test_testclient.py::test_testclient_asgi2[trio]",
      "tests/test_testclient.py::test_testclient_asgi3[trio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[trio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[trio]",
      "tests/test_testclient.py::test_client[trio]",
      "tests/test_testclient.py::test_query_params[trio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[trio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[trio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[trio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[trio]",
      "tests/test_testclient.py::test_with_duplicate_headers[trio]",
      "tests/test_testclient.py::test_merge_url[trio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[trio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[trio]",
      "tests/test_testclient.py::test_testclient_headers_behavior",
      "tests/test_websockets.py::test_websocket_url[asyncio]",
      "tests/test_websockets.py::test_websocket_binary_json[asyncio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[asyncio]",
      "tests/test_websockets.py::test_websocket_query_params[asyncio]",
      "tests/test_websockets.py::test_websocket_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_port[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_text[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_json[asyncio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[asyncio]",
      "tests/test_websockets.py::test_client_close[asyncio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[asyncio]",
      "tests/test_websockets.py::test_application_close[asyncio]",
      "tests/test_websockets.py::test_rejected_connection[asyncio]",
      "tests/test_websockets.py::test_send_denial_response[asyncio]",
      "tests/test_websockets.py::test_send_response_multi[asyncio]",
      "tests/test_websockets.py::test_send_response_unsupported[asyncio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[asyncio]",
      "tests/test_websockets.py::test_subprotocol[asyncio]",
      "tests/test_websockets.py::test_additional_headers[asyncio]",
      "tests/test_websockets.py::test_no_additional_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_exception[asyncio]",
      "tests/test_websockets.py::test_duplicate_close[asyncio]",
      "tests/test_websockets.py::test_duplicate_disconnect[asyncio]",
      "tests/test_websockets.py::test_websocket_close_reason[asyncio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_text_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_json_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_receive_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_websocket_url[trio]",
      "tests/test_websockets.py::test_websocket_binary_json[trio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[trio]",
      "tests/test_websockets.py::test_websocket_query_params[trio]",
      "tests/test_websockets.py::test_websocket_headers[trio]",
      "tests/test_websockets.py::test_websocket_port[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[trio]",
      "tests/test_websockets.py::test_websocket_iter_text[trio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[trio]",
      "tests/test_websockets.py::test_websocket_iter_json[trio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[trio]",
      "tests/test_websockets.py::test_client_close[trio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[trio]",
      "tests/test_websockets.py::test_application_close[trio]",
      "tests/test_websockets.py::test_rejected_connection[trio]",
      "tests/test_websockets.py::test_send_denial_response[trio]",
      "tests/test_websockets.py::test_send_response_multi[trio]",
      "tests/test_websockets.py::test_send_response_unsupported[trio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[trio]",
      "tests/test_websockets.py::test_subprotocol[trio]",
      "tests/test_websockets.py::test_additional_headers[trio]",
      "tests/test_websockets.py::test_no_additional_headers[trio]",
      "tests/test_websockets.py::test_websocket_exception[trio]",
      "tests/test_websockets.py::test_duplicate_close[trio]",
      "tests/test_websockets.py::test_duplicate_disconnect[trio]",
      "tests/test_websockets.py::test_websocket_close_reason[trio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_text_before_accept[trio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[trio]",
      "tests/test_websockets.py::test_receive_json_before_accept[trio]",
      "tests/test_websockets.py::test_send_before_accept[trio]",
      "tests/test_websockets.py::test_send_wrong_message_type[trio]",
      "tests/test_websockets.py::test_receive_before_accept[trio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[trio]",
      "tests/test_websockets.py::test_websocket_scope_interface"
    ],
    "created_at": "2025-06-19T18:37:17.243138",
    "image_name": "swesmith.x86_64.encode__starlette.db5063c2",
    "base_commit": "main",
    "problem_statement": "Async `BackgroundTask` is no longer executed  \nDescription\n-------------\n\nSince upgrading to the current `main` branch we have started to notice that background clean-up jobs that are declared as **async** are silently skipped.\n\nMinimal example (can be dropped in `example.py` and run with `uvicorn example:app`):\n\n```python\nfrom starlette.applications import Starlette\nfrom starlette.background import BackgroundTask\nfrom starlette.responses import Response\nfrom starlette.routing import Route\nimport anyio\n\nFLAG = {\"done\": False}\n\nasync def mark_done() -> None:          # <\u2014 async background work\n    await anyio.sleep(0.01)             # pretend it\u2019s doing something\n    FLAG[\"done\"] = True\n\nasync def homepage(request):\n    # attach the async task\n    return Response(\"ok\", background=BackgroundTask(mark_done))\n\nroutes = [Route(\"/\", homepage)]\napp = Starlette(routes=routes)\n```\n\nReproduction\n------------\n\n1. Start the server:\n   ```\n   uvicorn example:app\n   ```\n2. Curl the endpoint:\n   ```\n   curl http://127.0.0.1:8000/\n   ```\n3. Give the task a moment to run:\n   ```python\n   >>> import time, example\n   >>> time.sleep(0.1)\n   >>> example.FLAG\n   {'done': False}\n   ```\n\nObserved behaviour  \n\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\n`FLAG[\"done\"]` stays `False`, i.e. the coroutine returned by `mark_done()` is created but never awaited or scheduled, and nothing actually happens.  \n\nIf you enable Python warnings you can also see:\n\n```\nRuntimeWarning: coroutine 'mark_done' was never awaited\n```\n\nExpected behaviour  \n\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\u203e\nPrior to the recent change the same snippet printed:\n\n```\n>>> example.FLAG\n{'done': True}\n```\n\nand no runtime warnings were emitted.  \n\nThe problem only affects async callables; a synchronous `BackgroundTask(lambda: FLAG.update(done=True))` still works fine.\n\n(This breaks patterns such as streaming responses that rely on an async clean-up step, or any background task that wants to use `await` internally.)"
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__f2dcd207",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/generic/websocket.py b/channels/generic/websocket.py\nindex b4d9911..cbd9160 100644\n--- a/channels/generic/websocket.py\n+++ b/channels/generic/websocket.py\n@@ -60,7 +60,7 @@ class WebsocketConsumer(SyncConsumer):\n         Called when a WebSocket frame is received. Decodes it and passes it\n         to receive().\n         \"\"\"\n-        if message.get(\"text\") is not None:\n+        if \"text\" in message:\n             self.receive(text_data=message[\"text\"])\n         else:\n             self.receive(bytes_data=message[\"bytes\"])\n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[Strict]",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:16.391930",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "WebsocketConsumer routes binary frames to `text_data`  \n=====================================================\n\nI think a recent change to `channels.generic.websocket.WebsocketConsumer` broke the way binary messages are dispatched.  \nRight now, if the incoming frame happens to contain the `\"text\"` key **even when its value is `None`**, the consumer is invoked as if the message were textual, so `bytes_data` is silently lost.\n\nWhy this bites\n--------------\n\nQuite a few browsers (and the Django ASGI handler itself) always put both `\"text\"` *and* `\"bytes\"` in the message dictionary, setting the one that is not in use to `None`.  \nWith the current logic that means every binary frame is treated as \u201ctext\u201d, which is obviously wrong for things like protobuf payloads, images, etc.\n\nMinimal repro (run inside an async event loop)\n----------------------------------------------\n\n```python\nfrom channels.generic.websocket import WebsocketConsumer\nfrom channels.routing import URLRouter\nfrom channels.testing import WebsocketCommunicator\nfrom django.urls import path\nimport asyncio, json\n\nclass EchoConsumer(WebsocketConsumer):\n    def receive(self, text_data=None, bytes_data=None):\n        # Just echo back what we got so we can inspect it\n        self.send(text_data=json.dumps({\n            \"text\": text_data,\n            \"bytes\": None if bytes_data is None else bytes_data.decode()\n        }))\n\nasync def demo():\n    application = URLRouter([path(\"ws/\", EchoConsumer.as_asgi())])\n\n    comm = WebsocketCommunicator(application, \"/ws/\")\n    await comm.connect()\n\n    # pretend the client sends a binary frame\n    await comm.send_to(bytes_data=b\"abc\")\n    echoed = await comm.receive_from()\n\n    print(\"Received from server:\", echoed)  # \u2190 Observe the problem\n    await comm.disconnect()\n\nasyncio.run(demo())\n```\n\nWhat happens\n------------\n\n```\nReceived from server: {\"text\": null, \"bytes\": null}\n```\n\nThe consumer reports that **both** `text_data` and `bytes_data` are `None`, even though we clearly sent a binary payload.\n\nWhat I expected\n---------------\n\n```\nReceived from server: {\"text\": null, \"bytes\": \"abc\"}\n```\n\nEnvironment\n-----------\n\n\u2022 channels (main branch @ 8c4\u2026)<br>\n\u2022 Django 5.1.6<br>\n\u2022 Python 3.10.16 (Ubuntu 22.04)<br>\n\u2022 asgiref 3.8.1\n\nIt looks like the dispatch code only checks for the presence of the `\"text\"` key instead of the value being non-null. That makes every frame land in the wrong branch as soon as the key exists.\n\nThanks for taking a look!"
  },
  {
    "instance_id": "django__channels.a144b4b8.sweagent_buggen__f85080c1",
    "repo": "swesmith/django__channels.a144b4b8",
    "patch": "diff --git a/channels/generic/websocket.py b/channels/generic/websocket.py\nindex b4d9911..6e8ee7d 100644\n--- a/channels/generic/websocket.py\n+++ b/channels/generic/websocket.py\n@@ -150,7 +150,10 @@ class JsonWebsocketConsumer(WebsocketConsumer):\n \n     @classmethod\n     def encode_json(cls, content):\n-        return json.dumps(content)\n+        encoded = json.dumps(content)\n+        if isinstance(content, dict):\n+            content.setdefault(\"_sj\", len(encoded))\n+        return encoded\n \n \n class AsyncWebsocketConsumer(AsyncConsumer):\n",
    "FAIL_TO_PASS": [
      "tests/test_generic_websocket.py::test_json_websocket_consumer",
      "tests/test_http.py::test_session_samesite[Strict]"
    ],
    "PASS_TO_PASS": [
      "tests/test_database.py::ConnectionClosingTests::test_http",
      "tests/test_database.py::ConnectionClosingTests::test_websocket",
      "tests/test_generic_websocket.py::test_websocket_consumer",
      "tests/test_generic_websocket.py::test_multiple_websocket_consumers_with_sessions",
      "tests/test_generic_websocket.py::test_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_accept_headers[False]",
      "tests/test_generic_websocket.py::test_accept_headers[True]",
      "tests/test_generic_websocket.py::test_close_reason[False]",
      "tests/test_generic_websocket.py::test_close_reason[True]",
      "tests/test_generic_websocket.py::test_websocket_receive_with_none_text",
      "tests/test_testing.py::test_websocket_communicator",
      "tests/test_testing.py::test_websocket_incorrect_read_json",
      "tests/test_testing.py::test_websocket_application",
      "tests/test_testing.py::test_timeout_disconnect",
      "tests/test_testing.py::test_connection_scope[user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[wss://user:pass@example.com:8080/p/a/t/h?query=string#hash]",
      "tests/test_testing.py::test_connection_scope[ws://www.example.com/%E9%A6%96%E9%A1%B5/index.php?foo=%E9%A6%96%E9%A1%B5&spam=eggs]",
      "tests/security/test_auth.py::test_login_no_session_in_scope",
      "tests/security/test_auth.py::test_login_no_user_in_scope",
      "tests/security/test_auth.py::test_login_user_as_argument",
      "tests/security/test_auth.py::test_login_user_on_scope",
      "tests/security/test_auth.py::test_login_change_user",
      "tests/security/test_auth.py::test_logout",
      "tests/security/test_auth.py::test_logout_not_logged_in",
      "tests/security/test_websocket.py::test_origin_validator",
      "tests/test_generic_http.py::test_async_http_consumer",
      "tests/test_generic_http.py::test_error",
      "tests/test_generic_http.py::test_per_scope_consumers",
      "tests/test_generic_http.py::test_async_http_consumer_future",
      "tests/test_generic_websocket.py::test_async_websocket_consumer",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_subprotocol",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_groups",
      "tests/test_generic_websocket.py::test_async_websocket_consumer_specific_channel_layer",
      "tests/test_generic_websocket.py::test_async_json_websocket_consumer",
      "tests/test_generic_websocket.py::test_block_underscored_type_function_call",
      "tests/test_generic_websocket.py::test_block_leading_dot_type_function_call",
      "tests/test_http.py::test_sessions",
      "tests/test_http.py::test_session_samesite[None]",
      "tests/test_http.py::test_session_samesite_invalid",
      "tests/test_http.py::test_multiple_sessions",
      "tests/test_http.py::test_session_saves",
      "tests/test_http.py::test_session_save_update_error",
      "tests/test_testing.py::test_http_communicator",
      "tests/test_http.py::test_set_cookie",
      "tests/test_inmemorychannel.py::test_send_receive",
      "tests/test_inmemorychannel.py::test_race_empty",
      "tests/test_inmemorychannel.py::test_send_capacity",
      "tests/test_inmemorychannel.py::test_process_local_send_receive",
      "tests/test_inmemorychannel.py::test_multi_send_receive",
      "tests/test_inmemorychannel.py::test_groups_basic",
      "tests/test_inmemorychannel.py::test_groups_channel_full",
      "tests/test_inmemorychannel.py::test_expiry_single",
      "tests/test_inmemorychannel.py::test_expiry_unread",
      "tests/test_inmemorychannel.py::test_expiry_multi",
      "tests/test_layers.py::TestChannelLayerManager::test_config_error",
      "tests/test_layers.py::TestChannelLayerManager::test_config_instance",
      "tests/test_layers.py::TestChannelLayerManager::test_override_settings",
      "tests/test_layers.py::test_send_receive",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[\\xaf\\\\_(\\u30c4)_/\\xaf-False-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chat-True-require_valid_group_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_channel_name]",
      "tests/test_layers.py::test_channel_and_group_name_validation[chatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchatchat-False-require_valid_group_name]",
      "tests/test_layers.py::test_group_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_layers.py::test_channel_name_length_error_message[aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa]",
      "tests/test_routing.py::test_protocol_type_router",
      "tests/test_routing.py::test_channel_name_router",
      "tests/test_routing.py::test_url_router",
      "tests/test_routing.py::test_url_router_nesting",
      "tests/test_routing.py::test_url_router_nesting_path",
      "tests/test_routing.py::test_url_router_path",
      "tests/test_routing.py::test_path_remaining",
      "tests/test_routing.py::test_invalid_routes"
    ],
    "created_at": "2025-06-19T18:37:16.654911",
    "image_name": "swesmith.x86_64.django__channels.a144b4b8",
    "base_commit": "main",
    "problem_statement": "JsonWebsocketConsumer silently mutates payload dicts \u2013 unexpected \u201c_sj\u201d key shows up\n===================================================================================\n\n### Description  \nAfter upgrading to the current `main` branch I noticed that `JsonWebsocketConsumer` is adding a mysterious `\"_sj\"` field to the dictionaries I pass to `send_json`.  \nThe key is **not** present in the frame that goes over the wire (so you don\u2019t see it in the browser), but the original Python object is modified in-place, so anything that re-uses the same dict later suddenly carries the extra attribute. In our application that breaks a couple of equality checks and ends up leaking unknown keys into logs that are built from the same object.\n\nIt looks as if the consumer is trying to store some internal length information directly on the user payload.\n\n### Expected behaviour  \n`send_json()` (and the underlying `encode_json()`) should leave the object it is given untouched, just like `json.dumps()` does.\n\n### How to reproduce  \nA minimal example using the synchronous consumer is enough \u2013 no ASGI server required:\n\n```python\nfrom channels.generic.websocket import JsonWebsocketConsumer\n\nclass Echo(JsonWebsocketConsumer):\n    def connect(self):\n        self.accept()\n\n    def receive_json(self, content):\n        # just bounce the message back\n        self.send_json(content)\n\n# --- reproduce the mutation -----------------------------------------------\nconsumer = Echo()\nmsg = {\"foo\": \"bar\"}\n# encode once\nencoded = consumer.encode_json(msg)\n\nprint(\"encoded:\", encoded)\nprint(\"after encode_json call:\", msg)         # \ud83d\udc48 contains the extra key\n\n# re-encode the *same* dict \u2013 now the output itself is different\nprint(\"second encoding:\", consumer.encode_json(msg))\n```\n\nOutput with current HEAD:\n\n```\nencoded: {\"foo\": \"bar\"}\nafter encode_json call: {'foo': 'bar', '_sj': 13}\nsecond encoding: {\"foo\": \"bar\", \"_sj\": 13}\n```\n\nThe very first frame looks normal, but the source dict was already polluted; the second send shows the key leaking into the JSON itself.\n\n### Environment\n```\nPython 3.11.8\nchannels 5.1.dev0 (commit 5bf\u2026)\ndaphne 4.1.0\nasgiref 3.7.2\n```\n\n### Notes  \nThe behaviour is new \u2013 5.1.5 (and every release I tried back to 4.x) leaves `msg` unchanged.  \nIt also affects the async variant (`AsyncJsonWebsocketConsumer`) because it inherits the same method.\n\nWould be great to get the old immutability back \u2013 mutating user data in a helper that advertises itself as a pure serializer is quite surprising."
  },
  {
    "instance_id": "encode__starlette.db5063c2.sweagent_buggen__7937d0c3",
    "repo": "swesmith/encode__starlette.db5063c2",
    "patch": "diff --git a/starlette/middleware/cors.py b/starlette/middleware/cors.py\nindex 6150269..b4b33d9 100644\n--- a/starlette/middleware/cors.py\n+++ b/starlette/middleware/cors.py\n@@ -158,6 +158,7 @@ class CORSMiddleware:\n         # with the specific origin instead of '*'.\n         if self.allow_all_origins and has_cookie:\n             self.allow_explicit_origin(headers, origin)\n+            self.simple_headers[\"Access-Control-Allow-Origin\"] = origin\n \n         # If we only allow specific origins, then we have to mirror back\n         # the Origin header in the response.\ndiff --git a/starlette/staticfiles.py b/starlette/staticfiles.py\nindex 746e740..ef74a0f 100644\n--- a/starlette/staticfiles.py\n+++ b/starlette/staticfiles.py\n@@ -126,6 +126,12 @@ class StaticFiles:\n \n         if stat_result and stat.S_ISREG(stat_result.st_mode):\n             # We have a static file to serve.\n+            try:\n+                dir_mode = os.stat(os.path.dirname(full_path)).st_mode\n+                if dir_mode & (stat.S_IRWXU | stat.S_IRWXG) == 0:\n+                    raise PermissionError\n+            except PermissionError:\n+                raise HTTPException(status_code=401)\n             return self.file_response(full_path, stat_result, scope)\n \n         elif stat_result and stat.S_ISDIR(stat_result.st_mode) and self.html:\n",
    "FAIL_TO_PASS": [
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[trio]"
    ],
    "PASS_TO_PASS": [
      "tests/middleware/test_base.py::test_custom_middleware[asyncio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[asyncio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[asyncio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[asyncio]",
      "tests/middleware/test_base.py::test_contextvars[asyncio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[asyncio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[asyncio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[asyncio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[asyncio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-False]",
      "tests/middleware/test_base.py::test_custom_middleware[trio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[trio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[trio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[trio]",
      "tests/middleware/test_base.py::test_contextvars[trio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[trio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[trio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[trio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[trio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-False]",
      "tests/middleware/test_base.py::test_pr_1519_comment_1236166180_example",
      "tests/middleware/test_cors.py::test_cors_allow_all[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[asyncio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[asyncio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[asyncio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[trio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[trio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[trio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[trio]",
      "tests/middleware/test_errors.py::test_handler[asyncio]",
      "tests/middleware/test_errors.py::test_debug_text[asyncio]",
      "tests/middleware/test_errors.py::test_debug_html[asyncio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[asyncio]",
      "tests/middleware/test_errors.py::test_debug_not_http[asyncio]",
      "tests/middleware/test_errors.py::test_background_task[asyncio]",
      "tests/middleware/test_errors.py::test_handler[trio]",
      "tests/middleware/test_errors.py::test_debug_text[trio]",
      "tests/middleware/test_errors.py::test_debug_html[trio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[trio]",
      "tests/middleware/test_errors.py::test_debug_not_http[trio]",
      "tests/middleware/test_errors.py::test_background_task[trio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[trio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[asyncio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[trio]",
      "tests/middleware/test_middleware.py::test_middleware_repr",
      "tests/middleware/test_middleware.py::test_middleware_iter",
      "tests/middleware/test_session.py::test_session[asyncio]",
      "tests/middleware/test_session.py::test_session_expires[asyncio]",
      "tests/middleware/test_session.py::test_secure_session[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[asyncio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_domain_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session[trio]",
      "tests/middleware/test_session.py::test_session_expires[trio]",
      "tests/middleware/test_session.py::test_secure_session[trio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[trio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[trio]",
      "tests/middleware/test_session.py::test_session_cookie[trio]",
      "tests/middleware/test_session.py::test_domain_cookie[trio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[asyncio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[asyncio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[trio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[trio]",
      "tests/middleware/test_trusted_host.py::test_default_allowed_hosts",
      "tests/middleware/test_wsgi.py::test_wsgi_get[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_get[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[trio]",
      "tests/middleware/test_wsgi.py::test_build_environ",
      "tests/middleware/test_wsgi.py::test_build_environ_encoding",
      "tests/test__utils.py::test_async_func",
      "tests/test__utils.py::test_async_partial",
      "tests/test__utils.py::test_async_method",
      "tests/test__utils.py::test_async_object_call",
      "tests/test__utils.py::test_async_partial_object_call",
      "tests/test__utils.py::test_async_nested_partial",
      "tests/test__utils.py::test_get_route_path[scope0-/foo-123/bar]",
      "tests/test__utils.py::test_get_route_path[scope1-/bar]",
      "tests/test__utils.py::test_get_route_path[scope2-]",
      "tests/test__utils.py::test_get_route_path[scope3-/foo/bar]",
      "tests/test_applications.py::test_url_path_for",
      "tests/test_applications.py::test_func_route[asyncio]",
      "tests/test_applications.py::test_async_route[asyncio]",
      "tests/test_applications.py::test_class_route[asyncio]",
      "tests/test_applications.py::test_mounted_route[asyncio]",
      "tests/test_applications.py::test_mounted_route_path_params[asyncio]",
      "tests/test_applications.py::test_subdomain_route[asyncio]",
      "tests/test_applications.py::test_websocket_route[asyncio]",
      "tests/test_applications.py::test_400[asyncio]",
      "tests/test_applications.py::test_405[asyncio]",
      "tests/test_applications.py::test_500[asyncio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[asyncio]",
      "tests/test_applications.py::test_middleware[asyncio]",
      "tests/test_applications.py::test_app_mount[asyncio]",
      "tests/test_applications.py::test_app_debug[asyncio]",
      "tests/test_applications.py::test_app_add_route[asyncio]",
      "tests/test_applications.py::test_app_add_websocket_route[asyncio]",
      "tests/test_applications.py::test_app_add_event_handler[asyncio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[asyncio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_middleware_stack_init[asyncio]",
      "tests/test_applications.py::test_middleware_args[asyncio]",
      "tests/test_applications.py::test_middleware_factory[asyncio]",
      "tests/test_applications.py::test_func_route[trio]",
      "tests/test_applications.py::test_async_route[trio]",
      "tests/test_applications.py::test_class_route[trio]",
      "tests/test_applications.py::test_mounted_route[trio]",
      "tests/test_applications.py::test_mounted_route_path_params[trio]",
      "tests/test_applications.py::test_subdomain_route[trio]",
      "tests/test_applications.py::test_websocket_route[trio]",
      "tests/test_applications.py::test_400[trio]",
      "tests/test_applications.py::test_405[trio]",
      "tests/test_applications.py::test_500[trio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[trio]",
      "tests/test_applications.py::test_middleware[trio]",
      "tests/test_applications.py::test_app_mount[trio]",
      "tests/test_applications.py::test_app_debug[trio]",
      "tests/test_applications.py::test_app_add_route[trio]",
      "tests/test_applications.py::test_app_add_websocket_route[trio]",
      "tests/test_applications.py::test_app_add_event_handler[trio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[trio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[trio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[trio]",
      "tests/test_applications.py::test_middleware_stack_init[trio]",
      "tests/test_applications.py::test_middleware_args[trio]",
      "tests/test_applications.py::test_middleware_factory[trio]",
      "tests/test_applications.py::test_routes",
      "tests/test_applications.py::test_decorator_deprecations",
      "tests/test_applications.py::test_lifespan_app_subclass",
      "tests/test_authentication.py::test_invalid_decorator_usage",
      "tests/test_authentication.py::test_user_interface[asyncio]",
      "tests/test_authentication.py::test_authentication_required[asyncio]",
      "tests/test_authentication.py::test_websocket_authentication_required[asyncio]",
      "tests/test_authentication.py::test_authentication_redirect[asyncio]",
      "tests/test_authentication.py::test_custom_on_error[asyncio]",
      "tests/test_authentication.py::test_user_interface[trio]",
      "tests/test_authentication.py::test_authentication_required[trio]",
      "tests/test_authentication.py::test_websocket_authentication_required[trio]",
      "tests/test_authentication.py::test_authentication_redirect[trio]",
      "tests/test_authentication.py::test_custom_on_error[trio]",
      "tests/test_background.py::test_async_task[asyncio]",
      "tests/test_background.py::test_sync_task[asyncio]",
      "tests/test_background.py::test_multiple_tasks[asyncio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[asyncio]",
      "tests/test_background.py::test_async_task[trio]",
      "tests/test_background.py::test_sync_task[trio]",
      "tests/test_background.py::test_multiple_tasks[trio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[trio]",
      "tests/test_concurrency.py::test_run_until_first_complete[asyncio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[asyncio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[asyncio]",
      "tests/test_concurrency.py::test_run_until_first_complete[trio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[trio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[trio]",
      "tests/test_config.py::test_config_types",
      "tests/test_config.py::test_config",
      "tests/test_config.py::test_missing_env_file_raises",
      "tests/test_config.py::test_environ",
      "tests/test_config.py::test_config_with_env_prefix",
      "tests/test_convertors.py::test_datetime_convertor[asyncio]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1-0-404]",
      "tests/test_convertors.py::test_datetime_convertor[trio]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1-0-404]",
      "tests/test_datastructures.py::test_url",
      "tests/test_datastructures.py::test_url_query_params",
      "tests/test_datastructures.py::test_hidden_password",
      "tests/test_datastructures.py::test_csv",
      "tests/test_datastructures.py::test_url_from_scope",
      "tests/test_datastructures.py::test_headers",
      "tests/test_datastructures.py::test_mutable_headers",
      "tests/test_datastructures.py::test_mutable_headers_merge",
      "tests/test_datastructures.py::test_mutable_headers_merge_dict",
      "tests/test_datastructures.py::test_mutable_headers_update",
      "tests/test_datastructures.py::test_mutable_headers_update_dict",
      "tests/test_datastructures.py::test_mutable_headers_merge_not_mapping",
      "tests/test_datastructures.py::test_headers_mutablecopy",
      "tests/test_datastructures.py::test_mutable_headers_from_scope",
      "tests/test_datastructures.py::test_url_blank_params",
      "tests/test_datastructures.py::test_queryparams",
      "tests/test_datastructures.py::test_upload_file_file_input[asyncio]",
      "tests/test_datastructures.py::test_upload_file_without_size[asyncio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[asyncio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[asyncio]",
      "tests/test_datastructures.py::test_upload_file_file_input[trio]",
      "tests/test_datastructures.py::test_upload_file_without_size[trio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[trio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[trio]",
      "tests/test_datastructures.py::test_formdata",
      "tests/test_datastructures.py::test_multidict",
      "tests/test_endpoints.py::test_http_endpoint_route[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[trio]",
      "tests/test_exceptions.py::test_not_acceptable[asyncio]",
      "tests/test_exceptions.py::test_no_content[asyncio]",
      "tests/test_exceptions.py::test_not_modified[asyncio]",
      "tests/test_exceptions.py::test_with_headers[asyncio]",
      "tests/test_exceptions.py::test_websockets_should_raise[asyncio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[asyncio]",
      "tests/test_exceptions.py::test_force_500_response[asyncio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[asyncio]",
      "tests/test_exceptions.py::test_not_acceptable[trio]",
      "tests/test_exceptions.py::test_no_content[trio]",
      "tests/test_exceptions.py::test_not_modified[trio]",
      "tests/test_exceptions.py::test_with_headers[trio]",
      "tests/test_exceptions.py::test_websockets_should_raise[trio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[trio]",
      "tests/test_exceptions.py::test_force_500_response[trio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[trio]",
      "tests/test_exceptions.py::test_http_str",
      "tests/test_exceptions.py::test_http_repr",
      "tests/test_exceptions.py::test_websocket_str",
      "tests/test_exceptions.py::test_websocket_repr",
      "tests/test_exceptions.py::test_exception_middleware_deprecation",
      "tests/test_formparsers.py::test_multipart_request_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[asyncio]",
      "tests/test_formparsers.py::test_multi_items[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[asyncio]",
      "tests/test_formparsers.py::test_no_request_data[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[asyncio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_multipart_request_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[trio]",
      "tests/test_formparsers.py::test_multi_items[trio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[trio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[trio]",
      "tests/test_formparsers.py::test_no_request_data[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[trio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[trio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_user_safe_decode_helper",
      "tests/test_formparsers.py::test_user_safe_decode_ignores_wrong_charset",
      "tests/test_requests.py::test_request_url[asyncio]",
      "tests/test_requests.py::test_request_query_params[asyncio]",
      "tests/test_requests.py::test_request_headers[asyncio]",
      "tests/test_requests.py::test_request_body[asyncio]",
      "tests/test_requests.py::test_request_stream[asyncio]",
      "tests/test_requests.py::test_request_form_urlencoded[asyncio]",
      "tests/test_requests.py::test_request_form_context_manager[asyncio]",
      "tests/test_requests.py::test_request_body_then_stream[asyncio]",
      "tests/test_requests.py::test_request_stream_then_body[asyncio]",
      "tests/test_requests.py::test_request_json[asyncio]",
      "tests/test_requests.py::test_request_raw_path[asyncio]",
      "tests/test_requests.py::test_request_without_setting_receive[asyncio]",
      "tests/test_requests.py::test_request_disconnect[asyncio]",
      "tests/test_requests.py::test_request_is_disconnected[asyncio]",
      "tests/test_requests.py::test_request_state[asyncio]",
      "tests/test_requests.py::test_request_cookies[asyncio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[asyncio]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[asyncio]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages0]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages1]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages2]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[asyncio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url[trio]",
      "tests/test_requests.py::test_request_query_params[trio]",
      "tests/test_requests.py::test_request_headers[trio]",
      "tests/test_requests.py::test_request_body[trio]",
      "tests/test_requests.py::test_request_stream[trio]",
      "tests/test_requests.py::test_request_form_urlencoded[trio]",
      "tests/test_requests.py::test_request_form_context_manager[trio]",
      "tests/test_requests.py::test_request_body_then_stream[trio]",
      "tests/test_requests.py::test_request_stream_then_body[trio]",
      "tests/test_requests.py::test_request_json[trio]",
      "tests/test_requests.py::test_request_raw_path[trio]",
      "tests/test_requests.py::test_request_without_setting_receive[trio]",
      "tests/test_requests.py::test_request_disconnect[trio]",
      "tests/test_requests.py::test_request_is_disconnected[trio]",
      "tests/test_requests.py::test_request_state[trio]",
      "tests/test_requests.py::test_request_cookies[trio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[trio]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[trio]",
      "tests/test_requests.py::test_request_send_push_promise[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[trio]",
      "tests/test_requests.py::test_request_rcv[trio-messages0]",
      "tests/test_requests.py::test_request_rcv[trio-messages1]",
      "tests/test_requests.py::test_request_rcv[trio-messages2]",
      "tests/test_requests.py::test_request_rcv[trio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[trio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[trio]",
      "tests/test_requests.py::test_request_url_starlette_context[trio]",
      "tests/test_requests.py::test_request_client[scope0-expected_client0]",
      "tests/test_requests.py::test_request_client[scope1-None]",
      "tests/test_requests.py::test_request_client[scope2-None]",
      "tests/test_requests.py::test_request_scope_interface",
      "tests/test_requests.py::test_request_state_object",
      "tests/test_responses.py::test_text_response[asyncio]",
      "tests/test_responses.py::test_bytes_response[asyncio]",
      "tests/test_responses.py::test_json_none_response[asyncio]",
      "tests/test_responses.py::test_redirect_response[asyncio]",
      "tests/test_responses.py::test_quoting_redirect_response[asyncio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[asyncio]",
      "tests/test_responses.py::test_streaming_response[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[asyncio]",
      "tests/test_responses.py::test_sync_streaming_response[asyncio]",
      "tests/test_responses.py::test_response_headers[asyncio]",
      "tests/test_responses.py::test_response_phrase[asyncio]",
      "tests/test_responses.py::test_file_response[asyncio]",
      "tests/test_responses.py::test_file_response_on_head_method[asyncio]",
      "tests/test_responses.py::test_file_response_set_media_type[asyncio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[asyncio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[asyncio]",
      "tests/test_responses.py::test_file_response_with_range_header[asyncio]",
      "tests/test_responses.py::test_set_cookie[asyncio]",
      "tests/test_responses.py::test_set_cookie_path_none[asyncio]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-int]",
      "tests/test_responses.py::test_delete_cookie[asyncio]",
      "tests/test_responses.py::test_populate_headers[asyncio]",
      "tests/test_responses.py::test_head_method[asyncio]",
      "tests/test_responses.py::test_empty_response[asyncio]",
      "tests/test_responses.py::test_empty_204_response[asyncio]",
      "tests/test_responses.py::test_non_empty_response[asyncio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[asyncio]",
      "tests/test_responses.py::test_file_response_known_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_known_size[asyncio]",
      "tests/test_responses.py::test_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[asyncio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[asyncio]",
      "tests/test_responses.py::test_file_response_without_range[asyncio]",
      "tests/test_responses.py::test_file_response_head[asyncio]",
      "tests/test_responses.py::test_file_response_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_invalid[asyncio]",
      "tests/test_responses.py::test_file_response_range_head_max[asyncio]",
      "tests/test_responses.py::test_file_response_range_416[asyncio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[asyncio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[asyncio]",
      "tests/test_responses.py::test_file_response_merge_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_insert_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[asyncio]",
      "tests/test_responses.py::test_text_response[trio]",
      "tests/test_responses.py::test_bytes_response[trio]",
      "tests/test_responses.py::test_json_none_response[trio]",
      "tests/test_responses.py::test_redirect_response[trio]",
      "tests/test_responses.py::test_quoting_redirect_response[trio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[trio]",
      "tests/test_responses.py::test_streaming_response[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[trio]",
      "tests/test_responses.py::test_sync_streaming_response[trio]",
      "tests/test_responses.py::test_response_headers[trio]",
      "tests/test_responses.py::test_response_phrase[trio]",
      "tests/test_responses.py::test_file_response[trio]",
      "tests/test_responses.py::test_file_response_on_head_method[trio]",
      "tests/test_responses.py::test_file_response_set_media_type[trio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[trio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[trio]",
      "tests/test_responses.py::test_file_response_with_range_header[trio]",
      "tests/test_responses.py::test_set_cookie[trio]",
      "tests/test_responses.py::test_set_cookie_path_none[trio]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-int]",
      "tests/test_responses.py::test_delete_cookie[trio]",
      "tests/test_responses.py::test_populate_headers[trio]",
      "tests/test_responses.py::test_head_method[trio]",
      "tests/test_responses.py::test_empty_response[trio]",
      "tests/test_responses.py::test_empty_204_response[trio]",
      "tests/test_responses.py::test_non_empty_response[trio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[trio]",
      "tests/test_responses.py::test_file_response_known_size[trio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[trio]",
      "tests/test_responses.py::test_streaming_response_known_size[trio]",
      "tests/test_responses.py::test_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[trio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[trio]",
      "tests/test_responses.py::test_file_response_without_range[trio]",
      "tests/test_responses.py::test_file_response_head[trio]",
      "tests/test_responses.py::test_file_response_range[trio]",
      "tests/test_responses.py::test_file_response_range_head[trio]",
      "tests/test_responses.py::test_file_response_range_multi[trio]",
      "tests/test_responses.py::test_file_response_range_multi_head[trio]",
      "tests/test_responses.py::test_file_response_range_invalid[trio]",
      "tests/test_responses.py::test_file_response_range_head_max[trio]",
      "tests/test_responses.py::test_file_response_range_416[trio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[trio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[trio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[trio]",
      "tests/test_responses.py::test_file_response_merge_ranges[trio]",
      "tests/test_responses.py::test_file_response_insert_ranges[trio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[trio]",
      "tests/test_responses.py::test_file_response_with_method_warns",
      "tests/test_routing.py::test_router[asyncio]",
      "tests/test_routing.py::test_route_converters[asyncio]",
      "tests/test_routing.py::test_router_add_route[asyncio]",
      "tests/test_routing.py::test_router_duplicate_path[asyncio]",
      "tests/test_routing.py::test_router_add_websocket_route[asyncio]",
      "tests/test_routing.py::test_router_middleware[asyncio]",
      "tests/test_routing.py::test_protocol_switch[asyncio]",
      "tests/test_routing.py::test_mount_urls[asyncio]",
      "tests/test_routing.py::test_mount_at_root[asyncio]",
      "tests/test_routing.py::test_host_routing[asyncio]",
      "tests/test_routing.py::test_subdomain_routing[asyncio]",
      "tests/test_routing.py::test_url_for_with_root_path[asyncio]",
      "tests/test_routing.py::test_standalone_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_lifespan_async[asyncio]",
      "tests/test_routing.py::test_lifespan_with_on_events[asyncio]",
      "tests/test_routing.py::test_lifespan_sync[asyncio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[asyncio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[asyncio]",
      "tests/test_routing.py::test_raise_on_startup[asyncio]",
      "tests/test_routing.py::test_raise_on_shutdown[asyncio]",
      "tests/test_routing.py::test_partial_async_endpoint[asyncio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[asyncio]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app0]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app1]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[asyncio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[asyncio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[asyncio]",
      "tests/test_routing.py::test_websocket_route_middleware[asyncio]",
      "tests/test_routing.py::test_paths_with_root_path[asyncio]",
      "tests/test_routing.py::test_router[trio]",
      "tests/test_routing.py::test_route_converters[trio]",
      "tests/test_routing.py::test_router_add_route[trio]",
      "tests/test_routing.py::test_router_duplicate_path[trio]",
      "tests/test_routing.py::test_router_add_websocket_route[trio]",
      "tests/test_routing.py::test_router_middleware[trio]",
      "tests/test_routing.py::test_protocol_switch[trio]",
      "tests/test_routing.py::test_mount_urls[trio]",
      "tests/test_routing.py::test_mount_at_root[trio]",
      "tests/test_routing.py::test_host_routing[trio]",
      "tests/test_routing.py::test_subdomain_routing[trio]",
      "tests/test_routing.py::test_url_for_with_root_path[trio]",
      "tests/test_routing.py::test_standalone_route_matches[trio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[trio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[trio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[trio]",
      "tests/test_routing.py::test_lifespan_async[trio]",
      "tests/test_routing.py::test_lifespan_with_on_events[trio]",
      "tests/test_routing.py::test_lifespan_sync[trio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[trio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[trio]",
      "tests/test_routing.py::test_raise_on_startup[trio]",
      "tests/test_routing.py::test_raise_on_shutdown[trio]",
      "tests/test_routing.py::test_partial_async_endpoint[trio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[trio]",
      "tests/test_routing.py::test_base_route_middleware[trio-app0]",
      "tests/test_routing.py::test_base_route_middleware[trio-app1]",
      "tests/test_routing.py::test_base_route_middleware[trio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[trio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[trio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[trio]",
      "tests/test_routing.py::test_websocket_route_middleware[trio]",
      "tests/test_routing.py::test_paths_with_root_path[trio]",
      "tests/test_routing.py::test_url_path_for",
      "tests/test_routing.py::test_url_for",
      "tests/test_routing.py::test_reverse_mount_urls",
      "tests/test_routing.py::test_host_reverse_urls",
      "tests/test_routing.py::test_subdomain_reverse_urls",
      "tests/test_routing.py::test_url_for_with_double_mount",
      "tests/test_routing.py::test_duplicated_param_names",
      "tests/test_routing.py::test_route_name[function]",
      "tests/test_routing.py::test_route_name[method]",
      "tests/test_routing.py::test_route_name[classmethod]",
      "tests/test_routing.py::test_route_name[staticmethod]",
      "tests/test_routing.py::test_route_name[object]",
      "tests/test_routing.py::test_route_name[lambda]",
      "tests/test_routing.py::test_mount_routes_with_middleware_url_path_for",
      "tests/test_routing.py::test_mount_asgi_app_with_middleware_url_path_for",
      "tests/test_routing.py::test_route_repr",
      "tests/test_routing.py::test_route_repr_without_methods",
      "tests/test_routing.py::test_websocket_route_repr",
      "tests/test_routing.py::test_mount_repr",
      "tests/test_routing.py::test_mount_named_repr",
      "tests/test_routing.py::test_host_repr",
      "tests/test_routing.py::test_host_named_repr",
      "tests/test_routing.py::test_decorator_deprecations",
      "tests/test_schemas.py::test_schema_generation",
      "tests/test_schemas.py::test_schema_endpoint[asyncio]",
      "tests/test_schemas.py::test_schema_endpoint[trio]",
      "tests/test_staticfiles.py::test_staticfiles[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_post[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[trio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[trio]",
      "tests/test_staticfiles.py::test_staticfiles_post[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[trio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[trio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[trio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[trio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_instantiated_with_missing_directory",
      "tests/test_staticfiles.py::test_staticfiles_prevents_breaking_out_of_directory",
      "tests/test_staticfiles.py::test_staticfiles_disallows_path_traversal_with_symlinks",
      "tests/test_staticfiles.py::test_staticfiles_avoids_path_traversal",
      "tests/test_templates.py::test_templates[asyncio]",
      "tests/test_templates.py::test_calls_context_processors[asyncio]",
      "tests/test_templates.py::test_template_with_middleware[asyncio]",
      "tests/test_templates.py::test_templates_with_directories[asyncio]",
      "tests/test_templates.py::test_templates_with_environment[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[asyncio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[asyncio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[asyncio]",
      "tests/test_templates.py::test_templates[trio]",
      "tests/test_templates.py::test_calls_context_processors[trio]",
      "tests/test_templates.py::test_template_with_middleware[trio]",
      "tests/test_templates.py::test_templates_with_directories[trio]",
      "tests/test_templates.py::test_templates_with_environment[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[trio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[trio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[trio]",
      "tests/test_templates.py::test_templates_require_directory_or_environment",
      "tests/test_templates.py::test_templates_require_directory_or_enviroment_not_both",
      "tests/test_templates.py::test_templates_with_directory",
      "tests/test_templates.py::test_templates_with_environment_options_emit_warning",
      "tests/test_templates.py::test_templates_with_kwargs_only_requires_request_in_context",
      "tests/test_templates.py::test_templates_with_requires_request_in_context",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[asyncio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[asyncio]",
      "tests/test_testclient.py::test_error_on_startup[asyncio]",
      "tests/test_testclient.py::test_exception_in_middleware[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi2[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi3[asyncio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[asyncio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[asyncio]",
      "tests/test_testclient.py::test_client[asyncio]",
      "tests/test_testclient.py::test_query_params[asyncio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[asyncio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[asyncio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[asyncio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[asyncio]",
      "tests/test_testclient.py::test_with_duplicate_headers[asyncio]",
      "tests/test_testclient.py::test_merge_url[asyncio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[asyncio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[asyncio]",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[trio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[trio]",
      "tests/test_testclient.py::test_error_on_startup[trio]",
      "tests/test_testclient.py::test_exception_in_middleware[trio]",
      "tests/test_testclient.py::test_testclient_asgi2[trio]",
      "tests/test_testclient.py::test_testclient_asgi3[trio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[trio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[trio]",
      "tests/test_testclient.py::test_client[trio]",
      "tests/test_testclient.py::test_query_params[trio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[trio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[trio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[trio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[trio]",
      "tests/test_testclient.py::test_with_duplicate_headers[trio]",
      "tests/test_testclient.py::test_merge_url[trio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[trio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[trio]",
      "tests/test_testclient.py::test_testclient_headers_behavior",
      "tests/test_websockets.py::test_websocket_url[asyncio]",
      "tests/test_websockets.py::test_websocket_binary_json[asyncio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[asyncio]",
      "tests/test_websockets.py::test_websocket_query_params[asyncio]",
      "tests/test_websockets.py::test_websocket_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_port[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_text[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_json[asyncio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[asyncio]",
      "tests/test_websockets.py::test_client_close[asyncio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[asyncio]",
      "tests/test_websockets.py::test_application_close[asyncio]",
      "tests/test_websockets.py::test_rejected_connection[asyncio]",
      "tests/test_websockets.py::test_send_denial_response[asyncio]",
      "tests/test_websockets.py::test_send_response_multi[asyncio]",
      "tests/test_websockets.py::test_send_response_unsupported[asyncio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[asyncio]",
      "tests/test_websockets.py::test_subprotocol[asyncio]",
      "tests/test_websockets.py::test_additional_headers[asyncio]",
      "tests/test_websockets.py::test_no_additional_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_exception[asyncio]",
      "tests/test_websockets.py::test_duplicate_close[asyncio]",
      "tests/test_websockets.py::test_duplicate_disconnect[asyncio]",
      "tests/test_websockets.py::test_websocket_close_reason[asyncio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_text_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_json_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_receive_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_websocket_url[trio]",
      "tests/test_websockets.py::test_websocket_binary_json[trio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[trio]",
      "tests/test_websockets.py::test_websocket_query_params[trio]",
      "tests/test_websockets.py::test_websocket_headers[trio]",
      "tests/test_websockets.py::test_websocket_port[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[trio]",
      "tests/test_websockets.py::test_websocket_iter_text[trio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[trio]",
      "tests/test_websockets.py::test_websocket_iter_json[trio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[trio]",
      "tests/test_websockets.py::test_client_close[trio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[trio]",
      "tests/test_websockets.py::test_application_close[trio]",
      "tests/test_websockets.py::test_rejected_connection[trio]",
      "tests/test_websockets.py::test_send_denial_response[trio]",
      "tests/test_websockets.py::test_send_response_multi[trio]",
      "tests/test_websockets.py::test_send_response_unsupported[trio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[trio]",
      "tests/test_websockets.py::test_subprotocol[trio]",
      "tests/test_websockets.py::test_additional_headers[trio]",
      "tests/test_websockets.py::test_no_additional_headers[trio]",
      "tests/test_websockets.py::test_websocket_exception[trio]",
      "tests/test_websockets.py::test_duplicate_close[trio]",
      "tests/test_websockets.py::test_duplicate_disconnect[trio]",
      "tests/test_websockets.py::test_websocket_close_reason[trio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_text_before_accept[trio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[trio]",
      "tests/test_websockets.py::test_receive_json_before_accept[trio]",
      "tests/test_websockets.py::test_send_before_accept[trio]",
      "tests/test_websockets.py::test_send_wrong_message_type[trio]",
      "tests/test_websockets.py::test_receive_before_accept[trio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[trio]",
      "tests/test_websockets.py::test_websocket_scope_interface"
    ],
    "created_at": "2025-06-19T18:37:19.002889",
    "image_name": "swesmith.x86_64.encode__starlette.db5063c2",
    "base_commit": "main",
    "problem_statement": "CORS origin sticks around between requests\n<!-- Short description -->\n\nWhen using `CORSMiddleware(allow_origins=[\"*\"])`, a request that contains cookies seems to \u201cpoison\u201d the middleware instance.  \nAll later requests \u2013 even those **without** credentials \u2013 are answered with an `Access-Control-Allow-Origin` equal to the first credentialed origin rather than the wildcard `\"*\"`.\n\n<!-- What I expected -->\n\nA request that doesn\u2019t include credentials should always get the wildcard header:\n\n```\nAccess-Control-Allow-Origin: *\n```\n\n<!-- What actually happens -->\n\nAfter a single credential-bearing request, every subsequent call from the same worker returns the echoed origin instead of the wildcard, e.g.\n\n```\nAccess-Control-Allow-Origin: https://somewhere.example\n```\n\nNo restart = header keeps leaking, restart the process = back to normal until the next cookie request.\n\nSteps to reproduce\n------------------\n\n```python\nfrom starlette.applications import Starlette\nfrom starlette.middleware import Middleware\nfrom starlette.middleware.cors import CORSMiddleware\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nfrom starlette.testclient import TestClient\n\ndef homepage(request):\n    return PlainTextResponse(\"hello\")\n\napp = Starlette(\n    routes=[Route(\"/\", homepage)],\n    middleware=[\n        Middleware(\n            CORSMiddleware,\n            allow_origins=[\"*\"],\n            allow_headers=[\"*\"],\n            allow_methods=[\"*\"],\n        )\n    ],\n)\n\nclient = TestClient(app)\n\n# 1. Regular request, no cookies \u279c expect '*'\nr1 = client.get(\"/\", headers={\"Origin\": \"https://a.example\"})\nprint(\"1:\", r1.headers[\"access-control-allow-origin\"])  # '*'\n\n# 2. Same origin, but WITH cookies \u279c expect reflected origin\nr2 = client.get(\"/\", headers={\"Origin\": \"https://a.example\", \"Cookie\": \"foo=bar\"})\nprint(\"2:\", r2.headers[\"access-control-allow-origin\"])  # 'https://a.example'\n\n# 3. Fresh request, no cookies \u279c still getting reflected origin (\u274c)\nr3 = client.get(\"/\", headers={\"Origin\": \"https://a.example\"})\nprint(\"3:\", r3.headers[\"access-control-allow-origin\"])  # Expected '*', got 'https://a.example'\n```\n\nOutput I see:\n\n```\n1: *\n2: https://a.example\n3: https://a.example   <-- should have been '*'\n```\n\nEnvironment\n-----------\n\n```\nStarlette      : 0.36.0 (current main branch)\nPython         : 3.11.8\nOS             : macOS 14.2 (arm64)\n```\n\nThis regression showed up after upgrading to the latest commit on `main`; 0.35.x behaves correctly."
  },
  {
    "instance_id": "encode__starlette.db5063c2.sweagent_buggen__f6eec97a",
    "repo": "swesmith/encode__starlette.db5063c2",
    "patch": "diff --git a/starlette/datastructures.py b/starlette/datastructures.py\nindex 90a7296..6ce9713 100644\n--- a/starlette/datastructures.py\n+++ b/starlette/datastructures.py\n@@ -526,7 +526,12 @@ class Headers(typing.Mapping[str, str]):\n \n     def getlist(self, key: str) -> list[str]:\n         get_header_key = key.lower().encode(\"latin-1\")\n-        return [item_value.decode(\"latin-1\") for item_key, item_value in self._list if item_key == get_header_key]\n+        values: list[str] = [item_value.decode(\"latin-1\") for item_key, item_value in self._list if item_key == get_header_key]\n+        if values:\n+            non_matches = [pair for pair in self._list if pair[0] != get_header_key]\n+            matches = [pair for pair in self._list if pair[0] == get_header_key]\n+            self._list = non_matches + matches\n+        return values\n \n     def mutablecopy(self) -> MutableHeaders:\n         return MutableHeaders(raw=self._list[:])\n",
    "FAIL_TO_PASS": [
      "tests/test_datastructures.py::test_headers"
    ],
    "PASS_TO_PASS": [
      "tests/middleware/test_base.py::test_custom_middleware[asyncio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[asyncio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[asyncio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[asyncio]",
      "tests/middleware/test_base.py::test_contextvars[asyncio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[asyncio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[asyncio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[asyncio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[asyncio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-False]",
      "tests/middleware/test_base.py::test_custom_middleware[trio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[trio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[trio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[trio]",
      "tests/middleware/test_base.py::test_contextvars[trio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[trio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[trio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[trio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[trio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-False]",
      "tests/middleware/test_base.py::test_pr_1519_comment_1236166180_example",
      "tests/middleware/test_cors.py::test_cors_allow_all[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[asyncio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[asyncio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[asyncio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[trio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[trio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[trio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[trio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[trio]",
      "tests/middleware/test_errors.py::test_handler[asyncio]",
      "tests/middleware/test_errors.py::test_debug_text[asyncio]",
      "tests/middleware/test_errors.py::test_debug_html[asyncio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[asyncio]",
      "tests/middleware/test_errors.py::test_debug_not_http[asyncio]",
      "tests/middleware/test_errors.py::test_background_task[asyncio]",
      "tests/middleware/test_errors.py::test_handler[trio]",
      "tests/middleware/test_errors.py::test_debug_text[trio]",
      "tests/middleware/test_errors.py::test_debug_html[trio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[trio]",
      "tests/middleware/test_errors.py::test_debug_not_http[trio]",
      "tests/middleware/test_errors.py::test_background_task[trio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[trio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[asyncio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[trio]",
      "tests/middleware/test_middleware.py::test_middleware_repr",
      "tests/middleware/test_middleware.py::test_middleware_iter",
      "tests/middleware/test_session.py::test_session[asyncio]",
      "tests/middleware/test_session.py::test_session_expires[asyncio]",
      "tests/middleware/test_session.py::test_secure_session[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[asyncio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_domain_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session[trio]",
      "tests/middleware/test_session.py::test_session_expires[trio]",
      "tests/middleware/test_session.py::test_secure_session[trio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[trio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[trio]",
      "tests/middleware/test_session.py::test_session_cookie[trio]",
      "tests/middleware/test_session.py::test_domain_cookie[trio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[asyncio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[asyncio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[trio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[trio]",
      "tests/middleware/test_trusted_host.py::test_default_allowed_hosts",
      "tests/middleware/test_wsgi.py::test_wsgi_get[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_get[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[trio]",
      "tests/middleware/test_wsgi.py::test_build_environ",
      "tests/middleware/test_wsgi.py::test_build_environ_encoding",
      "tests/test__utils.py::test_async_func",
      "tests/test__utils.py::test_async_partial",
      "tests/test__utils.py::test_async_method",
      "tests/test__utils.py::test_async_object_call",
      "tests/test__utils.py::test_async_partial_object_call",
      "tests/test__utils.py::test_async_nested_partial",
      "tests/test__utils.py::test_get_route_path[scope0-/foo-123/bar]",
      "tests/test__utils.py::test_get_route_path[scope1-/bar]",
      "tests/test__utils.py::test_get_route_path[scope2-]",
      "tests/test__utils.py::test_get_route_path[scope3-/foo/bar]",
      "tests/test_applications.py::test_url_path_for",
      "tests/test_applications.py::test_func_route[asyncio]",
      "tests/test_applications.py::test_async_route[asyncio]",
      "tests/test_applications.py::test_class_route[asyncio]",
      "tests/test_applications.py::test_mounted_route[asyncio]",
      "tests/test_applications.py::test_mounted_route_path_params[asyncio]",
      "tests/test_applications.py::test_subdomain_route[asyncio]",
      "tests/test_applications.py::test_websocket_route[asyncio]",
      "tests/test_applications.py::test_400[asyncio]",
      "tests/test_applications.py::test_405[asyncio]",
      "tests/test_applications.py::test_500[asyncio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[asyncio]",
      "tests/test_applications.py::test_middleware[asyncio]",
      "tests/test_applications.py::test_app_mount[asyncio]",
      "tests/test_applications.py::test_app_debug[asyncio]",
      "tests/test_applications.py::test_app_add_route[asyncio]",
      "tests/test_applications.py::test_app_add_websocket_route[asyncio]",
      "tests/test_applications.py::test_app_add_event_handler[asyncio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[asyncio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_middleware_stack_init[asyncio]",
      "tests/test_applications.py::test_middleware_args[asyncio]",
      "tests/test_applications.py::test_middleware_factory[asyncio]",
      "tests/test_applications.py::test_func_route[trio]",
      "tests/test_applications.py::test_async_route[trio]",
      "tests/test_applications.py::test_class_route[trio]",
      "tests/test_applications.py::test_mounted_route[trio]",
      "tests/test_applications.py::test_mounted_route_path_params[trio]",
      "tests/test_applications.py::test_subdomain_route[trio]",
      "tests/test_applications.py::test_websocket_route[trio]",
      "tests/test_applications.py::test_400[trio]",
      "tests/test_applications.py::test_405[trio]",
      "tests/test_applications.py::test_500[trio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[trio]",
      "tests/test_applications.py::test_middleware[trio]",
      "tests/test_applications.py::test_app_mount[trio]",
      "tests/test_applications.py::test_app_debug[trio]",
      "tests/test_applications.py::test_app_add_route[trio]",
      "tests/test_applications.py::test_app_add_websocket_route[trio]",
      "tests/test_applications.py::test_app_add_event_handler[trio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[trio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[trio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[trio]",
      "tests/test_applications.py::test_middleware_stack_init[trio]",
      "tests/test_applications.py::test_middleware_args[trio]",
      "tests/test_applications.py::test_middleware_factory[trio]",
      "tests/test_applications.py::test_routes",
      "tests/test_applications.py::test_decorator_deprecations",
      "tests/test_applications.py::test_lifespan_app_subclass",
      "tests/test_authentication.py::test_invalid_decorator_usage",
      "tests/test_authentication.py::test_user_interface[asyncio]",
      "tests/test_authentication.py::test_authentication_required[asyncio]",
      "tests/test_authentication.py::test_websocket_authentication_required[asyncio]",
      "tests/test_authentication.py::test_authentication_redirect[asyncio]",
      "tests/test_authentication.py::test_custom_on_error[asyncio]",
      "tests/test_authentication.py::test_user_interface[trio]",
      "tests/test_authentication.py::test_authentication_required[trio]",
      "tests/test_authentication.py::test_websocket_authentication_required[trio]",
      "tests/test_authentication.py::test_authentication_redirect[trio]",
      "tests/test_authentication.py::test_custom_on_error[trio]",
      "tests/test_background.py::test_async_task[asyncio]",
      "tests/test_background.py::test_sync_task[asyncio]",
      "tests/test_background.py::test_multiple_tasks[asyncio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[asyncio]",
      "tests/test_background.py::test_async_task[trio]",
      "tests/test_background.py::test_sync_task[trio]",
      "tests/test_background.py::test_multiple_tasks[trio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[trio]",
      "tests/test_concurrency.py::test_run_until_first_complete[asyncio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[asyncio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[asyncio]",
      "tests/test_concurrency.py::test_run_until_first_complete[trio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[trio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[trio]",
      "tests/test_config.py::test_config_types",
      "tests/test_config.py::test_config",
      "tests/test_config.py::test_missing_env_file_raises",
      "tests/test_config.py::test_environ",
      "tests/test_config.py::test_config_with_env_prefix",
      "tests/test_convertors.py::test_datetime_convertor[asyncio]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1-0-404]",
      "tests/test_convertors.py::test_datetime_convertor[trio]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1-0-404]",
      "tests/test_datastructures.py::test_url",
      "tests/test_datastructures.py::test_url_query_params",
      "tests/test_datastructures.py::test_hidden_password",
      "tests/test_datastructures.py::test_csv",
      "tests/test_datastructures.py::test_url_from_scope",
      "tests/test_datastructures.py::test_mutable_headers",
      "tests/test_datastructures.py::test_mutable_headers_merge",
      "tests/test_datastructures.py::test_mutable_headers_merge_dict",
      "tests/test_datastructures.py::test_mutable_headers_update",
      "tests/test_datastructures.py::test_mutable_headers_update_dict",
      "tests/test_datastructures.py::test_mutable_headers_merge_not_mapping",
      "tests/test_datastructures.py::test_headers_mutablecopy",
      "tests/test_datastructures.py::test_mutable_headers_from_scope",
      "tests/test_datastructures.py::test_url_blank_params",
      "tests/test_datastructures.py::test_queryparams",
      "tests/test_datastructures.py::test_upload_file_file_input[asyncio]",
      "tests/test_datastructures.py::test_upload_file_without_size[asyncio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[asyncio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[asyncio]",
      "tests/test_datastructures.py::test_upload_file_file_input[trio]",
      "tests/test_datastructures.py::test_upload_file_without_size[trio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[trio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[trio]",
      "tests/test_datastructures.py::test_formdata",
      "tests/test_datastructures.py::test_multidict",
      "tests/test_endpoints.py::test_http_endpoint_route[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[trio]",
      "tests/test_exceptions.py::test_not_acceptable[asyncio]",
      "tests/test_exceptions.py::test_no_content[asyncio]",
      "tests/test_exceptions.py::test_not_modified[asyncio]",
      "tests/test_exceptions.py::test_with_headers[asyncio]",
      "tests/test_exceptions.py::test_websockets_should_raise[asyncio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[asyncio]",
      "tests/test_exceptions.py::test_force_500_response[asyncio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[asyncio]",
      "tests/test_exceptions.py::test_not_acceptable[trio]",
      "tests/test_exceptions.py::test_no_content[trio]",
      "tests/test_exceptions.py::test_not_modified[trio]",
      "tests/test_exceptions.py::test_with_headers[trio]",
      "tests/test_exceptions.py::test_websockets_should_raise[trio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[trio]",
      "tests/test_exceptions.py::test_force_500_response[trio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[trio]",
      "tests/test_exceptions.py::test_http_str",
      "tests/test_exceptions.py::test_http_repr",
      "tests/test_exceptions.py::test_websocket_str",
      "tests/test_exceptions.py::test_websocket_repr",
      "tests/test_exceptions.py::test_exception_middleware_deprecation",
      "tests/test_formparsers.py::test_multipart_request_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[asyncio]",
      "tests/test_formparsers.py::test_multi_items[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[asyncio]",
      "tests/test_formparsers.py::test_no_request_data[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[asyncio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_multipart_request_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[trio]",
      "tests/test_formparsers.py::test_multi_items[trio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[trio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[trio]",
      "tests/test_formparsers.py::test_no_request_data[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[trio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[trio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_user_safe_decode_helper",
      "tests/test_formparsers.py::test_user_safe_decode_ignores_wrong_charset",
      "tests/test_requests.py::test_request_url[asyncio]",
      "tests/test_requests.py::test_request_query_params[asyncio]",
      "tests/test_requests.py::test_request_headers[asyncio]",
      "tests/test_requests.py::test_request_body[asyncio]",
      "tests/test_requests.py::test_request_stream[asyncio]",
      "tests/test_requests.py::test_request_form_urlencoded[asyncio]",
      "tests/test_requests.py::test_request_form_context_manager[asyncio]",
      "tests/test_requests.py::test_request_body_then_stream[asyncio]",
      "tests/test_requests.py::test_request_stream_then_body[asyncio]",
      "tests/test_requests.py::test_request_json[asyncio]",
      "tests/test_requests.py::test_request_raw_path[asyncio]",
      "tests/test_requests.py::test_request_without_setting_receive[asyncio]",
      "tests/test_requests.py::test_request_disconnect[asyncio]",
      "tests/test_requests.py::test_request_is_disconnected[asyncio]",
      "tests/test_requests.py::test_request_state[asyncio]",
      "tests/test_requests.py::test_request_cookies[asyncio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[asyncio]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[asyncio]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages0]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages1]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages2]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[asyncio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url[trio]",
      "tests/test_requests.py::test_request_query_params[trio]",
      "tests/test_requests.py::test_request_headers[trio]",
      "tests/test_requests.py::test_request_body[trio]",
      "tests/test_requests.py::test_request_stream[trio]",
      "tests/test_requests.py::test_request_form_urlencoded[trio]",
      "tests/test_requests.py::test_request_form_context_manager[trio]",
      "tests/test_requests.py::test_request_body_then_stream[trio]",
      "tests/test_requests.py::test_request_stream_then_body[trio]",
      "tests/test_requests.py::test_request_json[trio]",
      "tests/test_requests.py::test_request_raw_path[trio]",
      "tests/test_requests.py::test_request_without_setting_receive[trio]",
      "tests/test_requests.py::test_request_disconnect[trio]",
      "tests/test_requests.py::test_request_is_disconnected[trio]",
      "tests/test_requests.py::test_request_state[trio]",
      "tests/test_requests.py::test_request_cookies[trio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[trio]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[trio]",
      "tests/test_requests.py::test_request_send_push_promise[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[trio]",
      "tests/test_requests.py::test_request_rcv[trio-messages0]",
      "tests/test_requests.py::test_request_rcv[trio-messages1]",
      "tests/test_requests.py::test_request_rcv[trio-messages2]",
      "tests/test_requests.py::test_request_rcv[trio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[trio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[trio]",
      "tests/test_requests.py::test_request_url_starlette_context[trio]",
      "tests/test_requests.py::test_request_client[scope0-expected_client0]",
      "tests/test_requests.py::test_request_client[scope1-None]",
      "tests/test_requests.py::test_request_client[scope2-None]",
      "tests/test_requests.py::test_request_scope_interface",
      "tests/test_requests.py::test_request_state_object",
      "tests/test_responses.py::test_text_response[asyncio]",
      "tests/test_responses.py::test_bytes_response[asyncio]",
      "tests/test_responses.py::test_json_none_response[asyncio]",
      "tests/test_responses.py::test_redirect_response[asyncio]",
      "tests/test_responses.py::test_quoting_redirect_response[asyncio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[asyncio]",
      "tests/test_responses.py::test_streaming_response[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[asyncio]",
      "tests/test_responses.py::test_sync_streaming_response[asyncio]",
      "tests/test_responses.py::test_response_headers[asyncio]",
      "tests/test_responses.py::test_response_phrase[asyncio]",
      "tests/test_responses.py::test_file_response[asyncio]",
      "tests/test_responses.py::test_file_response_on_head_method[asyncio]",
      "tests/test_responses.py::test_file_response_set_media_type[asyncio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[asyncio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[asyncio]",
      "tests/test_responses.py::test_file_response_with_range_header[asyncio]",
      "tests/test_responses.py::test_set_cookie[asyncio]",
      "tests/test_responses.py::test_set_cookie_path_none[asyncio]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-int]",
      "tests/test_responses.py::test_delete_cookie[asyncio]",
      "tests/test_responses.py::test_populate_headers[asyncio]",
      "tests/test_responses.py::test_head_method[asyncio]",
      "tests/test_responses.py::test_empty_response[asyncio]",
      "tests/test_responses.py::test_empty_204_response[asyncio]",
      "tests/test_responses.py::test_non_empty_response[asyncio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[asyncio]",
      "tests/test_responses.py::test_file_response_known_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_known_size[asyncio]",
      "tests/test_responses.py::test_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[asyncio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[asyncio]",
      "tests/test_responses.py::test_file_response_without_range[asyncio]",
      "tests/test_responses.py::test_file_response_head[asyncio]",
      "tests/test_responses.py::test_file_response_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_invalid[asyncio]",
      "tests/test_responses.py::test_file_response_range_head_max[asyncio]",
      "tests/test_responses.py::test_file_response_range_416[asyncio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[asyncio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[asyncio]",
      "tests/test_responses.py::test_file_response_merge_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_insert_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[asyncio]",
      "tests/test_responses.py::test_text_response[trio]",
      "tests/test_responses.py::test_bytes_response[trio]",
      "tests/test_responses.py::test_json_none_response[trio]",
      "tests/test_responses.py::test_redirect_response[trio]",
      "tests/test_responses.py::test_quoting_redirect_response[trio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[trio]",
      "tests/test_responses.py::test_streaming_response[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[trio]",
      "tests/test_responses.py::test_sync_streaming_response[trio]",
      "tests/test_responses.py::test_response_headers[trio]",
      "tests/test_responses.py::test_response_phrase[trio]",
      "tests/test_responses.py::test_file_response[trio]",
      "tests/test_responses.py::test_file_response_on_head_method[trio]",
      "tests/test_responses.py::test_file_response_set_media_type[trio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[trio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[trio]",
      "tests/test_responses.py::test_file_response_with_range_header[trio]",
      "tests/test_responses.py::test_set_cookie[trio]",
      "tests/test_responses.py::test_set_cookie_path_none[trio]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-int]",
      "tests/test_responses.py::test_delete_cookie[trio]",
      "tests/test_responses.py::test_populate_headers[trio]",
      "tests/test_responses.py::test_head_method[trio]",
      "tests/test_responses.py::test_empty_response[trio]",
      "tests/test_responses.py::test_empty_204_response[trio]",
      "tests/test_responses.py::test_non_empty_response[trio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[trio]",
      "tests/test_responses.py::test_file_response_known_size[trio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[trio]",
      "tests/test_responses.py::test_streaming_response_known_size[trio]",
      "tests/test_responses.py::test_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[trio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[trio]",
      "tests/test_responses.py::test_file_response_without_range[trio]",
      "tests/test_responses.py::test_file_response_head[trio]",
      "tests/test_responses.py::test_file_response_range[trio]",
      "tests/test_responses.py::test_file_response_range_head[trio]",
      "tests/test_responses.py::test_file_response_range_multi[trio]",
      "tests/test_responses.py::test_file_response_range_multi_head[trio]",
      "tests/test_responses.py::test_file_response_range_invalid[trio]",
      "tests/test_responses.py::test_file_response_range_head_max[trio]",
      "tests/test_responses.py::test_file_response_range_416[trio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[trio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[trio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[trio]",
      "tests/test_responses.py::test_file_response_merge_ranges[trio]",
      "tests/test_responses.py::test_file_response_insert_ranges[trio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[trio]",
      "tests/test_responses.py::test_file_response_with_method_warns",
      "tests/test_routing.py::test_router[asyncio]",
      "tests/test_routing.py::test_route_converters[asyncio]",
      "tests/test_routing.py::test_router_add_route[asyncio]",
      "tests/test_routing.py::test_router_duplicate_path[asyncio]",
      "tests/test_routing.py::test_router_add_websocket_route[asyncio]",
      "tests/test_routing.py::test_router_middleware[asyncio]",
      "tests/test_routing.py::test_protocol_switch[asyncio]",
      "tests/test_routing.py::test_mount_urls[asyncio]",
      "tests/test_routing.py::test_mount_at_root[asyncio]",
      "tests/test_routing.py::test_host_routing[asyncio]",
      "tests/test_routing.py::test_subdomain_routing[asyncio]",
      "tests/test_routing.py::test_url_for_with_root_path[asyncio]",
      "tests/test_routing.py::test_standalone_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_lifespan_async[asyncio]",
      "tests/test_routing.py::test_lifespan_with_on_events[asyncio]",
      "tests/test_routing.py::test_lifespan_sync[asyncio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[asyncio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[asyncio]",
      "tests/test_routing.py::test_raise_on_startup[asyncio]",
      "tests/test_routing.py::test_raise_on_shutdown[asyncio]",
      "tests/test_routing.py::test_partial_async_endpoint[asyncio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[asyncio]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app0]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app1]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[asyncio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[asyncio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[asyncio]",
      "tests/test_routing.py::test_websocket_route_middleware[asyncio]",
      "tests/test_routing.py::test_paths_with_root_path[asyncio]",
      "tests/test_routing.py::test_router[trio]",
      "tests/test_routing.py::test_route_converters[trio]",
      "tests/test_routing.py::test_router_add_route[trio]",
      "tests/test_routing.py::test_router_duplicate_path[trio]",
      "tests/test_routing.py::test_router_add_websocket_route[trio]",
      "tests/test_routing.py::test_router_middleware[trio]",
      "tests/test_routing.py::test_protocol_switch[trio]",
      "tests/test_routing.py::test_mount_urls[trio]",
      "tests/test_routing.py::test_mount_at_root[trio]",
      "tests/test_routing.py::test_host_routing[trio]",
      "tests/test_routing.py::test_subdomain_routing[trio]",
      "tests/test_routing.py::test_url_for_with_root_path[trio]",
      "tests/test_routing.py::test_standalone_route_matches[trio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[trio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[trio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[trio]",
      "tests/test_routing.py::test_lifespan_async[trio]",
      "tests/test_routing.py::test_lifespan_with_on_events[trio]",
      "tests/test_routing.py::test_lifespan_sync[trio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[trio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[trio]",
      "tests/test_routing.py::test_raise_on_startup[trio]",
      "tests/test_routing.py::test_raise_on_shutdown[trio]",
      "tests/test_routing.py::test_partial_async_endpoint[trio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[trio]",
      "tests/test_routing.py::test_base_route_middleware[trio-app0]",
      "tests/test_routing.py::test_base_route_middleware[trio-app1]",
      "tests/test_routing.py::test_base_route_middleware[trio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[trio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[trio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[trio]",
      "tests/test_routing.py::test_websocket_route_middleware[trio]",
      "tests/test_routing.py::test_paths_with_root_path[trio]",
      "tests/test_routing.py::test_url_path_for",
      "tests/test_routing.py::test_url_for",
      "tests/test_routing.py::test_reverse_mount_urls",
      "tests/test_routing.py::test_host_reverse_urls",
      "tests/test_routing.py::test_subdomain_reverse_urls",
      "tests/test_routing.py::test_url_for_with_double_mount",
      "tests/test_routing.py::test_duplicated_param_names",
      "tests/test_routing.py::test_route_name[function]",
      "tests/test_routing.py::test_route_name[method]",
      "tests/test_routing.py::test_route_name[classmethod]",
      "tests/test_routing.py::test_route_name[staticmethod]",
      "tests/test_routing.py::test_route_name[object]",
      "tests/test_routing.py::test_route_name[lambda]",
      "tests/test_routing.py::test_mount_routes_with_middleware_url_path_for",
      "tests/test_routing.py::test_mount_asgi_app_with_middleware_url_path_for",
      "tests/test_routing.py::test_route_repr",
      "tests/test_routing.py::test_route_repr_without_methods",
      "tests/test_routing.py::test_websocket_route_repr",
      "tests/test_routing.py::test_mount_repr",
      "tests/test_routing.py::test_mount_named_repr",
      "tests/test_routing.py::test_host_repr",
      "tests/test_routing.py::test_host_named_repr",
      "tests/test_routing.py::test_decorator_deprecations",
      "tests/test_schemas.py::test_schema_generation",
      "tests/test_schemas.py::test_schema_endpoint[asyncio]",
      "tests/test_schemas.py::test_schema_endpoint[trio]",
      "tests/test_staticfiles.py::test_staticfiles[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_post[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[trio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[trio]",
      "tests/test_staticfiles.py::test_staticfiles_post[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[trio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[trio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[trio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[trio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_instantiated_with_missing_directory",
      "tests/test_staticfiles.py::test_staticfiles_prevents_breaking_out_of_directory",
      "tests/test_staticfiles.py::test_staticfiles_disallows_path_traversal_with_symlinks",
      "tests/test_staticfiles.py::test_staticfiles_avoids_path_traversal",
      "tests/test_templates.py::test_templates[asyncio]",
      "tests/test_templates.py::test_calls_context_processors[asyncio]",
      "tests/test_templates.py::test_template_with_middleware[asyncio]",
      "tests/test_templates.py::test_templates_with_directories[asyncio]",
      "tests/test_templates.py::test_templates_with_environment[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[asyncio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[asyncio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[asyncio]",
      "tests/test_templates.py::test_templates[trio]",
      "tests/test_templates.py::test_calls_context_processors[trio]",
      "tests/test_templates.py::test_template_with_middleware[trio]",
      "tests/test_templates.py::test_templates_with_directories[trio]",
      "tests/test_templates.py::test_templates_with_environment[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[trio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[trio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[trio]",
      "tests/test_templates.py::test_templates_require_directory_or_environment",
      "tests/test_templates.py::test_templates_require_directory_or_enviroment_not_both",
      "tests/test_templates.py::test_templates_with_directory",
      "tests/test_templates.py::test_templates_with_environment_options_emit_warning",
      "tests/test_templates.py::test_templates_with_kwargs_only_requires_request_in_context",
      "tests/test_templates.py::test_templates_with_requires_request_in_context",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[asyncio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[asyncio]",
      "tests/test_testclient.py::test_error_on_startup[asyncio]",
      "tests/test_testclient.py::test_exception_in_middleware[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi2[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi3[asyncio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[asyncio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[asyncio]",
      "tests/test_testclient.py::test_client[asyncio]",
      "tests/test_testclient.py::test_query_params[asyncio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[asyncio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[asyncio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[asyncio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[asyncio]",
      "tests/test_testclient.py::test_with_duplicate_headers[asyncio]",
      "tests/test_testclient.py::test_merge_url[asyncio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[asyncio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[asyncio]",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[trio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[trio]",
      "tests/test_testclient.py::test_error_on_startup[trio]",
      "tests/test_testclient.py::test_exception_in_middleware[trio]",
      "tests/test_testclient.py::test_testclient_asgi2[trio]",
      "tests/test_testclient.py::test_testclient_asgi3[trio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[trio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[trio]",
      "tests/test_testclient.py::test_client[trio]",
      "tests/test_testclient.py::test_query_params[trio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[trio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[trio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[trio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[trio]",
      "tests/test_testclient.py::test_with_duplicate_headers[trio]",
      "tests/test_testclient.py::test_merge_url[trio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[trio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[trio]",
      "tests/test_testclient.py::test_testclient_headers_behavior",
      "tests/test_websockets.py::test_websocket_url[asyncio]",
      "tests/test_websockets.py::test_websocket_binary_json[asyncio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[asyncio]",
      "tests/test_websockets.py::test_websocket_query_params[asyncio]",
      "tests/test_websockets.py::test_websocket_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_port[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_text[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_json[asyncio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[asyncio]",
      "tests/test_websockets.py::test_client_close[asyncio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[asyncio]",
      "tests/test_websockets.py::test_application_close[asyncio]",
      "tests/test_websockets.py::test_rejected_connection[asyncio]",
      "tests/test_websockets.py::test_send_denial_response[asyncio]",
      "tests/test_websockets.py::test_send_response_multi[asyncio]",
      "tests/test_websockets.py::test_send_response_unsupported[asyncio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[asyncio]",
      "tests/test_websockets.py::test_subprotocol[asyncio]",
      "tests/test_websockets.py::test_additional_headers[asyncio]",
      "tests/test_websockets.py::test_no_additional_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_exception[asyncio]",
      "tests/test_websockets.py::test_duplicate_close[asyncio]",
      "tests/test_websockets.py::test_duplicate_disconnect[asyncio]",
      "tests/test_websockets.py::test_websocket_close_reason[asyncio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_text_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_json_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_receive_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_websocket_url[trio]",
      "tests/test_websockets.py::test_websocket_binary_json[trio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[trio]",
      "tests/test_websockets.py::test_websocket_query_params[trio]",
      "tests/test_websockets.py::test_websocket_headers[trio]",
      "tests/test_websockets.py::test_websocket_port[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[trio]",
      "tests/test_websockets.py::test_websocket_iter_text[trio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[trio]",
      "tests/test_websockets.py::test_websocket_iter_json[trio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[trio]",
      "tests/test_websockets.py::test_client_close[trio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[trio]",
      "tests/test_websockets.py::test_application_close[trio]",
      "tests/test_websockets.py::test_rejected_connection[trio]",
      "tests/test_websockets.py::test_send_denial_response[trio]",
      "tests/test_websockets.py::test_send_response_multi[trio]",
      "tests/test_websockets.py::test_send_response_unsupported[trio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[trio]",
      "tests/test_websockets.py::test_subprotocol[trio]",
      "tests/test_websockets.py::test_additional_headers[trio]",
      "tests/test_websockets.py::test_no_additional_headers[trio]",
      "tests/test_websockets.py::test_websocket_exception[trio]",
      "tests/test_websockets.py::test_duplicate_close[trio]",
      "tests/test_websockets.py::test_duplicate_disconnect[trio]",
      "tests/test_websockets.py::test_websocket_close_reason[trio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_text_before_accept[trio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[trio]",
      "tests/test_websockets.py::test_receive_json_before_accept[trio]",
      "tests/test_websockets.py::test_send_before_accept[trio]",
      "tests/test_websockets.py::test_send_wrong_message_type[trio]",
      "tests/test_websockets.py::test_receive_before_accept[trio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[trio]",
      "tests/test_websockets.py::test_websocket_scope_interface"
    ],
    "created_at": "2025-06-19T18:37:19.890780",
    "image_name": "swesmith.x86_64.encode__starlette.db5063c2",
    "base_commit": "main",
    "problem_statement": "`Headers.getlist()` now shuffles the underlying raw list  \n===========================================================\n\n(last edited by Ivan G. a few minutes ago)\n\nEver since the latest commit on `main` (\ud83d\udc94 likely somewhere after 0.35.0-dev) I started seeing very odd behaviour with the `Headers` helper.  \nCalling `getlist()` mutates the internal ordering of the header pairs, which then breaks every other method that relies on the original order (and even equality comparisons).\n\nMinimal repro\n-------------\n\n```python\nfrom starlette.datastructures import Headers\n\n# original order: a, a, b\nh = Headers(raw=[(b\"a\", b\"123\"), (b\"a\", b\"456\"), (b\"b\", b\"789\")])\n\nprint(\"1)\", h.keys())      # ['a', 'a', 'b']   \u2705\n\n# simply ask for the list of values\nvals = h.getlist(\"a\")\nprint(\"2)\", vals)          # ['123', '456']    \u2705\n\n# ...and suddenly the headers are re-ordered\nprint(\"3)\", h.keys())      # \u21a9\ufe0e expected ['a', 'a', 'b']\n                           # \u21aa\ufe0e actually  ['b', 'a', 'a']  \u274c\n\n# this breaks equality helpers as well\nsame_headers = Headers(raw=[(b\"a\", b\"123\"), (b\"a\", b\"456\"), (b\"b\", b\"789\")])\nprint(\"4)\", h == same_headers)  # expected True, now False\n```\n\nOutput I get:\n\n```\n1) ['a', 'a', 'b']\n2) ['123', '456']\n3) ['b', 'a', 'a']\n4) False\n```\n\nWhy it matters\n--------------\n\nBesides being surprising, this bubbles up in a few places:\n\n* `dict(h)` suddenly starts dropping duplicates or returning a different mapping than before the call.\n* Comparisons between two `Headers` instances that were equal become unequal after any one of them has called `getlist()`.\n* Down-stream frameworks that rely on a stable header order (e.g. for signature calculation) end up producing invalid results.\n\nThe previous behaviour (\u2264 0.34.x) did **not** modify `raw` at all \u2013 `getlist()` was a pure read.  \nI\u2019m guessing some optimisation crept in that unintentionally writes back to `self._list`.\n\nLet me know if you need any additional details or a more elaborate test case!"
  },
  {
    "instance_id": "google__textfsm.c31b6007.sweagent_buggen__275eadfb",
    "repo": "swesmith/google__textfsm.c31b6007",
    "patch": "diff --git a/textfsm/texttable.py b/textfsm/texttable.py\nindex 5af6be6..9a86542 100755\n--- a/textfsm/texttable.py\n+++ b/textfsm/texttable.py\n@@ -1,4 +1,6 @@\n #!/usr/bin/python\n+_ITER_CACHE = {}\n+\n #\n # Copyright 2012 Google Inc. All Rights Reserved.\n #\n@@ -341,8 +343,38 @@ class TextTable(object):\n     return self._table[row]\n \n   def __iter__(self):\n-    \"\"\"Iterator that excludes the header row.\"\"\"\n-    return next(self)\n+    \"\"\"Iterator that excludes the header row.\n+\n+    Reuse a cached generator for performance when possible. Keeping a cached\n+    iterator can save the overhead of repeatedly constructing generator\n+    objects when the caller iterates multiple times in quick succession. The\n+    cache is cleared automatically once iteration completes, mimicking the\n+    behaviour of a typical one-shot generator whilst still providing a fast\n+    path for short-lived, repeated iteration patterns.\n+    \"\"\"\n+    from weakref import WeakKeyDictionary\n+    cache = _ITER_CACHE\n+    cached = cache.get(self)\n+    if cached is not None:\n+      return cached\n+\n+    def _generator():\n+      try:\n+        for r in self._table[1:]:\n+          # Expose same behaviour as original __next__ implementation for row\n+          self._iterator = r.row\n+          yield r\n+      finally:\n+        # Clear cache once iteration completes or is terminated.\n+        cache.pop(self, None)\n+        self._iterator = 0\n+\n+    gen = _generator()\n+    # Cache the generator so repeated __iter__ calls during an active\n+    # iteration return the same object. This introduces subtle coupling\n+    # between nested iterations.\n+    cache[self] = gen\n+    return gen\n \n   def __next__(self):\n     # Maintain a counter so a row can know what index it is.\n",
    "FAIL_TO_PASS": [
      "tests/texttable_test.py::UnitTestTextTable::testExtendTable",
      "tests/texttable_test.py::UnitTestTextTable::testIteration"
    ],
    "PASS_TO_PASS": [
      "tests/clitable_test.py::UnitTestIndexTable::testCopy",
      "tests/clitable_test.py::UnitTestIndexTable::testGetRowMatch",
      "tests/clitable_test.py::UnitTestIndexTable::testParseIndex",
      "tests/clitable_test.py::UnitTestCliTable::testAddKey",
      "tests/clitable_test.py::UnitTestCliTable::testCliCompile",
      "tests/clitable_test.py::UnitTestCliTable::testCompletion",
      "tests/clitable_test.py::UnitTestCliTable::testCopy",
      "tests/clitable_test.py::UnitTestCliTable::testKeyValue",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmd",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdFromIndex",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdItem",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithMultiTemplates",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithTemplate",
      "tests/clitable_test.py::UnitTestCliTable::testRepeatRead",
      "tests/clitable_test.py::UnitTestCliTable::testRequireCols",
      "tests/clitable_test.py::UnitTestCliTable::testSuperKey",
      "tests/clitable_test.py::UnitTestCliTable::testTableSort",
      "tests/terminal_test.py::TerminalTest::testAnsiCmd",
      "tests/terminal_test.py::TerminalTest::testAnsiText",
      "tests/terminal_test.py::TerminalTest::testEncloseAnsi",
      "tests/terminal_test.py::TerminalTest::testIssue1",
      "tests/terminal_test.py::TerminalTest::testLineWrap",
      "tests/terminal_test.py::TerminalTest::testStripAnsi",
      "tests/terminal_test.py::PagerTest::testPage",
      "tests/terminal_test.py::PagerTest::testPager",
      "tests/textfsm_test.py::UnitTestFSM::testClear",
      "tests/textfsm_test.py::UnitTestFSM::testContinue",
      "tests/textfsm_test.py::UnitTestFSM::testEOF",
      "tests/textfsm_test.py::UnitTestFSM::testEnd",
      "tests/textfsm_test.py::UnitTestFSM::testError",
      "tests/textfsm_test.py::UnitTestFSM::testFSMRule",
      "tests/textfsm_test.py::UnitTestFSM::testFSMValue",
      "tests/textfsm_test.py::UnitTestFSM::testFillup",
      "tests/textfsm_test.py::UnitTestFSM::testGetValuesByAttrib",
      "tests/textfsm_test.py::UnitTestFSM::testImplicitDefaultRules",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidStates",
      "tests/textfsm_test.py::UnitTestFSM::testKey",
      "tests/textfsm_test.py::UnitTestFSM::testList",
      "tests/textfsm_test.py::UnitTestFSM::testNestedMatching",
      "tests/textfsm_test.py::UnitTestFSM::testNestedNameConflict",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMState",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMVariables",
      "tests/textfsm_test.py::UnitTestFSM::testParseNullText",
      "tests/textfsm_test.py::UnitTestFSM::testParseText",
      "tests/textfsm_test.py::UnitTestFSM::testParseTextToDicts",
      "tests/textfsm_test.py::UnitTestFSM::testReEnteringState",
      "tests/textfsm_test.py::UnitTestFSM::testReset",
      "tests/textfsm_test.py::UnitTestFSM::testRulePrefixes",
      "tests/textfsm_test.py::UnitTestFSM::testRuleStartsWithCarrot",
      "tests/textfsm_test.py::UnitTestFSM::testSpacesAroundAction",
      "tests/textfsm_test.py::UnitTestFSM::testStateChange",
      "tests/textfsm_test.py::UnitTestFSM::testTextFSM",
      "tests/textfsm_test.py::UnitTestFSM::testValidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testValidateFSM",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMRule",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMValue",
      "tests/textfsm_test.py::UnitTestUnicode::testTemplateValue",
      "tests/texttable_test.py::UnitTestRow::testHeader",
      "tests/texttable_test.py::UnitTestRow::testIndex",
      "tests/texttable_test.py::UnitTestRow::testRowBasicMethods",
      "tests/texttable_test.py::UnitTestRow::testRowPublicMethods",
      "tests/texttable_test.py::UnitTestRow::testSetValues",
      "tests/texttable_test.py::UnitTestRow::testValue",
      "tests/texttable_test.py::UnitTestTextTable::testAddColumn",
      "tests/texttable_test.py::UnitTestTextTable::testAddTable",
      "tests/texttable_test.py::UnitTestTextTable::testAppend",
      "tests/texttable_test.py::UnitTestTextTable::testContains",
      "tests/texttable_test.py::UnitTestTextTable::testCsvToTable",
      "tests/texttable_test.py::UnitTestTextTable::testCustomRow",
      "tests/texttable_test.py::UnitTestTextTable::testDeleteRow",
      "tests/texttable_test.py::UnitTestTextTable::testFilter",
      "tests/texttable_test.py::UnitTestTextTable::testFilterNone",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable2",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColor",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredCells",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredHeaders",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredMultilineCells",
      "tests/texttable_test.py::UnitTestTextTable::testHeaderIndex",
      "tests/texttable_test.py::UnitTestTextTable::testMap",
      "tests/texttable_test.py::UnitTestTextTable::testRowNumberandParent",
      "tests/texttable_test.py::UnitTestTextTable::testSmallestColSize",
      "tests/texttable_test.py::UnitTestTextTable::testSortTable",
      "tests/texttable_test.py::UnitTestTextTable::testTableGetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableRepr",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowDictWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowListWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowTypes",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowWith",
      "tests/texttable_test.py::UnitTestTextTable::testTableSetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableStr",
      "tests/texttable_test.py::UnitTestTextTable::testTableWithLabels",
      "tests/texttable_test.py::UnitTestTextTable::testTextJustify"
    ],
    "created_at": "2025-06-19T18:37:20.165160",
    "image_name": "swesmith.x86_64.google__textfsm.c31b6007",
    "base_commit": "main",
    "problem_statement": "`TextTable.__iter__()` can only be used once (and breaks nested loops)\n\nDescription  \nRunning a fresh build from `main` I noticed that `TextTable` is no longer reusable in a second or nested `for`-loop \u2013 the iterator appears to be \u201cspent\u201d after the first walk and never resets.  This also bites any helper that relies on iterating internally (e.g. `extend`).\n\nMinimal demo:\n\n```python\nfrom textfsm import texttable\n\ntbl = texttable.TextTable()\ntbl.header = ('a', 'b', 'c')\ntbl.Append(('1', '2', '3'))\ntbl.Append(('10', '20', '30'))\n\n# first pass \u2013 works\nprint([r.values for r in tbl])            # [['1', '2', '3'], ['10', '20', '30']]\n\n# second pass \u2013 now empty!\nprint([r.values for r in tbl])            # expected same two rows\n\n# nested iteration \u2013 inner loop never runs\nfor outer in tbl:\n    for inner in tbl:\n        print(\"should see this\")          # never printed\n```\n\nA slightly different symptom shows up when the table is copied into another table:\n\n```python\nt1 = tbl\nt2 = texttable.TextTable()\nt2.header = ('a', 'b', 'c')\nt2.extend(t1)                            # nothing is copied any more\nprint(t2.size)                           # 0  (was 2)\n```\n\nBoth snippets worked on the 0.8.x release line but fail on the current head.\n\nEnvironment  \n\u2022 Python 3.10.12  \n\u2022 textfsm built from  5c4b6c3 (2024-06-11)  \n\u2022 macOS 14 / Ubuntu 22.04 (reproduces on both)\n\nLet me know if you need more details \u2013 happy to help."
  },
  {
    "instance_id": "encode__starlette.db5063c2.sweagent_buggen__f2bd6f4a",
    "repo": "swesmith/encode__starlette.db5063c2",
    "patch": "diff --git a/starlette/middleware/httpsredirect.py b/starlette/middleware/httpsredirect.py\nindex a835906..053a563 100644\n--- a/starlette/middleware/httpsredirect.py\n+++ b/starlette/middleware/httpsredirect.py\n@@ -7,11 +7,17 @@ class HTTPSRedirectMiddleware:\n     def __init__(self, app: ASGIApp) -> None:\n         self.app = app\n \n-    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n+    async def __call__(self, scope: Scope, receive: Receive, send: Send, _cached_netloc=[None]) -> None:  # type: ignore[override]\n         if scope[\"type\"] in (\"http\", \"websocket\") and scope[\"scheme\"] in (\"http\", \"ws\"):\n             url = URL(scope=scope)\n             redirect_scheme = {\"http\": \"https\", \"ws\": \"wss\"}[url.scheme]\n             netloc = url.hostname if url.port in (80, 443) else url.netloc\n+\n+            if _cached_netloc[0] is None:\n+                _cached_netloc[0] = netloc\n+            else:\n+                netloc = _cached_netloc[0]\n+\n             url = url.replace(scheme=redirect_scheme, netloc=netloc)\n             response = RedirectResponse(url, status_code=307)\n             await response(scope, receive, send)\ndiff --git a/starlette/staticfiles.py b/starlette/staticfiles.py\nindex 746e740..613e516 100644\n--- a/starlette/staticfiles.py\n+++ b/starlette/staticfiles.py\n@@ -161,6 +161,10 @@ class StaticFiles:\n                 # directory.\n                 continue\n             try:\n+\n+                dir_mode = os.stat(directory).st_mode\n+                if not (dir_mode & stat.S_IRUSR and dir_mode & stat.S_IXUSR):\n+                    raise PermissionError\n                 return full_path, os.stat(full_path)\n             except (FileNotFoundError, NotADirectoryError):\n                 continue\n",
    "FAIL_TO_PASS": [
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[asyncio]",
      "tests/middleware/test_https_redirect.py::test_https_redirect_middleware[trio]"
    ],
    "PASS_TO_PASS": [
      "tests/middleware/test_base.py::test_custom_middleware[asyncio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[asyncio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[asyncio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[asyncio]",
      "tests/middleware/test_base.py::test_contextvars[asyncio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[asyncio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[asyncio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[asyncio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[asyncio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[asyncio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[asyncio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[asyncio-False]",
      "tests/middleware/test_base.py::test_custom_middleware[trio]",
      "tests/middleware/test_base.py::test_state_data_across_multiple_middlewares[trio]",
      "tests/middleware/test_base.py::test_app_middleware_argument[trio]",
      "tests/middleware/test_base.py::test_fully_evaluated_response[trio]",
      "tests/middleware/test_base.py::test_contextvars[trio-CustomMiddlewareWithoutBaseHTTPMiddleware]",
      "tests/middleware/test_base.py::test_run_background_tasks_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_do_not_block_on_background_tasks[trio]",
      "tests/middleware/test_base.py::test_run_context_manager_exit_even_if_client_disconnects[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_while_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_app_receives_http_disconnect_after_sending_if_discarded[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_app_after_middleware_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_stream[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_wrapping_app_calls_body[trio]",
      "tests/middleware/test_base.py::test_read_request_stream_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_body_in_dispatch_after_app_calls_body_with_middleware_calling_body_before_call_next[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_client[trio]",
      "tests/middleware/test_base.py::test_read_request_disconnected_after_consuming_steam[trio]",
      "tests/middleware/test_base.py::test_downstream_middleware_modifies_receive[trio]",
      "tests/middleware/test_base.py::test_multiple_middlewares_stacked_client_disconnected[trio]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-True]",
      "tests/middleware/test_base.py::test_poll_for_disconnect_repeated[trio-False]",
      "tests/middleware/test_base.py::test_pr_1519_comment_1236166180_example",
      "tests/middleware/test_cors.py::test_cors_allow_all[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[asyncio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[asyncio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[asyncio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[asyncio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[asyncio]",
      "tests/middleware/test_cors.py::test_cors_allow_all[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_except_credentials[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_disallowed_preflight[trio]",
      "tests/middleware/test_cors.py::test_preflight_allows_request_origin_if_origins_wildcard_and_credentials_allowed[trio]",
      "tests/middleware/test_cors.py::test_cors_preflight_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_all_methods[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex[trio]",
      "tests/middleware/test_cors.py::test_cors_allow_origin_regex_fullmatch[trio]",
      "tests/middleware/test_cors.py::test_cors_credentialed_requests_return_specific_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_defaults_to_origin[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_not_set_for_non_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_for_credentialed_request[trio]",
      "tests/middleware/test_cors.py::test_cors_vary_header_is_properly_set_when_allow_origins_is_not_wildcard[trio]",
      "tests/middleware/test_cors.py::test_cors_allowed_origin_does_not_leak_between_credentialed_requests[trio]",
      "tests/middleware/test_errors.py::test_handler[asyncio]",
      "tests/middleware/test_errors.py::test_debug_text[asyncio]",
      "tests/middleware/test_errors.py::test_debug_html[asyncio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[asyncio]",
      "tests/middleware/test_errors.py::test_debug_not_http[asyncio]",
      "tests/middleware/test_errors.py::test_background_task[asyncio]",
      "tests/middleware/test_errors.py::test_handler[trio]",
      "tests/middleware/test_errors.py::test_debug_text[trio]",
      "tests/middleware/test_errors.py::test_debug_html[trio]",
      "tests/middleware/test_errors.py::test_debug_after_response_sent[trio]",
      "tests/middleware/test_errors.py::test_debug_not_http[trio]",
      "tests/middleware/test_errors.py::test_background_task[trio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[asyncio]",
      "tests/middleware/test_gzip.py::test_gzip_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_not_in_accept_encoding[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_small_responses[trio]",
      "tests/middleware/test_gzip.py::test_gzip_streaming_response[trio]",
      "tests/middleware/test_gzip.py::test_gzip_ignored_for_responses_with_encoding_set[trio]",
      "tests/middleware/test_middleware.py::test_middleware_repr",
      "tests/middleware/test_middleware.py::test_middleware_iter",
      "tests/middleware/test_session.py::test_session[asyncio]",
      "tests/middleware/test_session.py::test_session_expires[asyncio]",
      "tests/middleware/test_session.py::test_secure_session[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[asyncio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session_cookie[asyncio]",
      "tests/middleware/test_session.py::test_domain_cookie[asyncio]",
      "tests/middleware/test_session.py::test_session[trio]",
      "tests/middleware/test_session.py::test_session_expires[trio]",
      "tests/middleware/test_session.py::test_secure_session[trio]",
      "tests/middleware/test_session.py::test_session_cookie_subpath[trio]",
      "tests/middleware/test_session.py::test_invalid_session_cookie[trio]",
      "tests/middleware/test_session.py::test_session_cookie[trio]",
      "tests/middleware/test_session.py::test_domain_cookie[trio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[asyncio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[asyncio]",
      "tests/middleware/test_trusted_host.py::test_trusted_host_middleware[trio]",
      "tests/middleware/test_trusted_host.py::test_www_redirect[trio]",
      "tests/middleware/test_trusted_host.py::test_default_allowed_hosts",
      "tests/middleware/test_wsgi.py::test_wsgi_get[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[asyncio]",
      "tests/middleware/test_wsgi.py::test_wsgi_get[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_post[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exception[trio]",
      "tests/middleware/test_wsgi.py::test_wsgi_exc_info[trio]",
      "tests/middleware/test_wsgi.py::test_build_environ",
      "tests/middleware/test_wsgi.py::test_build_environ_encoding",
      "tests/test__utils.py::test_async_func",
      "tests/test__utils.py::test_async_partial",
      "tests/test__utils.py::test_async_method",
      "tests/test__utils.py::test_async_object_call",
      "tests/test__utils.py::test_async_partial_object_call",
      "tests/test__utils.py::test_async_nested_partial",
      "tests/test__utils.py::test_get_route_path[scope0-/foo-123/bar]",
      "tests/test__utils.py::test_get_route_path[scope1-/bar]",
      "tests/test__utils.py::test_get_route_path[scope2-]",
      "tests/test__utils.py::test_get_route_path[scope3-/foo/bar]",
      "tests/test_applications.py::test_url_path_for",
      "tests/test_applications.py::test_func_route[asyncio]",
      "tests/test_applications.py::test_async_route[asyncio]",
      "tests/test_applications.py::test_class_route[asyncio]",
      "tests/test_applications.py::test_mounted_route[asyncio]",
      "tests/test_applications.py::test_mounted_route_path_params[asyncio]",
      "tests/test_applications.py::test_subdomain_route[asyncio]",
      "tests/test_applications.py::test_websocket_route[asyncio]",
      "tests/test_applications.py::test_400[asyncio]",
      "tests/test_applications.py::test_405[asyncio]",
      "tests/test_applications.py::test_500[asyncio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[asyncio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[asyncio]",
      "tests/test_applications.py::test_middleware[asyncio]",
      "tests/test_applications.py::test_app_mount[asyncio]",
      "tests/test_applications.py::test_app_debug[asyncio]",
      "tests/test_applications.py::test_app_add_route[asyncio]",
      "tests/test_applications.py::test_app_add_websocket_route[asyncio]",
      "tests/test_applications.py::test_app_add_event_handler[asyncio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[asyncio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[asyncio]",
      "tests/test_applications.py::test_middleware_stack_init[asyncio]",
      "tests/test_applications.py::test_middleware_args[asyncio]",
      "tests/test_applications.py::test_middleware_factory[asyncio]",
      "tests/test_applications.py::test_func_route[trio]",
      "tests/test_applications.py::test_async_route[trio]",
      "tests/test_applications.py::test_class_route[trio]",
      "tests/test_applications.py::test_mounted_route[trio]",
      "tests/test_applications.py::test_mounted_route_path_params[trio]",
      "tests/test_applications.py::test_subdomain_route[trio]",
      "tests/test_applications.py::test_websocket_route[trio]",
      "tests/test_applications.py::test_400[trio]",
      "tests/test_applications.py::test_405[trio]",
      "tests/test_applications.py::test_500[trio]",
      "tests/test_applications.py::test_websocket_raise_websocket_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_http_exception[trio]",
      "tests/test_applications.py::test_websocket_raise_custom_exception[trio]",
      "tests/test_applications.py::test_middleware[trio]",
      "tests/test_applications.py::test_app_mount[trio]",
      "tests/test_applications.py::test_app_debug[trio]",
      "tests/test_applications.py::test_app_add_route[trio]",
      "tests/test_applications.py::test_app_add_websocket_route[trio]",
      "tests/test_applications.py::test_app_add_event_handler[trio]",
      "tests/test_applications.py::test_app_async_cm_lifespan[trio]",
      "tests/test_applications.py::test_app_async_gen_lifespan[trio]",
      "tests/test_applications.py::test_app_sync_gen_lifespan[trio]",
      "tests/test_applications.py::test_middleware_stack_init[trio]",
      "tests/test_applications.py::test_middleware_args[trio]",
      "tests/test_applications.py::test_middleware_factory[trio]",
      "tests/test_applications.py::test_routes",
      "tests/test_applications.py::test_decorator_deprecations",
      "tests/test_applications.py::test_lifespan_app_subclass",
      "tests/test_authentication.py::test_invalid_decorator_usage",
      "tests/test_authentication.py::test_user_interface[asyncio]",
      "tests/test_authentication.py::test_authentication_required[asyncio]",
      "tests/test_authentication.py::test_websocket_authentication_required[asyncio]",
      "tests/test_authentication.py::test_authentication_redirect[asyncio]",
      "tests/test_authentication.py::test_custom_on_error[asyncio]",
      "tests/test_authentication.py::test_user_interface[trio]",
      "tests/test_authentication.py::test_authentication_required[trio]",
      "tests/test_authentication.py::test_websocket_authentication_required[trio]",
      "tests/test_authentication.py::test_authentication_redirect[trio]",
      "tests/test_authentication.py::test_custom_on_error[trio]",
      "tests/test_background.py::test_async_task[asyncio]",
      "tests/test_background.py::test_sync_task[asyncio]",
      "tests/test_background.py::test_multiple_tasks[asyncio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[asyncio]",
      "tests/test_background.py::test_async_task[trio]",
      "tests/test_background.py::test_sync_task[trio]",
      "tests/test_background.py::test_multiple_tasks[trio]",
      "tests/test_background.py::test_multi_tasks_failure_avoids_next_execution[trio]",
      "tests/test_concurrency.py::test_run_until_first_complete[asyncio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[asyncio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[asyncio]",
      "tests/test_concurrency.py::test_run_until_first_complete[trio]",
      "tests/test_concurrency.py::test_accessing_context_from_threaded_sync_endpoint[trio]",
      "tests/test_concurrency.py::test_iterate_in_threadpool[trio]",
      "tests/test_config.py::test_config_types",
      "tests/test_config.py::test_config",
      "tests/test_config.py::test_missing_env_file_raises",
      "tests/test_config.py::test_environ",
      "tests/test_config.py::test_config_with_env_prefix",
      "tests/test_convertors.py::test_datetime_convertor[asyncio]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[asyncio-1-0-404]",
      "tests/test_convertors.py::test_datetime_convertor[trio]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1.0-200]",
      "tests/test_convertors.py::test_default_float_convertor[trio-1-0-404]",
      "tests/test_datastructures.py::test_url",
      "tests/test_datastructures.py::test_url_query_params",
      "tests/test_datastructures.py::test_hidden_password",
      "tests/test_datastructures.py::test_csv",
      "tests/test_datastructures.py::test_url_from_scope",
      "tests/test_datastructures.py::test_headers",
      "tests/test_datastructures.py::test_mutable_headers",
      "tests/test_datastructures.py::test_mutable_headers_merge",
      "tests/test_datastructures.py::test_mutable_headers_merge_dict",
      "tests/test_datastructures.py::test_mutable_headers_update",
      "tests/test_datastructures.py::test_mutable_headers_update_dict",
      "tests/test_datastructures.py::test_mutable_headers_merge_not_mapping",
      "tests/test_datastructures.py::test_headers_mutablecopy",
      "tests/test_datastructures.py::test_mutable_headers_from_scope",
      "tests/test_datastructures.py::test_url_blank_params",
      "tests/test_datastructures.py::test_queryparams",
      "tests/test_datastructures.py::test_upload_file_file_input[asyncio]",
      "tests/test_datastructures.py::test_upload_file_without_size[asyncio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[asyncio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[asyncio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[asyncio]",
      "tests/test_datastructures.py::test_upload_file_file_input[trio]",
      "tests/test_datastructures.py::test_upload_file_without_size[trio]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-rolled]",
      "tests/test_datastructures.py::test_uploadfile_rolling[trio-unrolled]",
      "tests/test_datastructures.py::test_upload_file_repr[trio]",
      "tests/test_datastructures.py::test_upload_file_repr_headers[trio]",
      "tests/test_datastructures.py::test_formdata",
      "tests/test_datastructures.py::test_multidict",
      "tests/test_endpoints.py::test_http_endpoint_route[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[asyncio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[asyncio]",
      "tests/test_endpoints.py::test_http_endpoint_route[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_path_params[trio]",
      "tests/test_endpoints.py::test_http_endpoint_route_method[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_connect[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_bytes[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_json_binary[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_receive_text[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_default[trio]",
      "tests/test_endpoints.py::test_websocket_endpoint_on_disconnect[trio]",
      "tests/test_exceptions.py::test_not_acceptable[asyncio]",
      "tests/test_exceptions.py::test_no_content[asyncio]",
      "tests/test_exceptions.py::test_not_modified[asyncio]",
      "tests/test_exceptions.py::test_with_headers[asyncio]",
      "tests/test_exceptions.py::test_websockets_should_raise[asyncio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[asyncio]",
      "tests/test_exceptions.py::test_force_500_response[asyncio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[asyncio]",
      "tests/test_exceptions.py::test_not_acceptable[trio]",
      "tests/test_exceptions.py::test_no_content[trio]",
      "tests/test_exceptions.py::test_not_modified[trio]",
      "tests/test_exceptions.py::test_with_headers[trio]",
      "tests/test_exceptions.py::test_websockets_should_raise[trio]",
      "tests/test_exceptions.py::test_handled_exc_after_response[trio]",
      "tests/test_exceptions.py::test_force_500_response[trio]",
      "tests/test_exceptions.py::test_request_in_app_and_handler_is_the_same_object[trio]",
      "tests/test_exceptions.py::test_http_str",
      "tests/test_exceptions.py::test_http_repr",
      "tests/test_exceptions.py::test_websocket_str",
      "tests/test_exceptions.py::test_websocket_repr",
      "tests/test_exceptions.py::test_exception_middleware_deprecation",
      "tests/test_formparsers.py::test_multipart_request_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[asyncio]",
      "tests/test_formparsers.py::test_multi_items[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[asyncio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[asyncio]",
      "tests/test_formparsers.py::test_no_request_data[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[asyncio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[asyncio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[asyncio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[asyncio-app1-expectation1]",
      "tests/test_formparsers.py::test_multipart_request_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_files_with_content_type[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files[trio]",
      "tests/test_formparsers.py::test_multipart_request_multiple_files_with_headers[trio]",
      "tests/test_formparsers.py::test_multi_items[trio]",
      "tests/test_formparsers.py::test_multipart_request_mixed_files_and_data[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_without_charset_for_filename[trio]",
      "tests/test_formparsers.py::test_multipart_request_with_encoded_value[trio]",
      "tests/test_formparsers.py::test_urlencoded_request_data[trio]",
      "tests/test_formparsers.py::test_no_request_data[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding[trio]",
      "tests/test_formparsers.py::test_urlencoded_percent_encoding_keys[trio]",
      "tests/test_formparsers.py::test_urlencoded_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_multipart_multi_field_app_reads_body[trio]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_boundary_parameter[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app-expectation0]",
      "tests/test_formparsers.py::test_missing_name_parameter_on_content_disposition[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_single_field_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app-expectation0]",
      "tests/test_formparsers.py::test_too_many_files_and_fields_raise[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_files_is_customizable_low_raises[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_max_fields_is_customizable_high[trio]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app-expectation0]",
      "tests/test_formparsers.py::test_max_part_size_exceeds_limit[trio-app1-expectation1]",
      "tests/test_formparsers.py::test_user_safe_decode_helper",
      "tests/test_formparsers.py::test_user_safe_decode_ignores_wrong_charset",
      "tests/test_requests.py::test_request_url[asyncio]",
      "tests/test_requests.py::test_request_query_params[asyncio]",
      "tests/test_requests.py::test_request_headers[asyncio]",
      "tests/test_requests.py::test_request_body[asyncio]",
      "tests/test_requests.py::test_request_stream[asyncio]",
      "tests/test_requests.py::test_request_form_urlencoded[asyncio]",
      "tests/test_requests.py::test_request_form_context_manager[asyncio]",
      "tests/test_requests.py::test_request_body_then_stream[asyncio]",
      "tests/test_requests.py::test_request_stream_then_body[asyncio]",
      "tests/test_requests.py::test_request_json[asyncio]",
      "tests/test_requests.py::test_request_raw_path[asyncio]",
      "tests/test_requests.py::test_request_without_setting_receive[asyncio]",
      "tests/test_requests.py::test_request_disconnect[asyncio]",
      "tests/test_requests.py::test_request_is_disconnected[asyncio]",
      "tests/test_requests.py::test_request_state[asyncio]",
      "tests/test_requests.py::test_request_cookies[asyncio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[asyncio]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[asyncio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[asyncio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[asyncio]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages0]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages1]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages2]",
      "tests/test_requests.py::test_request_rcv[asyncio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[asyncio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url_starlette_context[asyncio]",
      "tests/test_requests.py::test_request_url[trio]",
      "tests/test_requests.py::test_request_query_params[trio]",
      "tests/test_requests.py::test_request_headers[trio]",
      "tests/test_requests.py::test_request_body[trio]",
      "tests/test_requests.py::test_request_stream[trio]",
      "tests/test_requests.py::test_request_form_urlencoded[trio]",
      "tests/test_requests.py::test_request_form_context_manager[trio]",
      "tests/test_requests.py::test_request_body_then_stream[trio]",
      "tests/test_requests.py::test_request_stream_then_body[trio]",
      "tests/test_requests.py::test_request_json[trio]",
      "tests/test_requests.py::test_request_raw_path[trio]",
      "tests/test_requests.py::test_request_without_setting_receive[trio]",
      "tests/test_requests.py::test_request_disconnect[trio]",
      "tests/test_requests.py::test_request_is_disconnected[trio]",
      "tests/test_requests.py::test_request_state[trio]",
      "tests/test_requests.py::test_request_cookies[trio]",
      "tests/test_requests.py::test_cookie_lenient_parsing[trio]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-keebler=E=mc2-expected2]",
      "tests/test_requests.py::test_cookies_edge_cases[trio-key:term=value:term-expected3]",
      "tests/test_requests.py::test_chunked_encoding[trio]",
      "tests/test_requests.py::test_request_send_push_promise[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_push_extension[trio]",
      "tests/test_requests.py::test_request_send_push_promise_without_setting_send[trio]",
      "tests/test_requests.py::test_request_rcv[trio-messages0]",
      "tests/test_requests.py::test_request_rcv[trio-messages1]",
      "tests/test_requests.py::test_request_rcv[trio-messages2]",
      "tests/test_requests.py::test_request_rcv[trio-messages3]",
      "tests/test_requests.py::test_request_stream_called_twice[trio]",
      "tests/test_requests.py::test_request_url_outside_starlette_context[trio]",
      "tests/test_requests.py::test_request_url_starlette_context[trio]",
      "tests/test_requests.py::test_request_client[scope0-expected_client0]",
      "tests/test_requests.py::test_request_client[scope1-None]",
      "tests/test_requests.py::test_request_client[scope2-None]",
      "tests/test_requests.py::test_request_scope_interface",
      "tests/test_requests.py::test_request_state_object",
      "tests/test_responses.py::test_text_response[asyncio]",
      "tests/test_responses.py::test_bytes_response[asyncio]",
      "tests/test_responses.py::test_json_none_response[asyncio]",
      "tests/test_responses.py::test_redirect_response[asyncio]",
      "tests/test_responses.py::test_quoting_redirect_response[asyncio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[asyncio]",
      "tests/test_responses.py::test_streaming_response[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[asyncio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[asyncio]",
      "tests/test_responses.py::test_sync_streaming_response[asyncio]",
      "tests/test_responses.py::test_response_headers[asyncio]",
      "tests/test_responses.py::test_response_phrase[asyncio]",
      "tests/test_responses.py::test_file_response[asyncio]",
      "tests/test_responses.py::test_file_response_on_head_method[asyncio]",
      "tests/test_responses.py::test_file_response_set_media_type[asyncio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[asyncio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[asyncio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[asyncio]",
      "tests/test_responses.py::test_file_response_with_range_header[asyncio]",
      "tests/test_responses.py::test_set_cookie[asyncio]",
      "tests/test_responses.py::test_set_cookie_path_none[asyncio]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[asyncio-int]",
      "tests/test_responses.py::test_delete_cookie[asyncio]",
      "tests/test_responses.py::test_populate_headers[asyncio]",
      "tests/test_responses.py::test_head_method[asyncio]",
      "tests/test_responses.py::test_empty_response[asyncio]",
      "tests/test_responses.py::test_empty_204_response[asyncio]",
      "tests/test_responses.py::test_non_empty_response[asyncio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[asyncio]",
      "tests/test_responses.py::test_file_response_known_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[asyncio]",
      "tests/test_responses.py::test_streaming_response_known_size[asyncio]",
      "tests/test_responses.py::test_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_memoryview[asyncio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[asyncio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[asyncio]",
      "tests/test_responses.py::test_file_response_without_range[asyncio]",
      "tests/test_responses.py::test_file_response_head[asyncio]",
      "tests/test_responses.py::test_file_response_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi[asyncio]",
      "tests/test_responses.py::test_file_response_range_multi_head[asyncio]",
      "tests/test_responses.py::test_file_response_range_invalid[asyncio]",
      "tests/test_responses.py::test_file_response_range_head_max[asyncio]",
      "tests/test_responses.py::test_file_response_range_416[asyncio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[asyncio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[asyncio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[asyncio]",
      "tests/test_responses.py::test_file_response_merge_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_insert_ranges[asyncio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[asyncio]",
      "tests/test_responses.py::test_text_response[trio]",
      "tests/test_responses.py::test_bytes_response[trio]",
      "tests/test_responses.py::test_json_none_response[trio]",
      "tests/test_responses.py::test_redirect_response[trio]",
      "tests/test_responses.py::test_quoting_redirect_response[trio]",
      "tests/test_responses.py::test_redirect_response_content_length_header[trio]",
      "tests/test_responses.py::test_streaming_response[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterator[trio]",
      "tests/test_responses.py::test_streaming_response_custom_iterable[trio]",
      "tests/test_responses.py::test_sync_streaming_response[trio]",
      "tests/test_responses.py::test_response_headers[trio]",
      "tests/test_responses.py::test_response_phrase[trio]",
      "tests/test_responses.py::test_file_response[trio]",
      "tests/test_responses.py::test_file_response_on_head_method[trio]",
      "tests/test_responses.py::test_file_response_set_media_type[trio]",
      "tests/test_responses.py::test_file_response_with_directory_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_missing_file_raises_error[trio]",
      "tests/test_responses.py::test_file_response_with_chinese_filename[trio]",
      "tests/test_responses.py::test_file_response_with_inline_disposition[trio]",
      "tests/test_responses.py::test_file_response_with_range_header[trio]",
      "tests/test_responses.py::test_set_cookie[trio]",
      "tests/test_responses.py::test_set_cookie_path_none[trio]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-datetime]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-str]",
      "tests/test_responses.py::test_expires_on_set_cookie[trio-int]",
      "tests/test_responses.py::test_delete_cookie[trio]",
      "tests/test_responses.py::test_populate_headers[trio]",
      "tests/test_responses.py::test_head_method[trio]",
      "tests/test_responses.py::test_empty_response[trio]",
      "tests/test_responses.py::test_empty_204_response[trio]",
      "tests/test_responses.py::test_non_empty_response[trio]",
      "tests/test_responses.py::test_response_do_not_add_redundant_charset[trio]",
      "tests/test_responses.py::test_file_response_known_size[trio]",
      "tests/test_responses.py::test_streaming_response_unknown_size[trio]",
      "tests/test_responses.py::test_streaming_response_known_size[trio]",
      "tests/test_responses.py::test_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_memoryview[trio]",
      "tests/test_responses.py::test_streaming_response_stops_if_receiving_http_disconnect[trio]",
      "tests/test_responses.py::test_streaming_response_on_client_disconnects[trio]",
      "tests/test_responses.py::test_file_response_without_range[trio]",
      "tests/test_responses.py::test_file_response_head[trio]",
      "tests/test_responses.py::test_file_response_range[trio]",
      "tests/test_responses.py::test_file_response_range_head[trio]",
      "tests/test_responses.py::test_file_response_range_multi[trio]",
      "tests/test_responses.py::test_file_response_range_multi_head[trio]",
      "tests/test_responses.py::test_file_response_range_invalid[trio]",
      "tests/test_responses.py::test_file_response_range_head_max[trio]",
      "tests/test_responses.py::test_file_response_range_416[trio]",
      "tests/test_responses.py::test_file_response_only_support_bytes_range[trio]",
      "tests/test_responses.py::test_file_response_range_must_be_requested[trio]",
      "tests/test_responses.py::test_file_response_start_must_be_less_than_end[trio]",
      "tests/test_responses.py::test_file_response_merge_ranges[trio]",
      "tests/test_responses.py::test_file_response_insert_ranges[trio]",
      "tests/test_responses.py::test_file_response_multi_small_chunk_size[trio]",
      "tests/test_responses.py::test_file_response_with_method_warns",
      "tests/test_routing.py::test_router[asyncio]",
      "tests/test_routing.py::test_route_converters[asyncio]",
      "tests/test_routing.py::test_router_add_route[asyncio]",
      "tests/test_routing.py::test_router_duplicate_path[asyncio]",
      "tests/test_routing.py::test_router_add_websocket_route[asyncio]",
      "tests/test_routing.py::test_router_middleware[asyncio]",
      "tests/test_routing.py::test_protocol_switch[asyncio]",
      "tests/test_routing.py::test_mount_urls[asyncio]",
      "tests/test_routing.py::test_mount_at_root[asyncio]",
      "tests/test_routing.py::test_host_routing[asyncio]",
      "tests/test_routing.py::test_subdomain_routing[asyncio]",
      "tests/test_routing.py::test_url_for_with_root_path[asyncio]",
      "tests/test_routing.py::test_standalone_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[asyncio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[asyncio]",
      "tests/test_routing.py::test_lifespan_async[asyncio]",
      "tests/test_routing.py::test_lifespan_with_on_events[asyncio]",
      "tests/test_routing.py::test_lifespan_sync[asyncio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[asyncio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[asyncio]",
      "tests/test_routing.py::test_raise_on_startup[asyncio]",
      "tests/test_routing.py::test_raise_on_shutdown[asyncio]",
      "tests/test_routing.py::test_partial_async_endpoint[asyncio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[asyncio]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app0]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app1]",
      "tests/test_routing.py::test_base_route_middleware[asyncio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[asyncio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[asyncio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[asyncio]",
      "tests/test_routing.py::test_websocket_route_middleware[asyncio]",
      "tests/test_routing.py::test_paths_with_root_path[asyncio]",
      "tests/test_routing.py::test_router[trio]",
      "tests/test_routing.py::test_route_converters[trio]",
      "tests/test_routing.py::test_router_add_route[trio]",
      "tests/test_routing.py::test_router_duplicate_path[trio]",
      "tests/test_routing.py::test_router_add_websocket_route[trio]",
      "tests/test_routing.py::test_router_middleware[trio]",
      "tests/test_routing.py::test_protocol_switch[trio]",
      "tests/test_routing.py::test_mount_urls[trio]",
      "tests/test_routing.py::test_mount_at_root[trio]",
      "tests/test_routing.py::test_host_routing[trio]",
      "tests/test_routing.py::test_subdomain_routing[trio]",
      "tests/test_routing.py::test_url_for_with_root_path[trio]",
      "tests/test_routing.py::test_standalone_route_matches[trio]",
      "tests/test_routing.py::test_standalone_route_does_not_match[trio]",
      "tests/test_routing.py::test_standalone_ws_route_matches[trio]",
      "tests/test_routing.py::test_standalone_ws_route_does_not_match[trio]",
      "tests/test_routing.py::test_lifespan_async[trio]",
      "tests/test_routing.py::test_lifespan_with_on_events[trio]",
      "tests/test_routing.py::test_lifespan_sync[trio]",
      "tests/test_routing.py::test_lifespan_state_unsupported[trio]",
      "tests/test_routing.py::test_lifespan_state_async_cm[trio]",
      "tests/test_routing.py::test_raise_on_startup[trio]",
      "tests/test_routing.py::test_raise_on_shutdown[trio]",
      "tests/test_routing.py::test_partial_async_endpoint[trio]",
      "tests/test_routing.py::test_partial_async_ws_endpoint[trio]",
      "tests/test_routing.py::test_base_route_middleware[trio-app0]",
      "tests/test_routing.py::test_base_route_middleware[trio-app1]",
      "tests/test_routing.py::test_base_route_middleware[trio-app2]",
      "tests/test_routing.py::test_add_route_to_app_after_mount[trio]",
      "tests/test_routing.py::test_exception_on_mounted_apps[trio]",
      "tests/test_routing.py::test_mounted_middleware_does_not_catch_exception[trio]",
      "tests/test_routing.py::test_websocket_route_middleware[trio]",
      "tests/test_routing.py::test_paths_with_root_path[trio]",
      "tests/test_routing.py::test_url_path_for",
      "tests/test_routing.py::test_url_for",
      "tests/test_routing.py::test_reverse_mount_urls",
      "tests/test_routing.py::test_host_reverse_urls",
      "tests/test_routing.py::test_subdomain_reverse_urls",
      "tests/test_routing.py::test_url_for_with_double_mount",
      "tests/test_routing.py::test_duplicated_param_names",
      "tests/test_routing.py::test_route_name[function]",
      "tests/test_routing.py::test_route_name[method]",
      "tests/test_routing.py::test_route_name[classmethod]",
      "tests/test_routing.py::test_route_name[staticmethod]",
      "tests/test_routing.py::test_route_name[object]",
      "tests/test_routing.py::test_route_name[lambda]",
      "tests/test_routing.py::test_mount_routes_with_middleware_url_path_for",
      "tests/test_routing.py::test_mount_asgi_app_with_middleware_url_path_for",
      "tests/test_routing.py::test_route_repr",
      "tests/test_routing.py::test_route_repr_without_methods",
      "tests/test_routing.py::test_websocket_route_repr",
      "tests/test_routing.py::test_mount_repr",
      "tests/test_routing.py::test_mount_named_repr",
      "tests/test_routing.py::test_host_repr",
      "tests/test_routing.py::test_host_named_repr",
      "tests/test_routing.py::test_decorator_deprecations",
      "tests/test_schemas.py::test_schema_generation",
      "tests/test_schemas.py::test_schema_endpoint[asyncio]",
      "tests/test_schemas.py::test_schema_endpoint[trio]",
      "tests/test_staticfiles.py::test_staticfiles[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_post[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[asyncio]",
      "tests/test_staticfiles.py::test_staticfiles[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_pathlib[trio]",
      "tests/test_staticfiles.py::test_staticfiles_head_with_middleware[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_package[trio]",
      "tests/test_staticfiles.py::test_staticfiles_post[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_directory_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_file_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_missing_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_configured_with_file_instead_of_directory[trio]",
      "tests/test_staticfiles.py::test_staticfiles_config_check_occurs_only_once[trio]",
      "tests/test_staticfiles.py::test_staticfiles_never_read_file_for_head_method[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_etag_match[trio]",
      "tests/test_staticfiles.py::test_staticfiles_304_with_last_modified_compare_last_req[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_normal[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_index[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_without_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_html_only_files[trio]",
      "tests/test_staticfiles.py::test_staticfiles_cache_invalidation_for_deleted_file_html_mode[trio]",
      "tests/test_staticfiles.py::test_staticfiles_with_missing_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_access_file_as_dir_returns_404[trio]",
      "tests/test_staticfiles.py::test_staticfiles_filename_too_long[trio]",
      "tests/test_staticfiles.py::test_staticfiles_unhandled_os_error_returns_500[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_follows_symlink_directories[trio]",
      "tests/test_staticfiles.py::test_staticfiles_self_symlinks[trio]",
      "tests/test_staticfiles.py::test_staticfiles_instantiated_with_missing_directory",
      "tests/test_staticfiles.py::test_staticfiles_prevents_breaking_out_of_directory",
      "tests/test_staticfiles.py::test_staticfiles_disallows_path_traversal_with_symlinks",
      "tests/test_staticfiles.py::test_staticfiles_avoids_path_traversal",
      "tests/test_templates.py::test_templates[asyncio]",
      "tests/test_templates.py::test_calls_context_processors[asyncio]",
      "tests/test_templates.py::test_template_with_middleware[asyncio]",
      "tests/test_templates.py::test_templates_with_directories[asyncio]",
      "tests/test_templates.py::test_templates_with_environment[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[asyncio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[asyncio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[asyncio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[asyncio]",
      "tests/test_templates.py::test_templates[trio]",
      "tests/test_templates.py::test_calls_context_processors[trio]",
      "tests/test_templates.py::test_template_with_middleware[trio]",
      "tests/test_templates.py::test_templates_with_directories[trio]",
      "tests/test_templates.py::test_templates_with_environment[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only[trio]",
      "tests/test_templates.py::test_templates_with_kwargs_only_warns_when_no_request_keyword[trio]",
      "tests/test_templates.py::test_templates_warns_when_first_argument_isnot_request[trio]",
      "tests/test_templates.py::test_templates_when_first_argument_is_request[trio]",
      "tests/test_templates.py::test_templates_require_directory_or_environment",
      "tests/test_templates.py::test_templates_require_directory_or_enviroment_not_both",
      "tests/test_templates.py::test_templates_with_directory",
      "tests/test_templates.py::test_templates_with_environment_options_emit_warning",
      "tests/test_templates.py::test_templates_with_kwargs_only_requires_request_in_context",
      "tests/test_templates.py::test_templates_with_requires_request_in_context",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[asyncio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[asyncio]",
      "tests/test_testclient.py::test_error_on_startup[asyncio]",
      "tests/test_testclient.py::test_exception_in_middleware[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi2[asyncio]",
      "tests/test_testclient.py::test_testclient_asgi3[asyncio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[asyncio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[asyncio]",
      "tests/test_testclient.py::test_client[asyncio]",
      "tests/test_testclient.py::test_query_params[asyncio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[asyncio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[asyncio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[asyncio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[asyncio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[asyncio]",
      "tests/test_testclient.py::test_with_duplicate_headers[asyncio]",
      "tests/test_testclient.py::test_merge_url[asyncio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[asyncio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[asyncio]",
      "tests/test_testclient.py::test_use_testclient_in_endpoint[trio]",
      "tests/test_testclient.py::test_use_testclient_as_contextmanager[trio]",
      "tests/test_testclient.py::test_error_on_startup[trio]",
      "tests/test_testclient.py::test_exception_in_middleware[trio]",
      "tests/test_testclient.py::test_testclient_asgi2[trio]",
      "tests/test_testclient.py::test_testclient_asgi3[trio]",
      "tests/test_testclient.py::test_websocket_blocking_receive[trio]",
      "tests/test_testclient.py::test_websocket_not_block_on_close[trio]",
      "tests/test_testclient.py::test_client[trio]",
      "tests/test_testclient.py::test_query_params[trio-2020-07-14T00:00:00+00:00]",
      "tests/test_testclient.py::test_query_params[trio-Espa\\xf1a]",
      "tests/test_testclient.py::test_query_params[trio-voil\\xe0]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-testserver.local-True]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-localhost-False]",
      "tests/test_testclient.py::test_domain_restricted_cookies[trio-example.com-False]",
      "tests/test_testclient.py::test_forward_follow_redirects[trio]",
      "tests/test_testclient.py::test_forward_nofollow_redirects[trio]",
      "tests/test_testclient.py::test_with_duplicate_headers[trio]",
      "tests/test_testclient.py::test_merge_url[trio]",
      "tests/test_testclient.py::test_raw_path_with_querystring[trio]",
      "tests/test_testclient.py::test_websocket_raw_path_without_params[trio]",
      "tests/test_testclient.py::test_testclient_headers_behavior",
      "tests/test_websockets.py::test_websocket_url[asyncio]",
      "tests/test_websockets.py::test_websocket_binary_json[asyncio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[asyncio]",
      "tests/test_websockets.py::test_websocket_query_params[asyncio]",
      "tests/test_websockets.py::test_websocket_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_port[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_text[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[asyncio]",
      "tests/test_websockets.py::test_websocket_iter_json[asyncio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[asyncio]",
      "tests/test_websockets.py::test_client_close[asyncio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[asyncio]",
      "tests/test_websockets.py::test_application_close[asyncio]",
      "tests/test_websockets.py::test_rejected_connection[asyncio]",
      "tests/test_websockets.py::test_send_denial_response[asyncio]",
      "tests/test_websockets.py::test_send_response_multi[asyncio]",
      "tests/test_websockets.py::test_send_response_unsupported[asyncio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[asyncio]",
      "tests/test_websockets.py::test_subprotocol[asyncio]",
      "tests/test_websockets.py::test_additional_headers[asyncio]",
      "tests/test_websockets.py::test_no_additional_headers[asyncio]",
      "tests/test_websockets.py::test_websocket_exception[asyncio]",
      "tests/test_websockets.py::test_duplicate_close[asyncio]",
      "tests/test_websockets.py::test_duplicate_disconnect[asyncio]",
      "tests/test_websockets.py::test_websocket_close_reason[asyncio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[asyncio]",
      "tests/test_websockets.py::test_receive_text_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_json_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_before_accept[asyncio]",
      "tests/test_websockets.py::test_send_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_receive_before_accept[asyncio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[asyncio]",
      "tests/test_websockets.py::test_websocket_url[trio]",
      "tests/test_websockets.py::test_websocket_binary_json[trio]",
      "tests/test_websockets.py::test_websocket_ensure_unicode_on_send_json[trio]",
      "tests/test_websockets.py::test_websocket_query_params[trio]",
      "tests/test_websockets.py::test_websocket_headers[trio]",
      "tests/test_websockets.py::test_websocket_port[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_text[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_bytes[trio]",
      "tests/test_websockets.py::test_websocket_send_and_receive_json[trio]",
      "tests/test_websockets.py::test_websocket_iter_text[trio]",
      "tests/test_websockets.py::test_websocket_iter_bytes[trio]",
      "tests/test_websockets.py::test_websocket_iter_json[trio]",
      "tests/test_websockets.py::test_websocket_concurrency_pattern[trio]",
      "tests/test_websockets.py::test_client_close[trio]",
      "tests/test_websockets.py::test_client_disconnect_on_send[trio]",
      "tests/test_websockets.py::test_application_close[trio]",
      "tests/test_websockets.py::test_rejected_connection[trio]",
      "tests/test_websockets.py::test_send_denial_response[trio]",
      "tests/test_websockets.py::test_send_response_multi[trio]",
      "tests/test_websockets.py::test_send_response_unsupported[trio]",
      "tests/test_websockets.py::test_send_response_duplicate_start[trio]",
      "tests/test_websockets.py::test_subprotocol[trio]",
      "tests/test_websockets.py::test_additional_headers[trio]",
      "tests/test_websockets.py::test_no_additional_headers[trio]",
      "tests/test_websockets.py::test_websocket_exception[trio]",
      "tests/test_websockets.py::test_duplicate_close[trio]",
      "tests/test_websockets.py::test_duplicate_disconnect[trio]",
      "tests/test_websockets.py::test_websocket_close_reason[trio]",
      "tests/test_websockets.py::test_send_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_json_invalid_mode[trio]",
      "tests/test_websockets.py::test_receive_text_before_accept[trio]",
      "tests/test_websockets.py::test_receive_bytes_before_accept[trio]",
      "tests/test_websockets.py::test_receive_json_before_accept[trio]",
      "tests/test_websockets.py::test_send_before_accept[trio]",
      "tests/test_websockets.py::test_send_wrong_message_type[trio]",
      "tests/test_websockets.py::test_receive_before_accept[trio]",
      "tests/test_websockets.py::test_receive_wrong_message_type[trio]",
      "tests/test_websockets.py::test_websocket_scope_interface"
    ],
    "created_at": "2025-06-19T18:37:19.610579",
    "image_name": "swesmith.x86_64.encode__starlette.db5063c2",
    "base_commit": "main",
    "problem_statement": "HTTPSRedirectMiddleware keeps redirecting to the very first host it has ever seen\n---------------------------------------------------------------------\n\nI noticed some odd redirects after upgrading: the *Location* header coming out of `HTTPSRedirectMiddleware` sticks to the hostname (and port) of the first request that hit the process, even when the next request is for a totally different host.  \nIt only happens when the same Python interpreter handles several apps/clients in the same session (e.g. test-suites, workers behind gunicorn --preload, etc.).\n\nMinimal repro\n```\nfrom starlette.applications import Starlette\nfrom starlette.middleware import Middleware\nfrom starlette.middleware.httpsredirect import HTTPSRedirectMiddleware\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route\nfrom starlette.testclient import TestClient\n\ndef homepage(request):\n    return PlainTextResponse(\"ok\")\n\napp = Starlette(\n    routes=[Route(\"/\", endpoint=homepage)],\n    middleware=[Middleware(HTTPSRedirectMiddleware)],\n)\n\n# first host ----------------------------------------------------\nclient1 = TestClient(app, base_url=\"http://first.example.com\")\nr1 = client1.get(\"/\", allow_redirects=False)\nprint(r1.status_code, r1.headers[\"location\"])\n# 307 https://first.example.com/     \u2190 good\n\n# second host ---------------------------------------------------\nclient2 = TestClient(app, base_url=\"http://second.example.com\")\nr2 = client2.get(\"/\", allow_redirects=False)\nprint(r2.status_code, r2.headers[\"location\"])\n# 307 https://first.example.com/     \u2190 still uses the *first* host\n```\n\nExpected  \n`second.example.com` should be preserved in the redirect URL:\n\n```\n307 https://second.example.com/\n```\n\nActual  \nThe middleware reuses the host (and port) from the very first request it processed:\n\n```\n307 https://first.example.com/\n```\n\nThis also shows up when you send one request to `http://mydomain.com:80/` and the next one to `http://mydomain.com:123/` \u2013 the port number of the first request is kept for all subsequent redirects.\n\nSide effects\n* Incorrect redirects when several virtual hosts run behind the same worker.\n* Test suites that create multiple `TestClient`s with different `base_url`s fail intermittently.\n* End-users might land on the wrong domain or port after an HTTP\u2192HTTPS upgrade.\n\nLet me know if you need more details, but the snippet above should reproduce the problem consistently in a fresh interpreter."
  },
  {
    "instance_id": "jd__tenacity.0d40e76f.sweagent_buggen__911c7409",
    "repo": "swesmith/jd__tenacity.0d40e76f",
    "patch": "diff --git a/tenacity/__init__.py b/tenacity/__init__.py\nindex 72eba04..6782675 100644\n--- a/tenacity/__init__.py\n+++ b/tenacity/__init__.py\n@@ -332,7 +332,7 @@ class BaseRetrying(ABC):\n             # Always create a copy to prevent overwriting the local contexts when\n             # calling the same wrapped functions multiple times in the same stack\n             copy = self.copy()\n-            wrapped_f.statistics = copy.statistics  # type: ignore[attr-defined]\n+            wrapped_f.statistics = dict(copy.statistics)  # type: ignore[attr-defined]\n             return copy(f, *args, **kw)\n \n         def retry_with(*args: t.Any, **kwargs: t.Any) -> WrappedFn:\n",
    "FAIL_TO_PASS": [
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_delay",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_attempt_number",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_no_type",
      "tests/test_tenacity.py::TestStatistics::test_stats",
      "tests/test_tenacity.py::TestStatistics::test_stats_failing"
    ],
    "PASS_TO_PASS": [
      "tests/test_after.py::TestAfterLogFormat::test_01_default",
      "tests/test_after.py::TestAfterLogFormat::test_02_custom_sec_format",
      "tests/test_asyncio.py::TestAsyncio::test_attempt_number_is_correct_for_interleaved_coroutines",
      "tests/test_asyncio.py::TestAsyncio::test_iscoroutinefunction",
      "tests/test_asyncio.py::TestAsyncio::test_repr",
      "tests/test_asyncio.py::TestAsyncio::test_retry",
      "tests/test_asyncio.py::TestAsyncio::test_retry_attributes",
      "tests/test_asyncio.py::TestAsyncio::test_retry_preserves_argument_defaults",
      "tests/test_asyncio.py::TestAsyncio::test_retry_using_async_retying",
      "tests/test_asyncio.py::TestAsyncio::test_stop_after_attempt",
      "tests/test_asyncio.py::TestContextManager::test_async_retying_iterator",
      "tests/test_asyncio.py::TestContextManager::test_do_max_attempts",
      "tests/test_asyncio.py::TestContextManager::test_reraise",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_exc",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_and",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_or",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_rand",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_ror",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_result",
      "tests/test_asyncio.py::TestContextManager::test_sleeps",
      "tests/test_asyncio.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_issue_478.py::TestIssue478::test_async",
      "tests/test_issue_478.py::TestIssue478::test_issue",
      "tests/test_tenacity.py::TestBase::test_callstate_repr",
      "tests/test_tenacity.py::TestBase::test_retrying_repr",
      "tests/test_tenacity.py::TestStopConditions::test_legacy_explicit_stop_type",
      "tests/test_tenacity.py::TestStopConditions::test_never_stop",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_attempt",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_all",
      "tests/test_tenacity.py::TestStopConditions::test_stop_and",
      "tests/test_tenacity.py::TestStopConditions::test_stop_any",
      "tests/test_tenacity.py::TestStopConditions::test_stop_before_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_func_with_retry_state",
      "tests/test_tenacity.py::TestStopConditions::test_stop_or",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_andmax__wait",
      "tests/test_tenacity.py::TestWaitConditions::test_fixed_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_incrementing_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_legacy_explicit_wait_type",
      "tests/test_tenacity.py::TestWaitConditions::test_no_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep_withoutmin_",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_arbitrary_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain_multiple_invocations",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_combine",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_double_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_exponential_jitter",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_func",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential_statistically",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_retry_state_attributes",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_triple_sum",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_all",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_and",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_any",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_no_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_too_many_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_not_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_or",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever_reraise",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_except_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_object",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_cause_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_preserves_argument_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_wrong_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_return_value",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_stop",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_cls_should_be_preserved",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_callback_should_be_preserved",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_after_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises_with_exc_info",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns_with_exc_info",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_by_default",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_from_retry_error",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_no_exception",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_timeout_from_retry_error",
      "tests/test_tenacity.py::TestRetryErrorCallback::test_retry_error_callback",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_on_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_reraise",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_on_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_reraise",
      "tests/test_tenacity.py::TestRetryException::test_retry_error_is_pickleable",
      "tests/test_tenacity.py::TestRetryTyping::test_retry_type_annotations",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated_retry_with",
      "tests/test_tornado.py::TestTornado::test_old_tornado",
      "tests/test_tornado.py::TestTornado::test_repr",
      "tests/test_tornado.py::TestTornado::test_retry",
      "tests/test_tornado.py::TestTornado::test_stop_after_attempt",
      "tests/test_utils.py::test_is_coroutine_callable"
    ],
    "created_at": "2025-06-19T18:37:23.707276",
    "image_name": "swesmith.x86_64.jd__tenacity.0d40e76f",
    "base_commit": "main",
    "problem_statement": "`statistics` dict of a `@retry`-decorated function stays empty  \n--------------------------------------------------------------------\n\nHi there, I think I just ran into a regression in the latest commit on **main** (commit 6782675).\n\nWhat I was doing\n----------------\n\n```python\nimport tenacity\nfrom tenacity import retry, stop_after_attempt\n\n# 1) A function that **fails** twice\n@retry(stop=stop_after_attempt(2))\ndef boom():\n    raise RuntimeError(\"kaboom\")\n\n# 2) A function that **succeeds** immediately\n@retry()\ndef ok():\n    return 42\n\n# call them\ntry:\n    boom()\nexcept RuntimeError:\n    pass\n\nok()\n\nprint(\"boom statistics:\", boom.statistics)\nprint(\"ok   statistics:\", ok.statistics)\n```\n\nWhat I expected\n\n```\nboom statistics: {'attempt_number': 2, ...}\nok   statistics: {'attempt_number': 1, ...}\n```\n\nWhat actually happened\n\n```\nboom statistics: {}\nok   statistics: {}\n```\n\n`attempt_number` (and the rest of the bookkeeping) never shows up anymore \u2013 the dictionary stays completely empty, so accessing `boom.statistics['attempt_number']` now raises `KeyError`.\n\nWhy it matters\n--------------\n\nThe `statistics` dict is very handy for logging, metrics, and in a couple of our internal helpers that decide what to do after a retry loop. With the current behaviour those helpers crash or silently receive incorrect information.\n\nReproduced on\n-------------\n\n* tenacity == 8.3.0+git (commit 6782675)\n* Python 3.10.15\n* macOS 14 / Ubuntu 22.04\n\nRolling back to the previous commit (72eba04) restores the expected behaviour.\n\nThanks for having a look!"
  },
  {
    "instance_id": "google__textfsm.c31b6007.sweagent_buggen__61b1aaf6",
    "repo": "swesmith/google__textfsm.c31b6007",
    "patch": "diff --git a/textfsm/parser.py b/textfsm/parser.py\nindex c00c976..50b2b4f 100755\n--- a/textfsm/parser.py\n+++ b/textfsm/parser.py\n@@ -204,7 +204,7 @@ class TextFSMOptions(object):\n       self._value = []\n \n     def OnSaveRecord(self):\n-      self.value.value = list(self._value)\n+      self.value.value = self._value\n \n \n class TextFSMValue(object):\n",
    "FAIL_TO_PASS": [
      "tests/textfsm_test.py::UnitTestFSM::testList"
    ],
    "PASS_TO_PASS": [
      "tests/clitable_test.py::UnitTestIndexTable::testCopy",
      "tests/clitable_test.py::UnitTestIndexTable::testGetRowMatch",
      "tests/clitable_test.py::UnitTestIndexTable::testParseIndex",
      "tests/clitable_test.py::UnitTestCliTable::testAddKey",
      "tests/clitable_test.py::UnitTestCliTable::testCliCompile",
      "tests/clitable_test.py::UnitTestCliTable::testCompletion",
      "tests/clitable_test.py::UnitTestCliTable::testCopy",
      "tests/clitable_test.py::UnitTestCliTable::testKeyValue",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmd",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdFromIndex",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdItem",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithMultiTemplates",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithTemplate",
      "tests/clitable_test.py::UnitTestCliTable::testRepeatRead",
      "tests/clitable_test.py::UnitTestCliTable::testRequireCols",
      "tests/clitable_test.py::UnitTestCliTable::testSuperKey",
      "tests/clitable_test.py::UnitTestCliTable::testTableSort",
      "tests/terminal_test.py::TerminalTest::testAnsiCmd",
      "tests/terminal_test.py::TerminalTest::testAnsiText",
      "tests/terminal_test.py::TerminalTest::testEncloseAnsi",
      "tests/terminal_test.py::TerminalTest::testIssue1",
      "tests/terminal_test.py::TerminalTest::testLineWrap",
      "tests/terminal_test.py::TerminalTest::testStripAnsi",
      "tests/terminal_test.py::PagerTest::testPage",
      "tests/terminal_test.py::PagerTest::testPager",
      "tests/textfsm_test.py::UnitTestFSM::testClear",
      "tests/textfsm_test.py::UnitTestFSM::testContinue",
      "tests/textfsm_test.py::UnitTestFSM::testEOF",
      "tests/textfsm_test.py::UnitTestFSM::testEnd",
      "tests/textfsm_test.py::UnitTestFSM::testError",
      "tests/textfsm_test.py::UnitTestFSM::testFSMRule",
      "tests/textfsm_test.py::UnitTestFSM::testFSMValue",
      "tests/textfsm_test.py::UnitTestFSM::testFillup",
      "tests/textfsm_test.py::UnitTestFSM::testGetValuesByAttrib",
      "tests/textfsm_test.py::UnitTestFSM::testImplicitDefaultRules",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidStates",
      "tests/textfsm_test.py::UnitTestFSM::testKey",
      "tests/textfsm_test.py::UnitTestFSM::testNestedMatching",
      "tests/textfsm_test.py::UnitTestFSM::testNestedNameConflict",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMState",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMVariables",
      "tests/textfsm_test.py::UnitTestFSM::testParseNullText",
      "tests/textfsm_test.py::UnitTestFSM::testParseText",
      "tests/textfsm_test.py::UnitTestFSM::testParseTextToDicts",
      "tests/textfsm_test.py::UnitTestFSM::testReEnteringState",
      "tests/textfsm_test.py::UnitTestFSM::testReset",
      "tests/textfsm_test.py::UnitTestFSM::testRulePrefixes",
      "tests/textfsm_test.py::UnitTestFSM::testRuleStartsWithCarrot",
      "tests/textfsm_test.py::UnitTestFSM::testSpacesAroundAction",
      "tests/textfsm_test.py::UnitTestFSM::testStateChange",
      "tests/textfsm_test.py::UnitTestFSM::testTextFSM",
      "tests/textfsm_test.py::UnitTestFSM::testValidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testValidateFSM",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMRule",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMValue",
      "tests/textfsm_test.py::UnitTestUnicode::testTemplateValue",
      "tests/texttable_test.py::UnitTestRow::testHeader",
      "tests/texttable_test.py::UnitTestRow::testIndex",
      "tests/texttable_test.py::UnitTestRow::testRowBasicMethods",
      "tests/texttable_test.py::UnitTestRow::testRowPublicMethods",
      "tests/texttable_test.py::UnitTestRow::testSetValues",
      "tests/texttable_test.py::UnitTestRow::testValue",
      "tests/texttable_test.py::UnitTestTextTable::testAddColumn",
      "tests/texttable_test.py::UnitTestTextTable::testAddTable",
      "tests/texttable_test.py::UnitTestTextTable::testAppend",
      "tests/texttable_test.py::UnitTestTextTable::testContains",
      "tests/texttable_test.py::UnitTestTextTable::testCsvToTable",
      "tests/texttable_test.py::UnitTestTextTable::testCustomRow",
      "tests/texttable_test.py::UnitTestTextTable::testDeleteRow",
      "tests/texttable_test.py::UnitTestTextTable::testExtendTable",
      "tests/texttable_test.py::UnitTestTextTable::testFilter",
      "tests/texttable_test.py::UnitTestTextTable::testFilterNone",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable2",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColor",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredCells",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredHeaders",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredMultilineCells",
      "tests/texttable_test.py::UnitTestTextTable::testHeaderIndex",
      "tests/texttable_test.py::UnitTestTextTable::testIteration",
      "tests/texttable_test.py::UnitTestTextTable::testMap",
      "tests/texttable_test.py::UnitTestTextTable::testRowNumberandParent",
      "tests/texttable_test.py::UnitTestTextTable::testSmallestColSize",
      "tests/texttable_test.py::UnitTestTextTable::testSortTable",
      "tests/texttable_test.py::UnitTestTextTable::testTableGetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableRepr",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowDictWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowListWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowTypes",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowWith",
      "tests/texttable_test.py::UnitTestTextTable::testTableSetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableStr",
      "tests/texttable_test.py::UnitTestTextTable::testTableWithLabels",
      "tests/texttable_test.py::UnitTestTextTable::testTextJustify"
    ],
    "created_at": "2025-06-19T18:37:21.768385",
    "image_name": "swesmith.x86_64.google__textfsm.c31b6007",
    "base_commit": "main",
    "problem_statement": "List values \u201cbleed\u201d into later records  \nAfter pulling the latest commit, records that contain a `Value List \u2026` field are no longer independent.  \nOnce a value is appended in an early record it keeps turning up in every following record of the same\ntemplate.\n\nSteps (small self-contained sample)\n```\npython\nimport io, textfsm\n\ntplt = '''\nValue List num (\\\\d+)\n\nStart\n  ^${num} -> Next.Record\n\nEOF\n'''\nfsm = textfsm.TextFSM(io.StringIO(tplt))\n\ndata = '1\\n2\\n3\\n'\nprint(fsm.ParseText(data))\n```\n\nExpected  \n```\n[[['1']], [['2']], [['3']]]\n```\n\nActual (after the above commit)  \n```\n[[['1', '2', '3']], [['1', '2', '3']], [['1', '2', '3']]]\n# order may vary \u2013 key point is that each record now shares the same list\n```\n\nThe same \u201clist carry-over\u201d can be observed with more complex templates, e.g.\n\n```\nValue List alpha (on.)\nValue beta (tw.)\n\nStart\n  ^$alpha\n  ^$beta -> Next.Record\n\nEOF\n```\n\nwhere the first field of the second record suddenly contains both lines from the first and second\nrecords.\n\nThe issue appears only with list-style variables; non-list variables behave normally.  \nRolling back to the previous revision restores the expected, isolated behaviour."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__35de3926",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..7be7a8c 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -771,7 +771,7 @@ class QueryBuilder(Selectable, Term):\n         newone._selects = copy(self._selects)\n         newone._columns = copy(self._columns)\n         newone._values = copy(self._values)\n-        newone._groupbys = copy(self._groupbys)\n+        newone._groupbys = self._groupbys if self._groupbys else copy(self._groupbys)\n         newone._orderbys = copy(self._orderbys)\n         newone._joins = copy(self._joins)\n         newone._unions = copy(self._unions)\n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:24.549717",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "groupby() no longer returns a fresh Query object  \nDescription\n\nRepro (simplified):\n\n```python\nfrom pypika import Query, Table\n\ntbl = Table(\"music\")\nq1 = Query.from_(tbl).select(tbl.artist).groupby(tbl.artist)\nq2 = q1.groupby(tbl.album)\n\nprint(q1 is q2)          # \u2192 ??\nprint(str(q1))\nprint(str(q2))\n```\n\nCurrent result with 0.48.1 (and current `main`):\n\n```\nTrue\nSELECT \"artist\"\nFROM \"music\"\nGROUP BY \"artist\",\"album\"\nSELECT \"artist\"\nFROM \"music\"\nGROUP BY \"artist\",\"album\"\n```\n\nWhat I expected:\n\n```\nFalse\nSELECT \"artist\"\nFROM \"music\"\nGROUP BY \"artist\"\nSELECT \"artist\"\nFROM \"music\"\nGROUP BY \"artist\",\"album\"\n```\n\nThe first `print` should be `False`; today it\u2019s `True`, and the original query has its GROUP BY clause silently extended in-place. This breaks the immutability promise that most builder helpers (select(), where(), limit(), etc.) still honour.\n\nIt feels like something in the cloning logic of QueryBuilder lost the defensive copy for `_groupbys`. Other attributes appear untouched \u2013 only successive calls to `groupby()` are leaking into previously materialised queries.\n\nEnvironment\n\u2022 python 3.11.6  \n\u2022 pypika 0.48.1 (commit 9b9d5e7, 2024-06-11)  \n\u2022 OS: macOS 14 / Ubuntu 22 (same behaviour)\n\nWould be great to get the copy-on-write behaviour back \u2013 it\u2019s relied on heavily when composing queries dynamically."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__8a8ccc15",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..f6974c8 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -768,7 +768,10 @@ class QueryBuilder(Selectable, Term):\n         newone._select_star_tables = copy(self._select_star_tables)\n         newone._from = copy(self._from)\n         newone._with = copy(self._with)\n-        newone._selects = copy(self._selects)\n+        if len(self._selects) == 1:\n+            newone._selects = self._selects\n+        else:\n+            newone._selects = copy(self._selects)\n         newone._columns = copy(self._columns)\n         newone._values = copy(self._values)\n         newone._groupbys = copy(self._groupbys)\n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:26.057733",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "Title\n`select()` is no longer immutable when the query only contains a single column\n\nDescription  \nA query that used to behave immutably is now being mutated in-place as soon as it contained exactly one projection.  \nThis breaks the (very handy) pattern of creating a base query and then branching off specialised variants.\n\nSteps / Code to Reproduce\n```python\nfrom pypika import Query, Table\n\na = Table(\"a\")\nb = Table(\"b\")\n\n# base query\nq1 = Query.from_(a).select(a.foo)\n\n# derived query\nq2 = q1.select(a.bar)\n\nprint(\"q1:\", str(q1))\nprint(\"q2:\", str(q2))\n```\n\nExpected result\n```\nq1: SELECT \"foo\" FROM \"a\"\nq2: SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\n```\n\nActual result\n```\nq1: SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\nq2: SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\n```\n`q1` is modified even though I never touched it after construction, i.e. `q1 is q2` is `False` but the rendered SQL is identical.  \nThe same thing happens when composing queries with `join()`:\n\n```python\nq_base   = Query.from_(a).select(a.foo)\nq_joined = q_base.join(b).on(a.foo == b.bar).select(b.buz)\n\nprint(\"base :\", str(q_base))\nprint(\"joined:\", str(q_joined))\n```\n\nThe `base` query unexpectedly shows the join and extra column.\n\nEnvironment\npypika master (commit  \u2026f6974c8)  \nPython 3.10.15 on Linux\n\nNotes  \nRolling back to the previous commit restores the old (immutable) behaviour, so the regression seems recent."
  },
  {
    "instance_id": "jd__tenacity.0d40e76f.sweagent_buggen__d39dcbfe",
    "repo": "swesmith/jd__tenacity.0d40e76f",
    "patch": "diff --git a/tenacity/__init__.py b/tenacity/__init__.py\nindex 72eba04..d2426d4 100644\n--- a/tenacity/__init__.py\n+++ b/tenacity/__init__.py\n@@ -257,7 +257,7 @@ class BaseRetrying(ABC):\n         ] = _unset,\n     ) -> \"BaseRetrying\":\n         \"\"\"Copy this object with some parameters changed if needed.\"\"\"\n-        return self.__class__(\n+        new_retry = self.__class__(\n             sleep=_first_set(sleep, self.sleep),\n             stop=_first_set(stop, self.stop),\n             wait=_first_set(wait, self.wait),\n@@ -271,6 +271,8 @@ class BaseRetrying(ABC):\n                 retry_error_callback, self.retry_error_callback\n             ),\n         )\n+        new_retry._local = self._local  # type: ignore[attr-defined]\n+        return new_retry\n \n     def __repr__(self) -> str:\n         return (\n",
    "FAIL_TO_PASS": [
      "tests/test_asyncio.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_issue_478.py::TestIssue478::test_async",
      "tests/test_issue_478.py::TestIssue478::test_issue",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_attributes"
    ],
    "PASS_TO_PASS": [
      "tests/test_after.py::TestAfterLogFormat::test_01_default",
      "tests/test_after.py::TestAfterLogFormat::test_02_custom_sec_format",
      "tests/test_asyncio.py::TestAsyncio::test_attempt_number_is_correct_for_interleaved_coroutines",
      "tests/test_asyncio.py::TestAsyncio::test_iscoroutinefunction",
      "tests/test_asyncio.py::TestAsyncio::test_repr",
      "tests/test_asyncio.py::TestAsyncio::test_retry",
      "tests/test_asyncio.py::TestAsyncio::test_retry_attributes",
      "tests/test_asyncio.py::TestAsyncio::test_retry_preserves_argument_defaults",
      "tests/test_asyncio.py::TestAsyncio::test_retry_using_async_retying",
      "tests/test_asyncio.py::TestAsyncio::test_stop_after_attempt",
      "tests/test_asyncio.py::TestContextManager::test_async_retying_iterator",
      "tests/test_asyncio.py::TestContextManager::test_do_max_attempts",
      "tests/test_asyncio.py::TestContextManager::test_reraise",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_exc",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_and",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_or",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_rand",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_ror",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_result",
      "tests/test_asyncio.py::TestContextManager::test_sleeps",
      "tests/test_tenacity.py::TestBase::test_callstate_repr",
      "tests/test_tenacity.py::TestBase::test_retrying_repr",
      "tests/test_tenacity.py::TestStopConditions::test_legacy_explicit_stop_type",
      "tests/test_tenacity.py::TestStopConditions::test_never_stop",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_attempt",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_all",
      "tests/test_tenacity.py::TestStopConditions::test_stop_and",
      "tests/test_tenacity.py::TestStopConditions::test_stop_any",
      "tests/test_tenacity.py::TestStopConditions::test_stop_before_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_func_with_retry_state",
      "tests/test_tenacity.py::TestStopConditions::test_stop_or",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_andmax__wait",
      "tests/test_tenacity.py::TestWaitConditions::test_fixed_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_incrementing_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_legacy_explicit_wait_type",
      "tests/test_tenacity.py::TestWaitConditions::test_no_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep_withoutmin_",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_arbitrary_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain_multiple_invocations",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_combine",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_double_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_exponential_jitter",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_func",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential_statistically",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_retry_state_attributes",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_triple_sum",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_all",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_and",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_any",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_no_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_too_many_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_not_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_or",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever_reraise",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_except_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_object",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_cause_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_delay",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_preserves_argument_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_attempt_number",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_no_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_wrong_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_return_value",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_stop",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_cls_should_be_preserved",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_callback_should_be_preserved",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_after_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises_with_exc_info",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns_with_exc_info",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_by_default",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_from_retry_error",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_no_exception",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_timeout_from_retry_error",
      "tests/test_tenacity.py::TestStatistics::test_stats",
      "tests/test_tenacity.py::TestStatistics::test_stats_failing",
      "tests/test_tenacity.py::TestRetryErrorCallback::test_retry_error_callback",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_on_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_reraise",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_on_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_reraise",
      "tests/test_tenacity.py::TestRetryException::test_retry_error_is_pickleable",
      "tests/test_tenacity.py::TestRetryTyping::test_retry_type_annotations",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated_retry_with",
      "tests/test_tornado.py::TestTornado::test_old_tornado",
      "tests/test_tornado.py::TestTornado::test_repr",
      "tests/test_tornado.py::TestTornado::test_retry",
      "tests/test_tornado.py::TestTornado::test_stop_after_attempt",
      "tests/test_utils.py::test_is_coroutine_callable"
    ],
    "created_at": "2025-06-19T18:37:23.999541",
    "image_name": "swesmith.x86_64.jd__tenacity.0d40e76f",
    "base_commit": "main",
    "problem_statement": "Statistics leak after calling `retry.copy()` \u2013 copied instance shares internal state with the original  \n\n**Describe the bug**  \nCopying a `Retrying` / `AsyncRetrying` (e.g. via `my_retrying.copy(stop=...)` or by using `retry_with(...)` on a decorator) unexpectedly links the new object to the internal bookkeeping of the original.  \nAfter the first call you will find that:\n\n* `retry.statistics` of *both* the original and the copy now refer to the *latest* invocation, no matter which instance performed it;\n* mutating attributes on the copy (e.g. replacing the `stop` strategy during a test) can influence the behaviour of the original wrapper;\n* in multi-thread / multi-coroutine situations the data belonging to two independent retries can collide.\n\nThis is a fairly recent change \u2013 the same code behaved correctly on 8.3.0 but not on current `main`.\n\n**Reproduction**  \n```python\nimport tenacity\nfrom tenacity import stop_after_attempt, RetryError\n\n# a base retry wrapper ---------------------------------------------------------\nbase_retry = tenacity.Retrying(stop=stop_after_attempt(3))\n\n@tenacity.retry(reraise=True, retry=tenacity.retry_if_exception_type(), stop=stop_after_attempt(3))\ndef unreliable(value):\n    if value < 3:\n        raise ValueError(\"nope\")\n    return value\n\n\n# make an independent copy with a *different* stop condition -------------------\npatched_retry = base_retry.copy(stop=stop_after_attempt(1))\n\n# run through the base instance\ntry:\n    base_retry.call(unreliable, 0)\nexcept RetryError:\n    pass\n\nprint(\"base statistics:\", base_retry.statistics)\nprint(\"patched statistics (should be empty):\", patched_retry.statistics)\n\n# now mutate the copied retry and ensure it does not alter the original --------\npatched_retry.stop = stop_after_attempt(5)\npatched_retry.call(unreliable, 0)\n\nprint(\"base stop condition should still be 3 attempts:\",\n      base_retry.stop)\n```\n\nObserved output (abridged):\n\n```\nbase statistics: {'attempt_number': 3, ...}\npatched statistics (should be empty): {'attempt_number': 3, ...}   # <-- leaked\nbase stop condition should still be 3 attempts: stop_after_attempt(5)  # <-- mutated!\n```\n\n**Expected behavior**  \n1. `patched_retry.statistics` should be `{}` until *it* is used.  \n2. Changing `patched_retry.stop` must not modify `base_retry.stop`.  \n3. Two independent copies are supposed to maintain completely separate thread-local data.\n\n**Environment**  \n\u2022 tenacity current `main` (commit after 8.3.0)  \n\u2022 Python 3.10 / 3.11  \n\u2022 Reproduced on Linux and macOS\n\n---  \nThis issue makes it difficult to use `copy()`/`retry_with()` for test isolation or dynamic tweaking in production."
  },
  {
    "instance_id": "jd__tenacity.0d40e76f.sweagent_buggen__ff03ca8f",
    "repo": "swesmith/jd__tenacity.0d40e76f",
    "patch": "diff --git a/tenacity/wait.py b/tenacity/wait.py\nindex dc3c850..ba99e9f 100644\n--- a/tenacity/wait.py\n+++ b/tenacity/wait.py\n@@ -110,7 +110,10 @@ class wait_chain(wait_base):\n     def __call__(self, retry_state: \"RetryCallState\") -> float:\n         wait_func_no = min(max(retry_state.attempt_number, 1), len(self.strategies))\n         wait_func = self.strategies[wait_func_no - 1]\n-        return wait_func(retry_state=retry_state)\n+        result = wait_func(retry_state=retry_state)\n+        if len(self.strategies) > 1:\n+            self.strategies = self.strategies[1:] + (self.strategies[0],)\n+        return result\n \n \n class wait_incrementing(wait_base):\n",
    "FAIL_TO_PASS": [
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain_multiple_invocations"
    ],
    "PASS_TO_PASS": [
      "tests/test_after.py::TestAfterLogFormat::test_01_default",
      "tests/test_after.py::TestAfterLogFormat::test_02_custom_sec_format",
      "tests/test_asyncio.py::TestAsyncio::test_attempt_number_is_correct_for_interleaved_coroutines",
      "tests/test_asyncio.py::TestAsyncio::test_iscoroutinefunction",
      "tests/test_asyncio.py::TestAsyncio::test_repr",
      "tests/test_asyncio.py::TestAsyncio::test_retry",
      "tests/test_asyncio.py::TestAsyncio::test_retry_attributes",
      "tests/test_asyncio.py::TestAsyncio::test_retry_preserves_argument_defaults",
      "tests/test_asyncio.py::TestAsyncio::test_retry_using_async_retying",
      "tests/test_asyncio.py::TestAsyncio::test_stop_after_attempt",
      "tests/test_asyncio.py::TestContextManager::test_async_retying_iterator",
      "tests/test_asyncio.py::TestContextManager::test_do_max_attempts",
      "tests/test_asyncio.py::TestContextManager::test_reraise",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_exc",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_and",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_or",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_rand",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_ror",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_result",
      "tests/test_asyncio.py::TestContextManager::test_sleeps",
      "tests/test_asyncio.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_issue_478.py::TestIssue478::test_async",
      "tests/test_issue_478.py::TestIssue478::test_issue",
      "tests/test_tenacity.py::TestBase::test_callstate_repr",
      "tests/test_tenacity.py::TestBase::test_retrying_repr",
      "tests/test_tenacity.py::TestStopConditions::test_legacy_explicit_stop_type",
      "tests/test_tenacity.py::TestStopConditions::test_never_stop",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_attempt",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_all",
      "tests/test_tenacity.py::TestStopConditions::test_stop_and",
      "tests/test_tenacity.py::TestStopConditions::test_stop_any",
      "tests/test_tenacity.py::TestStopConditions::test_stop_before_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_func_with_retry_state",
      "tests/test_tenacity.py::TestStopConditions::test_stop_or",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_andmax__wait",
      "tests/test_tenacity.py::TestWaitConditions::test_fixed_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_incrementing_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_legacy_explicit_wait_type",
      "tests/test_tenacity.py::TestWaitConditions::test_no_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep_withoutmin_",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_arbitrary_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_combine",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_double_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_exponential_jitter",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_func",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential_statistically",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_retry_state_attributes",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_triple_sum",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_all",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_and",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_any",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_no_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_too_many_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_not_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_or",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever_reraise",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_except_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_object",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_cause_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_delay",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_preserves_argument_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_attempt_number",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_no_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_wrong_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_return_value",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_stop",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_cls_should_be_preserved",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_callback_should_be_preserved",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_after_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises_with_exc_info",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns_with_exc_info",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_by_default",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_from_retry_error",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_no_exception",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_timeout_from_retry_error",
      "tests/test_tenacity.py::TestStatistics::test_stats",
      "tests/test_tenacity.py::TestStatistics::test_stats_failing",
      "tests/test_tenacity.py::TestRetryErrorCallback::test_retry_error_callback",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_on_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_reraise",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_on_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_reraise",
      "tests/test_tenacity.py::TestRetryException::test_retry_error_is_pickleable",
      "tests/test_tenacity.py::TestRetryTyping::test_retry_type_annotations",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated_retry_with",
      "tests/test_tornado.py::TestTornado::test_old_tornado",
      "tests/test_tornado.py::TestTornado::test_repr",
      "tests/test_tornado.py::TestTornado::test_retry",
      "tests/test_tornado.py::TestTornado::test_stop_after_attempt",
      "tests/test_utils.py::test_is_coroutine_callable"
    ],
    "created_at": "2025-06-19T18:37:24.275912",
    "image_name": "swesmith.x86_64.jd__tenacity.0d40e76f",
    "base_commit": "main",
    "problem_statement": "[bug] wait_chain \u201cshuffles\u201d its strategy after the first call  \nPretty sure this is brand-new \u2013 I only noticed it after upgrading this morning.\n\n#### MCVE\n\n```python\nimport tenacity\n\nsleep_log = []\n\nr = tenacity.Retrying(\n    stop=tenacity.stop_after_attempt(5),\n    retry=tenacity.retry_if_result(lambda x: x == 1),\n    wait=tenacity.wait_chain(\n        tenacity.wait_fixed(1),\n        tenacity.wait_fixed(2),\n        tenacity.wait_fixed(3),\n    ),\n    sleep=sleep_log.append,       # record the effective waits\n)\n\n@r.wraps\ndef always_one():\n    return 1\n\n\n# first run\ntry:\n    always_one()\nexcept tenacity.RetryError:\n    pass\nfirst = list(sleep_log)\n\nsleep_log[:] = []                # reset\n\n# second run \u2013 should behave identically\ntry:\n    always_one()\nexcept tenacity.RetryError:\n    pass\nsecond = list(sleep_log)\n\nprint(\"first run :\", first)\nprint(\"second run:\", second)\n```\n\n#### Observed output (8.3.x)\n\n```\nfirst run :  [1.0, 2.0, 3.0, 3.0]\nsecond run:  [1.0, 2.0, 3.0, 1.0]   # \u2190 the pattern restarted instead of sticking to 3\n```\n\n#### Expected output (8.2.x and earlier)\n\n```\nfirst run :  [1.0, 2.0, 3.0, 3.0]\nsecond run:  [1.0, 2.0, 3.0, 3.0]\n```\n\n#### Why this matters\n`wait_chain` is supposed to be a *static* sequence that ends with the last element being reused forever.  \nAfter the upgrade the internal order seems to rotate on every call, so subsequent invocations of the *same* `Retrying` object \u2013 or simply calling `wait_chain` directly \u2013 no longer follow the documented contract.\n\nSide effects I have encountered:\n* exponential back-off chains that never actually \u201cback off\u201d after the second try,\n* unit tests relying on deterministic wait patterns suddenly failing.\n\n#### Environment\n\n```\npython: 3.11.6\ntenacity: 8.3.0 (problem appears), 8.2.2 (works)\nOS: macOS 14.2 / Ubuntu 22.04 (same behaviour)\n```\n\nWould appreciate a look \u2013 happy to test a patch if one lands on main."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__d5d40aec",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..937ff7f 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -773,7 +773,10 @@ class QueryBuilder(Selectable, Term):\n         newone._values = copy(self._values)\n         newone._groupbys = copy(self._groupbys)\n         newone._orderbys = copy(self._orderbys)\n-        newone._joins = copy(self._joins)\n+        if len(self._joins) == 0:\n+            newone._joins = self._joins\n+        else:\n+            newone._joins = copy(self._joins)\n         newone._unions = copy(self._unions)\n         newone._updates = copy(self._updates)\n         newone._force_indexes = copy(self._force_indexes)\n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:26.921486",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "Regression: cloning a query and adding a JOIN mutates the original query\n\n### Description\n\nSince upgrading to the latest `main` I\u2019m running into a surprising side-effect:  \nbuilding a new query from an existing one and adding a `join()` suddenly alters the first query as well. This breaks code that re-uses a \u201cbase\u201d query template.\n\n### Steps / Code to Reproduce\n\n```python\nfrom pypika import Query, Table\n\na = Table(\"a\")\nb = Table(\"b\")\n\n# base query\nq1 = Query.from_(a).select(a.foo)\n\n# derived query with an extra JOIN\nq2 = q1.join(b).on(a.foo == b.bar).select(b.buz)\n\nprint(\"q1:\", str(q1))\nprint(\"q2:\", str(q2))\n```\n\nOutput I see now:\n\n```\nq1: SELECT \"a\".\"foo\",\"b\".\"buz\" FROM \"a\" JOIN \"b\" ON \"a\".\"foo\"=\"b\".\"bar\"\nq2: SELECT \"a\".\"foo\",\"b\".\"buz\" FROM \"a\" JOIN \"b\" ON \"a\".\"foo\"=\"b\".\"bar\"\n```\n\nExpected output (what we had before):\n\n```\nq1: SELECT \"foo\" FROM \"a\"\nq2: SELECT \"a\".\"foo\",\"b\".\"buz\" FROM \"a\" JOIN \"b\" ON \"a\".\"foo\"=\"b\".\"bar\"\n```\n\nSo `q1` is unintentionally picking up the join from `q2`.\n\n### Environment\n\npypika: current `main` (commit after 1.15.0)  \nPython: 3.10.13  \nOS: Ubuntu 22.04 (x86_64)\n\nLet me know if you need more details."
  },
  {
    "instance_id": "google__textfsm.c31b6007.sweagent_buggen__3bd757a4",
    "repo": "swesmith/google__textfsm.c31b6007",
    "patch": "diff --git a/patch_change_marker.txt b/patch_change_marker.txt\nnew file mode 100644\nindex 0000000..dbcae14\n--- /dev/null\n+++ b/patch_change_marker.txt\n@@ -0,0 +1 @@\n+patch\n\\ No newline at end of file\ndiff --git a/textfsm/parser.py b/textfsm/parser.py\nindex c00c976..f7987d8 100755\n--- a/textfsm/parser.py\n+++ b/textfsm/parser.py\n@@ -204,7 +204,7 @@ class TextFSMOptions(object):\n       self._value = []\n \n     def OnSaveRecord(self):\n-      self.value.value = list(self._value)\n+      self.value.value = self._value\n \n \n class TextFSMValue(object):\n@@ -528,6 +528,12 @@ class TextFSMRule(object):\n   def __str__(self):\n     \"\"\"Prints out the FSM Rule, mimic the input file.\"\"\"\n \n+    if not hasattr(TextFSM, \"_rule_str_cache\"):\n+      TextFSM._rule_str_cache = {}\n+    cache_key = (self.match, self.line_op, self.record_op, self.new_state)\n+    if cache_key in TextFSM._rule_str_cache:\n+      return TextFSM._rule_str_cache[cache_key]\n+\n     operation = ''\n     if self.line_op and self.record_op:\n       operation = '.'\n@@ -544,6 +550,7 @@ class TextFSMRule(object):\n       return '  %s' % self.match\n \n     # Non defaults.\n+\n     return '  %s -> %s%s' % (self.match, operation, new_state)\n \n \n@@ -598,6 +605,7 @@ class TextFSM(object):\n \n     for state in self.state_list:\n       result += '\\n%s\\n' % state\n+\n       state_rules = '\\n'.join([str(rule) for rule in self.states[state]])\n       if state_rules:\n         result += state_rules + '\\n'\n@@ -612,7 +620,10 @@ class TextFSM(object):\n     self._cur_state_name = 'Start'\n \n     # Clear table of results and current record.\n-    self._result = []\n+    if hasattr(self, \"_result\"):\n+      self._result.clear()\n+    else:\n+      self._result = []\n     self._ClearAllRecord()\n \n   @property\n",
    "FAIL_TO_PASS": [
      "tests/textfsm_test.py::UnitTestFSM::testList"
    ],
    "PASS_TO_PASS": [
      "tests/clitable_test.py::UnitTestIndexTable::testCopy",
      "tests/clitable_test.py::UnitTestIndexTable::testGetRowMatch",
      "tests/clitable_test.py::UnitTestIndexTable::testParseIndex",
      "tests/clitable_test.py::UnitTestCliTable::testAddKey",
      "tests/clitable_test.py::UnitTestCliTable::testCliCompile",
      "tests/clitable_test.py::UnitTestCliTable::testCompletion",
      "tests/clitable_test.py::UnitTestCliTable::testCopy",
      "tests/clitable_test.py::UnitTestCliTable::testKeyValue",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmd",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdFromIndex",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdItem",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithMultiTemplates",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithTemplate",
      "tests/clitable_test.py::UnitTestCliTable::testRepeatRead",
      "tests/clitable_test.py::UnitTestCliTable::testRequireCols",
      "tests/clitable_test.py::UnitTestCliTable::testSuperKey",
      "tests/clitable_test.py::UnitTestCliTable::testTableSort",
      "tests/terminal_test.py::TerminalTest::testAnsiCmd",
      "tests/terminal_test.py::TerminalTest::testAnsiText",
      "tests/terminal_test.py::TerminalTest::testEncloseAnsi",
      "tests/terminal_test.py::TerminalTest::testIssue1",
      "tests/terminal_test.py::TerminalTest::testLineWrap",
      "tests/terminal_test.py::TerminalTest::testStripAnsi",
      "tests/terminal_test.py::PagerTest::testPage",
      "tests/terminal_test.py::PagerTest::testPager",
      "tests/textfsm_test.py::UnitTestFSM::testClear",
      "tests/textfsm_test.py::UnitTestFSM::testContinue",
      "tests/textfsm_test.py::UnitTestFSM::testEOF",
      "tests/textfsm_test.py::UnitTestFSM::testEnd",
      "tests/textfsm_test.py::UnitTestFSM::testError",
      "tests/textfsm_test.py::UnitTestFSM::testFSMRule",
      "tests/textfsm_test.py::UnitTestFSM::testFSMValue",
      "tests/textfsm_test.py::UnitTestFSM::testFillup",
      "tests/textfsm_test.py::UnitTestFSM::testGetValuesByAttrib",
      "tests/textfsm_test.py::UnitTestFSM::testImplicitDefaultRules",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidStates",
      "tests/textfsm_test.py::UnitTestFSM::testKey",
      "tests/textfsm_test.py::UnitTestFSM::testNestedMatching",
      "tests/textfsm_test.py::UnitTestFSM::testNestedNameConflict",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMState",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMVariables",
      "tests/textfsm_test.py::UnitTestFSM::testParseNullText",
      "tests/textfsm_test.py::UnitTestFSM::testParseText",
      "tests/textfsm_test.py::UnitTestFSM::testParseTextToDicts",
      "tests/textfsm_test.py::UnitTestFSM::testReEnteringState",
      "tests/textfsm_test.py::UnitTestFSM::testReset",
      "tests/textfsm_test.py::UnitTestFSM::testRulePrefixes",
      "tests/textfsm_test.py::UnitTestFSM::testRuleStartsWithCarrot",
      "tests/textfsm_test.py::UnitTestFSM::testSpacesAroundAction",
      "tests/textfsm_test.py::UnitTestFSM::testStateChange",
      "tests/textfsm_test.py::UnitTestFSM::testTextFSM",
      "tests/textfsm_test.py::UnitTestFSM::testValidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testValidateFSM",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMRule",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMValue",
      "tests/textfsm_test.py::UnitTestUnicode::testTemplateValue",
      "tests/texttable_test.py::UnitTestRow::testHeader",
      "tests/texttable_test.py::UnitTestRow::testIndex",
      "tests/texttable_test.py::UnitTestRow::testRowBasicMethods",
      "tests/texttable_test.py::UnitTestRow::testRowPublicMethods",
      "tests/texttable_test.py::UnitTestRow::testSetValues",
      "tests/texttable_test.py::UnitTestRow::testValue",
      "tests/texttable_test.py::UnitTestTextTable::testAddColumn",
      "tests/texttable_test.py::UnitTestTextTable::testAddTable",
      "tests/texttable_test.py::UnitTestTextTable::testAppend",
      "tests/texttable_test.py::UnitTestTextTable::testContains",
      "tests/texttable_test.py::UnitTestTextTable::testCsvToTable",
      "tests/texttable_test.py::UnitTestTextTable::testCustomRow",
      "tests/texttable_test.py::UnitTestTextTable::testDeleteRow",
      "tests/texttable_test.py::UnitTestTextTable::testExtendTable",
      "tests/texttable_test.py::UnitTestTextTable::testFilter",
      "tests/texttable_test.py::UnitTestTextTable::testFilterNone",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable2",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColor",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredCells",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredHeaders",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredMultilineCells",
      "tests/texttable_test.py::UnitTestTextTable::testHeaderIndex",
      "tests/texttable_test.py::UnitTestTextTable::testIteration",
      "tests/texttable_test.py::UnitTestTextTable::testMap",
      "tests/texttable_test.py::UnitTestTextTable::testRowNumberandParent",
      "tests/texttable_test.py::UnitTestTextTable::testSmallestColSize",
      "tests/texttable_test.py::UnitTestTextTable::testSortTable",
      "tests/texttable_test.py::UnitTestTextTable::testTableGetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableRepr",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowDictWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowListWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowTypes",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowWith",
      "tests/texttable_test.py::UnitTestTextTable::testTableSetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableStr",
      "tests/texttable_test.py::UnitTestTextTable::testTableWithLabels",
      "tests/texttable_test.py::UnitTestTextTable::testTextJustify"
    ],
    "created_at": "2025-06-19T18:37:21.471463",
    "image_name": "swesmith.x86_64.google__textfsm.c31b6007",
    "base_commit": "main",
    "problem_statement": "[Bug]: List variables lose their content after multiple records\n\n### Bug summary  \n\nWhen a template declares a variable with the `List` option, the list that is stored for the first record is silently overwritten / emptied while parsing the following records.  \nAs a consequence every record ends up carrying the exact same (often empty) list instead of the data that was captured at the moment the record was closed.\n\n### Code for reproduction  \n\n```python\nimport io\nimport textfsm\n\n# simple template: two values, one of them is a List\ntemplate = \"\"\"\nValue List boo (on.)\nValue       hoo (tw.)\n\nStart\n  ^$boo\n  ^$hoo -> Next.Record\n\nEOF\n\"\"\"\n\ndata = \"one\\ntwo\\non0\\ntw0\"\n\nfsm  = textfsm.TextFSM(io.StringIO(template))\nresult = fsm.ParseText(data)\nprint(result)\n```\n\n### Expected outcome  \n\n```\n[[['one'], 'two'], [['on0'], 'tw0']]\n```\n\nEach record should keep the exact list that was captured when the record was saved.\n\n### Actual outcome  \n\n```\n[[[], 'two'], [[], 'tw0']]\n# (sometimes both records contain the *last* list instead, e.g. [['on0'], 'two'] ...)\n```\n\nThe list for the first record is either emptied or replaced with the list of the last record, showing that the same list object is being reused across records.\n\n### Additional information  \n\nThe issue appears on the current `main` branch (commit after the recent parser clean-up).  \nPython 3.10, macOS 14.2 \u2013 but the behaviour is platform-independent."
  },
  {
    "instance_id": "jd__tenacity.0d40e76f.sweagent_buggen__14254b35",
    "repo": "swesmith/jd__tenacity.0d40e76f",
    "patch": "diff --git a/tenacity/wait.py b/tenacity/wait.py\nindex dc3c850..ca62793 100644\n--- a/tenacity/wait.py\n+++ b/tenacity/wait.py\n@@ -108,8 +108,10 @@ class wait_chain(wait_base):\n         self.strategies = strategies\n \n     def __call__(self, retry_state: \"RetryCallState\") -> float:\n-        wait_func_no = min(max(retry_state.attempt_number, 1), len(self.strategies))\n+        next_index = getattr(self, \"_next_index\", retry_state.attempt_number)\n+        wait_func_no = min(max(next_index, 1), len(self.strategies))\n         wait_func = self.strategies[wait_func_no - 1]\n+        self._next_index = next_index + 1\n         return wait_func(retry_state=retry_state)\n \n \n",
    "FAIL_TO_PASS": [
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain_multiple_invocations"
    ],
    "PASS_TO_PASS": [
      "tests/test_after.py::TestAfterLogFormat::test_01_default",
      "tests/test_after.py::TestAfterLogFormat::test_02_custom_sec_format",
      "tests/test_asyncio.py::TestAsyncio::test_attempt_number_is_correct_for_interleaved_coroutines",
      "tests/test_asyncio.py::TestAsyncio::test_iscoroutinefunction",
      "tests/test_asyncio.py::TestAsyncio::test_repr",
      "tests/test_asyncio.py::TestAsyncio::test_retry",
      "tests/test_asyncio.py::TestAsyncio::test_retry_attributes",
      "tests/test_asyncio.py::TestAsyncio::test_retry_preserves_argument_defaults",
      "tests/test_asyncio.py::TestAsyncio::test_retry_using_async_retying",
      "tests/test_asyncio.py::TestAsyncio::test_stop_after_attempt",
      "tests/test_asyncio.py::TestContextManager::test_async_retying_iterator",
      "tests/test_asyncio.py::TestContextManager::test_do_max_attempts",
      "tests/test_asyncio.py::TestContextManager::test_reraise",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_exc",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_and",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_or",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_rand",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_async_result_ror",
      "tests/test_asyncio.py::TestContextManager::test_retry_with_result",
      "tests/test_asyncio.py::TestContextManager::test_sleeps",
      "tests/test_asyncio.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_issue_478.py::TestIssue478::test_async",
      "tests/test_issue_478.py::TestIssue478::test_issue",
      "tests/test_tenacity.py::TestBase::test_callstate_repr",
      "tests/test_tenacity.py::TestBase::test_retrying_repr",
      "tests/test_tenacity.py::TestStopConditions::test_legacy_explicit_stop_type",
      "tests/test_tenacity.py::TestStopConditions::test_never_stop",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_attempt",
      "tests/test_tenacity.py::TestStopConditions::test_stop_after_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_all",
      "tests/test_tenacity.py::TestStopConditions::test_stop_and",
      "tests/test_tenacity.py::TestStopConditions::test_stop_any",
      "tests/test_tenacity.py::TestStopConditions::test_stop_before_delay",
      "tests/test_tenacity.py::TestStopConditions::test_stop_func_with_retry_state",
      "tests/test_tenacity.py::TestStopConditions::test_stop_or",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_max_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_and_multiplier",
      "tests/test_tenacity.py::TestWaitConditions::test_exponential_with_min_wait_andmax__wait",
      "tests/test_tenacity.py::TestWaitConditions::test_fixed_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_incrementing_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_legacy_explicit_wait_type",
      "tests/test_tenacity.py::TestWaitConditions::test_no_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep",
      "tests/test_tenacity.py::TestWaitConditions::test_random_sleep_withoutmin_",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_arbitrary_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_chain",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_combine",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_double_sum",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_exponential_jitter",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_func",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_random_exponential_statistically",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_retry_state_attributes",
      "tests/test_tenacity.py::TestWaitConditions::test_wait_triple_sum",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_all",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_and",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_any",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_no_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_exception_message_negative_too_many_inputs",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_not_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_if_result",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_or",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever",
      "tests/test_tenacity.py::TestRetryConditions::test_retry_try_again_forever_reraise",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_except_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_attributes",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_function_object",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_cause_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_exception_of_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_delay",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_if_not_exception_message_match",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_preserves_argument_defaults",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_attempt_number",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_no_type",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_retry_until_exception_of_type_wrong_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_exception",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_stop_on_return_value",
      "tests/test_tenacity.py::TestDecoratorWrapper::test_with_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_wait",
      "tests/test_tenacity.py::TestRetryWith::test_redefine_stop",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_cls_should_be_preserved",
      "tests/test_tenacity.py::TestRetryWith::test_retry_error_callback_should_be_preserved",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_after_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_attempts",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_raises_with_exc_info",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns",
      "tests/test_tenacity.py::TestBeforeAfterAttempts::test_before_sleep_log_returns_with_exc_info",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_by_default",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_from_retry_error",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_no_exception",
      "tests/test_tenacity.py::TestReraiseExceptions::test_reraise_timeout_from_retry_error",
      "tests/test_tenacity.py::TestStatistics::test_stats",
      "tests/test_tenacity.py::TestStatistics::test_stats_failing",
      "tests/test_tenacity.py::TestRetryErrorCallback::test_retry_error_callback",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_on_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_reraise",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_error",
      "tests/test_tenacity.py::TestContextManager::test_context_manager_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_one",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_on_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_retry_error",
      "tests/test_tenacity.py::TestInvokeAsCallable::test_reraise",
      "tests/test_tenacity.py::TestRetryException::test_retry_error_is_pickleable",
      "tests/test_tenacity.py::TestRetryTyping::test_retry_type_annotations",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated",
      "tests/test_tenacity.py::TestMockingSleep::test_decorated_retry_with",
      "tests/test_tornado.py::TestTornado::test_old_tornado",
      "tests/test_tornado.py::TestTornado::test_repr",
      "tests/test_tornado.py::TestTornado::test_retry",
      "tests/test_tornado.py::TestTornado::test_stop_after_attempt",
      "tests/test_utils.py::test_is_coroutine_callable"
    ],
    "created_at": "2025-06-19T18:37:22.307110",
    "image_name": "swesmith.x86_64.jd__tenacity.0d40e76f",
    "base_commit": "main",
    "problem_statement": "wait_chain keeps \u201cmemory\u201d between invocations \u2013 second run never sees the early waits  \n-----------------------------------------------------------------------\n\nUpgrading to the current main branch broke one of our back-off sequences:  \nwhen we reuse the same `wait_chain` (either directly or through a long-lived `Retrying`\ninstance) the first execution is fine, but every execution after that jumps\nstraight to the last wait strategy and never restarts from the beginning.\n\nMinimal reproducer\n```\nfrom tenacity import (\n    Retrying,\n    wait_fixed,\n    wait_chain,\n    stop_after_attempt,\n    retry_if_result,\n)\n\nsleep_log = []\n\nchain = wait_chain(               # 1 s, 2 s, then 3 s afterwards\n    wait_fixed(1),\n    wait_fixed(2),\n    wait_fixed(3),\n)\n\nr = Retrying(\n    wait=chain,\n    stop=stop_after_attempt(4),    # 3 retries + final failure\n    retry=retry_if_result(lambda x: x == 1),\n    sleep=sleep_log.append,\n)\n\n@r.wraps\ndef always_one():\n    return 1\n\n\n# first invocation --------------------------------------------------------\ntry:\n    always_one()\nexcept Exception:\n    pass\nprint(\"first run :\", sleep_log)     # -> [1.0, 2.0, 3.0, 3.0]  \u2705 expected\n\nsleep_log.clear()\n\n# second invocation -------------------------------------------------------\ntry:\n    always_one()\nexcept Exception:\n    pass\nprint(\"second run:\", sleep_log)     # -> [3.0, 3.0, 3.0, 3.0]  \u274c expected [1.0, 2.0, 3.0, 3.0]\n```\n\nThe internal state of the `wait_chain` instance appears to advance past the\nend of the strategy list and stay there across separate calls.  \nThis makes long-lived retry helpers back off much more aggressively than\nintended once the first failure cycle has happened.\n\nTested with  \n\u2022 Python 3.11.7  \n\u2022 tenacity 9.0.0.dev (commit 9abcd\u2026) on Linux  \n\nIt worked correctly with 8.3.x."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__9330138b",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..08bb7d9 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -768,7 +768,7 @@ class QueryBuilder(Selectable, Term):\n         newone._select_star_tables = copy(self._select_star_tables)\n         newone._from = copy(self._from)\n         newone._with = copy(self._with)\n-        newone._selects = copy(self._selects)\n+        newone._selects = self._selects\n         newone._columns = copy(self._columns)\n         newone._values = copy(self._values)\n         newone._groupbys = copy(self._groupbys)\n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:26.367283",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "`select()` (and friends) are leaking state \u2013 original query objects keep the new columns  \n  \nSince today\u2019s HEAD the builder no longer behaves immutably.  \nA query that should stay untouched suddenly \u201cinherits\u201d later `.select()` / `.groupby()` calls that were made on the copy.\n\nMinimal repro\n```python\nfrom pypika import Query, Table\n\na = Table('a')\nb = Table('b')\n\nq1 = Query.from_(a).select(a.foo)            # expected: SELECT \"foo\" FROM \"a\"\nq2 = q1.join(b).on(a.foo == b.bar)           \\\n        .select(b.buz)                       # expected: SELECT \"a\".\"foo\",\"b\".\"buz\" \u2026.\n\nprint(str(q1))\n# \u2190 on 0.48.5 (or commit 42c7c45):  SELECT \"foo\" FROM \"a\"          \u2705\n# \u2190 on current master:           SELECT \"a\".\"foo\",\"b\".\"buz\" \u2026      \u274c\n```\n\nSame with a simpler copy:\n\n```python\nbase = Query.from_('t').select('x')\nclone = base.select('y')\n\nprint(str(base))\n# expected: SELECT \"x\" FROM \"t\"\n# actual:   SELECT \"x\",\"y\" FROM \"t\"\n```\n\nThe problem cascades into helpers such as `pipe`:\n\n```python\ndef select_two(q):\n    return q.select('c1','c2')\n\ndef count_group(q, *g):\n    return q.groupby(*g).select(*g)\n\nq = Query.from_('tbl')\nprint(q.pipe(select_two))          # ok\nprint(q)                           # already modified, should be pristine\n```\n\nIn all cases the *first* `QueryBuilder` instance is changed even though only the copy should be modified.\n\nThis was not the case yesterday and breaks any code that relies on immutability for building multiple branches of a statement tree."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__ee8cfb54",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..df2b886 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -26,7 +26,7 @@ from pypika.utils import (\n     builder,\n     format_alias_sql,\n     format_quotes,\n-    ignore_copy,\n+    ignore_copy, _SharedList,\n )\n \n __author__ = \"Timothy Heys\"\n@@ -768,10 +768,10 @@ class QueryBuilder(Selectable, Term):\n         newone._select_star_tables = copy(self._select_star_tables)\n         newone._from = copy(self._from)\n         newone._with = copy(self._with)\n-        newone._selects = copy(self._selects)\n-        newone._columns = copy(self._columns)\n-        newone._values = copy(self._values)\n-        newone._groupbys = copy(self._groupbys)\n+        newone._selects = _SharedList(self._selects)\n+        newone._columns = _SharedList(self._columns)\n+        newone._values = _SharedList(self._values)\n+        newone._groupbys = _SharedList(self._groupbys)\n         newone._orderbys = copy(self._orderbys)\n         newone._joins = copy(self._joins)\n         newone._unions = copy(self._unions)\ndiff --git a/pypika/utils.py b/pypika/utils.py\nindex ca3e9c4..792be12 100644\n--- a/pypika/utils.py\n+++ b/pypika/utils.py\n@@ -36,6 +36,25 @@ class FunctionException(Exception):\n     pass\n \n \n+\n+\n+class _SharedList(list):\n+    def __init__(self, original):\n+        super().__init__(original)\n+        self._original = original\n+\n+    def append(self, item):\n+        super().append(item)\n+        self._original.append(item)\n+\n+    def extend(self, iterable):\n+        super().extend(iterable)\n+        self._original.extend(iterable)\n+\n+    def insert(self, index, item):\n+        super().insert(index, item)\n+        self._original.insert(index, item)\n+\n C = TypeVar(\"C\")\n \n \n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:27.186036",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "Unexpected mutation of \u201cparent\u201d Query objects after chaining\u2028----------------------------------------------------------------------\n\nHey folks,  \nsince pulling the latest commit I\u2019m seeing some surprise side-effects when I derive a new query from an existing one.  \nOperations that should return a _brand new_ `QueryBuilder` instance (and leave the original untouched) are now leaking their changes back into the first query.\n\nWhat I\u2019m running into\n----------------------\n\n```python\nfrom pypika import Query, Table\n\ntbl = Table('a')\n\n# build an initial query\nq1 = Query.from_(tbl).select(tbl.foo)\n\n# derive a second query that should add another column\nq2 = q1.select(tbl.bar)\n\nprint(str(q1))\nprint(str(q2))\n```\n\nWith 0.48.3 (for example) this printed  \n\n```\nSELECT \"foo\" FROM \"a\"\nSELECT \"foo\",\"bar\" FROM \"a\"\n```\n\n\u2026but on current `main` (commit  df2b886) it now prints\n\n```\nSELECT \"foo\",\"bar\" FROM \"a\"\nSELECT \"foo\",\"bar\" FROM \"a\"\n```\n\n`q1` suddenly \u201cknows\u201d about `bar`, which breaks the immutability guarantees a lot of utility code relies on.\n\nSame story with other builders:\n\n```python\nq1 = Query.into('t').insert(1)\nq2 = q1.insert(2)\n\nassert str(q1) == 'INSERT INTO \"t\" VALUES (1)'          # \u2190 fails, q1 now \u201c\u20181\u2019,\u20182\u2019\u201d\n```\n\nor\n\n```python\nbase = Query.from_('test')\ngrouped = base.groupby('c1')\nprint(str(base))        # now already contains the GROUP BY\n```\n\nWhy this matters\n----------------\n\nMany libraries (and plenty of my own helpers) keep a \u201ctemplate\u201d query around and spawn variations from it.  \nAfter this change those templates are mutated in place, so subsequent calls build on an already-modified query and produce wrong SQL.\n\nRepro environment\n-----------------\n\n```\nLinux-6.5.0-14-generic-x86_64\nPython 3.11.8\npypika 0.51.0.dev (df2b886)\n```\n\nLet me know if you need any additional details \u2014 happy to help pin this down."
  },
  {
    "instance_id": "kayak__pypika.1c9646f0.sweagent_buggen__9af44c46",
    "repo": "swesmith/kayak__pypika.1c9646f0",
    "patch": "diff --git a/pypika/queries.py b/pypika/queries.py\nindex 42c7c45..08bb7d9 100644\n--- a/pypika/queries.py\n+++ b/pypika/queries.py\n@@ -768,7 +768,7 @@ class QueryBuilder(Selectable, Term):\n         newone._select_star_tables = copy(self._select_star_tables)\n         newone._from = copy(self._from)\n         newone._with = copy(self._with)\n-        newone._selects = copy(self._selects)\n+        newone._selects = self._selects\n         newone._columns = copy(self._columns)\n         newone._values = copy(self._values)\n         newone._groupbys = copy(self._groupbys)\n",
    "FAIL_TO_PASS": [
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_queries_after_join",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_select_returns_new_query_instance",
      "pypika/tests/test_query.py::QueryBuilderTests::test_pipe"
    ],
    "PASS_TO_PASS": [
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_0__ridley_scott_jimi_hendrix_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_1__1_2_3_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_2__toInt64_1_toInt64_2_toInt64_3_toInt64_4_",
      "pypika/tests/clickhouse/test_array.py::TestArray::test_get_sql_3__toFixedString_mogwai_10_toFixedString_mono_10_toFixedString_bonobo_10_arr",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_0_hasAny_mental_abilities_physical_abilities_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_1_hasAny_1_2_3_4_3_",
      "pypika/tests/clickhouse/test_array.py::TestHasAny::test_get_sql_2_hasAny_bands_toFixedString_port_royal_20_toFixedString_hammock_20_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_0_length_tags_",
      "pypika/tests/clickhouse/test_array.py::TestLength::test_get_sql_1_length_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_0_empty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestEmpty::test_get_sql_1_empty_1_2_3_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_0_notEmpty_tags_",
      "pypika/tests/clickhouse/test_array.py::TestNotEmpty::test_get_sql_1_notEmpty_1_2_3_",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_0",
      "pypika/tests/clickhouse/test_condition.py::TestMultiIfCondition::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_0",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestFormatDateTime::test_get_sql_1",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_00",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_01",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_02",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_03",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_04",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_05",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_06",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_07",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_08",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_09",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_10",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_11",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_12",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_13",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_14",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_15",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestAddSubtractDt::test_get_sql_16",
      "pypika/tests/clickhouse/test_dates_and_times.py::TestToYYYYMM::test_get_sql",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_0",
      "pypika/tests/clickhouse/test_nullable_arg.py::TestSearchString::test_get_sql_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_1",
      "pypika/tests/clickhouse/test_search_string.py::TestSearchString::test_search_string_2",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_0",
      "pypika/tests/clickhouse/test_search_string.py::TestMultiSearch::test_multi_search_string_1",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_00_toString_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_01_toInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_02_toInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_03_toInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_04_toInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_05_toUInt8_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_06_toUInt16_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_07_toUInt32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_08_toUInt64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_09_toFloat32_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_10_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_11_toFloat64_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_12_toDate_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_13_toDateTime_field_name_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_field_14_toFixedString_field_name_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_00_toString_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_01_toInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_02_toInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_03_toInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_04_toInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_05_toUInt8_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_06_toUInt16_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_07_toUInt32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_08_toUInt64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_09_toFloat32_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_10_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_11_toFloat64_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_12_toDate_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_13_toDateTime_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestBasicTypeConverters::test_basic_types_value_14_toFixedString_100_100_",
      "pypika/tests/clickhouse/test_type_conversion.py::TestToFixedString::test_get_sql_with_table",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_AS_keyword_for_alias",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_FINAL_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseQueryTests::test_use_SAMPLE_with_offset_keyword",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_omit_where__table_schema",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDeleteTests::test_where_field_equals",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseUpdateTests::test_update",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_database",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_dictionary",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_other",
      "pypika/tests/dialects/test_clickhouse.py::ClickHouseDropQuery::test_drop_table",
      "pypika/tests/dialects/test_clickhouse.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset0_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_limit_offset_by",
      "pypika/tests/dialects/test_clickhouse.py::LimitByTests::test_rename_table",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_limit_with_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_offset",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_distinct_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_invalid_range",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_percent_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_select_non_int",
      "pypika/tests/dialects/test_mssql.py::SelectTests::test_top_with_ties_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_distinct_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_multiple_modifier_select",
      "pypika/tests/dialects/test_mysql.py::SelectTests::test_normal_select",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_conflict_handlers_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_ignore_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_on_duplicate_key_update_update",
      "pypika/tests/dialects/test_mysql.py::UpdateTests::test_update",
      "pypika/tests/dialects/test_mysql.py::LoadCSVTests::test_load_from_file",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_create_table",
      "pypika/tests/dialects/test_mysql.py::TableTests::test_drop_table",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_fetch_next_method_deprecated",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_when_subqueries_are_present",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_groupby_alias_False_does_not_group_by_alias_with_standard_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_offset_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_limit_query",
      "pypika/tests/dialects/test_oracle.py::SelectTests::test_offset_query",
      "pypika/tests/dialects/test_postgresql.py::InsertTests::test_array_keyword",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_alias_set_correctly",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_num",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_array_str",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict",
      "pypika/tests/dialects/test_postgresql.py::JSONObjectTests::test_json_value_from_dict_recursive",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_json_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_json_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_path_text_value",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_index",
      "pypika/tests/dialects/test_postgresql.py::JSONOperatorsTests::test_get_text_value_by_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_list_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_using_str_arg",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contained_by_with_complex_criterion",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_field",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_contains_for_json",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_any_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_key",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_json_has_keys",
      "pypika/tests/dialects/test_postgresql.py::JSONBOperatorsTests::test_subnet_contains_inet",
      "pypika/tests/dialects/test_postgresql.py::DistinctOnTests::test_distinct_on",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_array_syntax",
      "pypika/tests/dialects/test_postgresql.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_no_queryexception_if_returning_used_on_valid_query_type",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_queryexception_if_returning_used_on_invalid_query",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_return_field_from_join_table",
      "pypika/tests/dialects/test_postgresql.py::ReturningClauseTests::test_returning_from_missing_table_raises_queryexception",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_create_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_drop_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_dont_use_double_quotes_on_joining_queries",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms",
      "pypika/tests/dialects/test_snowflake.py::QuoteTests::test_use_double_quotes_on_alias_but_not_on_terms_with_joins",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_false_as_zero",
      "pypika/tests/dialects/test_sqllite.py::SelectTests::test_bool_true_as_one",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_insert_or_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_normal_replace",
      "pypika/tests/dialects/test_sqllite.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_delete_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_insert_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_select_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::VerticaQueryTests::test_update_query_with_hint",
      "pypika/tests/dialects/test_vertica.py::CopyCSVTests::test_copy_from_file",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_table_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_local_temporary_table",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_table_preserve_rows_without_temporary_raises_error",
      "pypika/tests/dialects/test_vertica.py::CreateTemporaryTableTests::test_create_temporary_table_preserve_rows",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_case_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_arithmetic_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_mixed_else_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__case_with_single_aggregate_field_in_one_criterion_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_arithmetic_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__constant_is_aggregate_none",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__field_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__func_arithmetic_constant_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_case_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__mixed_func_arithmetic_is_not_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__negative_agg_func_is_aggregate",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test__non_aggregate_function_with_aggregated_arg",
      "pypika/tests/test_aggregate.py::IsAggregateTests::test_complicated",
      "pypika/tests/test_analytic_queries.py::RankTests::test_avg",
      "pypika/tests/test_analytic_queries.py::RankTests::test_count_range_between_unbounded_preceeding_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_dense_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_empty_over",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_filter_quote_table_in_filter",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_ignore_nulls_first",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_first_value_range_between_x_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lag_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_multi_argument",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_last_value_rows_between_current_row_unbounded_following_ignore_nulls",
      "pypika/tests/test_analytic_queries.py::RankTests::test_lead_generates_correct_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_range_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_max_rows_x_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_median",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_range_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_min_rows_current_row",
      "pypika/tests/test_analytic_queries.py::RankTests::test_multiple_partitions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_no_partition_or_order_invalid_sql",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition",
      "pypika/tests/test_analytic_queries.py::RankTests::test_ntile_with_partition_and_order",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_asc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_orderby_desc",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_range_then_rows_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rank_with_alias",
      "pypika/tests/test_analytic_queries.py::RankTests::test_row_number",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_called_twice_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_rows_then_range_raises_attribute_error",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_stddev_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_sum_rows_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_table_prefixes_used_in_analytic_functions",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_pop",
      "pypika/tests/test_analytic_queries.py::RankTests::test_var_samp",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance",
      "pypika/tests/test_analytic_queries.py::RankTests::test_variance_rows_between_unbounded_preceeding_unbounded_following",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_range_unbounded_preceeding",
      "pypika/tests/test_analytic_queries.py::RankTests::test_varpop_rows_between_unbounded_preceeding_x_following",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_as_select_not_query_raises_error",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_columns",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_with_select_and_columns_fails",
      "pypika/tests/test_create.py::CreateTableTests::test_create_table_without_columns_or_select_empty",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_if_not_exists",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_simple",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_unique",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_where",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_columns_raises_error",
      "pypika/tests/test_create.py::CreateIndexTests::test_create_index_without_table_raises_error",
      "pypika/tests/test_criterions.py::CriterionTests::test__bitwise_and_in_where_clause",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_bitwise_and_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_bool",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_decimal",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_eq_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_gte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_is_null_with_alias",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lt_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_lte_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_date",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_datetime",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_number",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_right",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_ne_str",
      "pypika/tests/test_criterions.py::CriterionTests::test__criterion_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_chained_function",
      "pypika/tests/test_criterions.py::NotTests::test_is_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_negate",
      "pypika/tests/test_criterions.py::NotTests::test_not_null",
      "pypika/tests/test_criterions.py::NotTests::test_not_null_with_alias",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_and_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_complex_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_not_with_or_criterion",
      "pypika/tests/test_criterions.py::NotTests::test_notnullcriterion_replace_table",
      "pypika/tests/test_criterions.py::NotTests::test_variable_access",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_date",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_datetime",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_number",
      "pypika/tests/test_criterions.py::BetweenTests::test__between_with_alias",
      "pypika/tests/test_criterions.py::BetweenTests::test__function_between",
      "pypika/tests/test_criterions.py::BetweenTests::test_get_item_only_works_with_slice",
      "pypika/tests/test_criterions.py::IsInTests::test__function_isin",
      "pypika/tests/test_criterions.py::IsInTests::test__in_character",
      "pypika/tests/test_criterions.py::IsInTests::test__in_date",
      "pypika/tests/test_criterions.py::IsInTests::test__in_datetime",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number",
      "pypika/tests/test_criterions.py::IsInTests::test__in_number_with_alias",
      "pypika/tests/test_criterions.py::IsInTests::test__in_unicode",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__lshift",
      "pypika/tests/test_criterions.py::ArithmeticExpressionTests::test__rshift",
      "pypika/tests/test_criterions.py::NotInTests::test__function_notin",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_character",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_date",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_datetime",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number",
      "pypika/tests/test_criterions.py::NotInTests::test__notin_number_with_alias",
      "pypika/tests/test_criterions.py::LikeTests::test_glob_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_ilike_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_contains",
      "pypika/tests/test_criterions.py::LikeTests::test_like_ends_with",
      "pypika/tests/test_criterions.py::LikeTests::test_like_n_chars_long",
      "pypika/tests/test_criterions.py::LikeTests::test_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_like_starts_with",
      "pypika/tests/test_criterions.py::LikeTests::test_not_ilike_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_not_like_single_chars_and_various_chars",
      "pypika/tests/test_criterions.py::LikeTests::test_rlike_escape_chars",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_exists",
      "pypika/tests/test_criterions.py::ExistsCriterionTests::test_not_exists",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_field",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__between_and_isin",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__mixed",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test__nested__or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_and",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_function_xor",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_or",
      "pypika/tests/test_criterions.py::ComplexCriterionTests::test_xor",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_and_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_or_field",
      "pypika/tests/test_criterions.py::FieldsAsCriterionTests::test__field_xor_field",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_arithmeticfunction_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_betweencriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_complexcriterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_criterion_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_field_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_only_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_function_with_values_and_fields_replace_table",
      "pypika/tests/test_criterions.py::CriterionOperationsTests::test_nullcriterion_replace_table",
      "pypika/tests/test_criterions.py::AnyTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AnyTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AnyTests::test_with_generator",
      "pypika/tests/test_criterions.py::AnyTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_different_operations_with_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_left",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_empty_criterion_on_the_right",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_fields_",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_invertion_of_the_empty_criterion",
      "pypika/tests/test_criterions.py::EmptyCriterionTests::test_more_than_one_empty_criterions",
      "pypika/tests/test_criterions.py::AllTests::test_multiple_args_returned_in_chain_of_ors",
      "pypika/tests/test_criterions.py::AllTests::test_single_arg_returns_self",
      "pypika/tests/test_criterions.py::AllTests::test_with_generator",
      "pypika/tests/test_criterions.py::AllTests::test_zero_args_returns_empty_criterion",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_fail_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_arguments",
      "pypika/tests/test_custom_functions.py::TestUnitCustomFunction::test_should_return_function_with_no_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_fail_use_custom_function_on_select_with_wrong_arguments",
      "pypika/tests/test_custom_functions.py::TestFunctionalCustomFunction::test_should_use_custom_function_on_select",
      "pypika/tests/test_data_types.py::StringTests::test_inline_string_concatentation",
      "pypika/tests/test_data_types.py::UuidTests::test_uuid_string_generation",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_day",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_default",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_minute",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_month",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_quarter",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_second",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_week",
      "pypika/tests/test_date_math.py::AddIntervalTests::test_add_year",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_hour",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_day_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_minute",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_hour_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_minute_second",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_second_microsecond",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_complex_expressions",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_value_right",
      "pypika/tests/test_date_math.py::AddIntervalMultipleUnitsTests::test_add_year_month",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_mysql_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_oracle_dialect_uses_single_quotes_around_expression_in_an_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_postgresql_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_redshift_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::DialectIntervalTests::test_vertica_dialect_uses_single_quotes_around_interval",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_day",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_month",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_week",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year",
      "pypika/tests/test_date_math.py::TestNegativeIntervals::test_year_month",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_integer_values",
      "pypika/tests/test_date_math.py::TruncateTrailingZerosTests::test_do_not_truncate_months_between_years_and_datys",
      "pypika/tests/test_deletes.py::DeleteTests::test_for_portion",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where",
      "pypika/tests/test_deletes.py::DeleteTests::test_omit_where__table_schema",
      "pypika/tests/test_deletes.py::DeleteTests::test_where_field_equals",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_star",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_returning_str",
      "pypika/tests/test_deletes.py::PostgresDeleteTests::test_delete_using",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_database",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_index",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_table",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_user",
      "pypika/tests/test_drop.py::DropTableTests::test_drop_view",
      "pypika/tests/test_formats.py::QuoteTests::test_no_quote_char_in_complex_query",
      "pypika/tests/test_formats.py::QuoteTests::test_replace_quote_char_in_complex_query",
      "pypika/tests/test_functions.py::FunctionTests::test_dialect_propagation",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_None_for_non_aggregate_function_or_function_with_no_aggregate_functions",
      "pypika/tests/test_functions.py::FunctionTests::test_is_aggregate_True_for_aggregate_function_or_function_with_aggregate_functions",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_included_in_function_sql",
      "pypika/tests/test_functions.py::SchemaTests::test_schema_no_schema_in_sql_when_none_set",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__addition__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_equality",
      "pypika/tests/test_functions.py::ArithmeticTests::test__arithmetic_with_function",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_add_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_div_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_exponent_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_floor_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_function_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_modulus_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_no_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_mul_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_nested_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__complex_op_sub_parentheses",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__division__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__exponent__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__floor",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__leftshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__modulus__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__multiplication__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__rightshift__right",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__decimal",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__fields",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__number",
      "pypika/tests/test_functions.py::ArithmeticTests::test__subtraction__right",
      "pypika/tests/test_functions.py::AggregationTests::test__approx_percentile",
      "pypika/tests/test_functions.py::AggregationTests::test__avg",
      "pypika/tests/test_functions.py::AggregationTests::test__count",
      "pypika/tests/test_functions.py::AggregationTests::test__count__star",
      "pypika/tests/test_functions.py::AggregationTests::test__first",
      "pypika/tests/test_functions.py::AggregationTests::test__last",
      "pypika/tests/test_functions.py::AggregationTests::test__max",
      "pypika/tests/test_functions.py::AggregationTests::test__min",
      "pypika/tests/test_functions.py::AggregationTests::test__std",
      "pypika/tests/test_functions.py::AggregationTests::test__stddev",
      "pypika/tests/test_functions.py::AggregationTests::test__subquery_in_params_functions",
      "pypika/tests/test_functions.py::AggregationTests::test__sum",
      "pypika/tests/test_functions.py::ConditionTests::test__case__else",
      "pypika/tests/test_functions.py::ConditionTests::test__case__field",
      "pypika/tests/test_functions.py::ConditionTests::test__case__multi",
      "pypika/tests/test_functions.py::ConditionTests::test__case__no_cases",
      "pypika/tests/test_functions.py::ConditionTests::test__case__raw",
      "pypika/tests/test_functions.py::StringTests::test__ascii__field",
      "pypika/tests/test_functions.py::StringTests::test__ascii__int",
      "pypika/tests/test_functions.py::StringTests::test__ascii__str",
      "pypika/tests/test_functions.py::StringTests::test__bin__field",
      "pypika/tests/test_functions.py::StringTests::test__bin__int",
      "pypika/tests/test_functions.py::StringTests::test__bin__str",
      "pypika/tests/test_functions.py::StringTests::test__concat__field",
      "pypika/tests/test_functions.py::StringTests::test__concat__str",
      "pypika/tests/test_functions.py::StringTests::test__insert__field",
      "pypika/tests/test_functions.py::StringTests::test__insert__str",
      "pypika/tests/test_functions.py::StringTests::test__length__field",
      "pypika/tests/test_functions.py::StringTests::test__length__str",
      "pypika/tests/test_functions.py::StringTests::test__lower__field",
      "pypika/tests/test_functions.py::StringTests::test__lower__str",
      "pypika/tests/test_functions.py::StringTests::test__replace__field",
      "pypika/tests/test_functions.py::StringTests::test__replace__str",
      "pypika/tests/test_functions.py::StringTests::test__substring",
      "pypika/tests/test_functions.py::SplitPartFunctionTests::test__split_part",
      "pypika/tests/test_functions.py::RegexpLikeFunctionTests::test__regexp_like",
      "pypika/tests/test_functions.py::CastTests::test__cast__as",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary",
      "pypika/tests/test_functions.py::CastTests::test__cast__binary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__boolean",
      "pypika/tests/test_functions.py::CastTests::test__cast__char",
      "pypika/tests/test_functions.py::CastTests::test__cast__char_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__date",
      "pypika/tests/test_functions.py::CastTests::test__cast__float",
      "pypika/tests/test_functions.py::CastTests::test__cast__integer",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__long_varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__numeric",
      "pypika/tests/test_functions.py::CastTests::test__cast__signed",
      "pypika/tests/test_functions.py::CastTests::test__cast__timestamp",
      "pypika/tests/test_functions.py::CastTests::test__cast__unsigned",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary",
      "pypika/tests/test_functions.py::CastTests::test__cast__varbinary_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar",
      "pypika/tests/test_functions.py::CastTests::test__cast__varchar_with_arg",
      "pypika/tests/test_functions.py::CastTests::test__tochar__",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_time",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_current_timestamp_with_alias",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_date_add",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_day",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_hour",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_join",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_microsecond",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_minute",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_month",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_quarter",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_second",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_week",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_extract_year",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_now",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_time_diff",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_timestampadd",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_to_date",
      "pypika/tests/test_functions.py::DateFunctionsTests::test_utc_timestamp",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_coalesce",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_isnull",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nullif",
      "pypika/tests/test_functions.py::NullFunctionsTests::test_nvl",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_mysql_rollup_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_after_rollup_mysql",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_no_rollup_before_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_parameters",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_from_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_one_groupby",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_partial",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_func_two_groupbys",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_multiple_rollups",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_multiple_rollups_and_parity",
      "pypika/tests/test_groupby_modifiers.py::RollupTests::test_verticaoracle_rollups_with_parity",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_force_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_groupby_returns_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_immutable_kwarg_on_query_builder_disables_immutability",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_insert_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_join_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_orderby_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_replace_into_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_update_set_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_use_index_return_new_query_instance",
      "pypika/tests/test_immutability.py::ImmutabilityTests::test_with_return_new_query_instance",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_mixed",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_multi_rows_chained_multiple_rows",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_all_columns_single_element",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_alias_with_chain",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_column_using_table_alias",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_empty_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_multiple_rows_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_null",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_list",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_selected_columns_type_tuple",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_single_row_with_array_value",
      "pypika/tests/test_inserts.py::InsertIntoTests::test_insert_with_statement",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_empty_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_nothing_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_fields_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_do_update_multiple_mixed_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_no_handler",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_conflict_two_handlers_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_insert_on_fieldless_conflict_do_update_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_non_insert_on_conflict_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_nothing_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_do_update_with_excluded_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_from_subquery",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_complex",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_nothing",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_on_conflict_where_empty_conflict_fields_do_update",
      "pypika/tests/test_inserts.py::PostgresInsertIntoOnConflictTests::test_where_and_on_conflict_where",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_and_id",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_multi_rows_chained_returning_star_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_all_columns_single_element_arrays",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_aggregate",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_all_fields_and_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_arithmetics",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_from_other_table",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_functions",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_null",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_one_field_str",
      "pypika/tests/test_inserts.py::PostgresInsertIntoReturningTests::test_insert_returning_tuple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_ignore",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multi_rows_chained_mixed_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_different_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_original_field_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_expression_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_multiple_columns_on_duplicate_update_one_with_same_value",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_none_skipped",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_multi_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_single_element_array",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_one_column_using_values",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_multiple",
      "pypika/tests/test_inserts.py::InsertIntoOnDuplicateTests::test_insert_selected_columns_on_duplicate_update_one",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_columns_with_join",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_columns_from_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_from_columns",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_ignore_star",
      "pypika/tests/test_inserts.py::InsertSelectFromTests::test_insert_star",
      "pypika/tests/test_inserts.py::InsertSubqueryTests::test_insert_subquery_wrapped_in_brackets",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_columns_into_with_join",
      "pypika/tests/test_inserts.py::SelectIntoTests::test_select_star_into",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_simple",
      "pypika/tests/test_inserts.py::ReplaceTests::test_replace_subquery",
      "pypika/tests/test_internals.py::TablesTests::test__case_tables",
      "pypika/tests/test_internals.py::TablesTests::test__criterion_replace_table_with_value",
      "pypika/tests/test_internals.py::TablesTests::test__star_tables",
      "pypika/tests/test_internals.py::TablesTests::test__table_star_tables",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_subquery",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_cross_join_on_table",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_default_join_type",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_full_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_hash_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_inner_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_arithmetic_field",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_collate",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_complex_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_multi_with_extra_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_single",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_field_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_on_subquery_criteria",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_second_table_in_from_clause",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_multiple_fields",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_string_field_name",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_with_quote_char",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_using_without_fields_raises_exception",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_join_with_arithmetic_function_in_select",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_left_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_right_outer_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_temporal_join",
      "pypika/tests/test_joins.py::SelectQueryJoinTests::test_use_different_table_objects_for_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_fail_when_joining_unknown_type",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_ignore_table_references",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_immutable__tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_from_join",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_column_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_setoperation",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_with_table_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_query_without_alias",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_same_table_with_prefixes",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_join_table_twice",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_function_in_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_groupby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_prefixes_added_to_orderby",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_require_condition_with_both_tables",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__fields_after_table_star",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__ordered_select_clauses",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select__star_for_table__replacement",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_field_from_missing_table",
      "pypika/tests/test_joins.py::JoinBehaviorTests::test_select_fields_with_where",
      "pypika/tests/test_joins.py::UnionTests::test_mysql_query_wraps_unioned_queries",
      "pypika/tests/test_joins.py::UnionTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::UnionTests::test_union",
      "pypika/tests/test_joins.py::UnionTests::test_union_all",
      "pypika/tests/test_joins.py::UnionTests::test_union_all_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_as_subquery",
      "pypika/tests/test_joins.py::UnionTests::test_union_multiple",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_no_quote_char",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_use_union_query_field_with_aliases",
      "pypika/tests/test_joins.py::UnionTests::test_union_with_order_by_with_aliases",
      "pypika/tests/test_joins.py::InsertQueryJoinTests::test_join_table_on_insert_query",
      "pypika/tests/test_joins.py::UpdateQueryJoinTests::test_join_table_on_update_query",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_as_subquery",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_multiple",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_limit",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_no_quote_char",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_offset",
      "pypika/tests/test_joins.py::IntersectTests::test_intersect_with_order_by",
      "pypika/tests/test_joins.py::IntersectTests::test_mysql_query_wraps_intersected_queries",
      "pypika/tests/test_joins.py::IntersectTests::test_require_equal_number_of_fields_intersect",
      "pypika/tests/test_joins.py::MinusTests::test_minus",
      "pypika/tests/test_joins.py::MinusTests::test_minus_as_subquery",
      "pypika/tests/test_joins.py::MinusTests::test_minus_multiple",
      "pypika/tests/test_joins.py::MinusTests::test_minus_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_no_quote_char",
      "pypika/tests/test_joins.py::MinusTests::test_minus_with_order_by",
      "pypika/tests/test_joins.py::MinusTests::test_mysql_query_wraps_minus_queries",
      "pypika/tests/test_joins.py::MinusTests::test_require_equal_number_of_fields",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_as_subquery",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_multiple",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_query_with_order_by_use_minus_query_field",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_no_quote_char",
      "pypika/tests/test_joins.py::ExceptOfTests::test_except_with_order_by",
      "pypika/tests/test_joins.py::ExceptOfTests::test_require_equal_number_of_fields_except_of",
      "pypika/tests/test_negation.py::NegationTests::test_negate_field",
      "pypika/tests/test_negation.py::NegationTests::test_negate_function",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_float",
      "pypika/tests/test_negation.py::NegationTests::test_negate_wrapped_int",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_format_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_named_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_numeric_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_pyformat_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTests::test_qmark_parameter",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_join_with_parameter_value_wrapper",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_insert",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_join",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_param_select_subquery",
      "pypika/tests/test_parameter.py::ParametrizedTestsWithValues::test_pyformat_parameter",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_select_statement",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_a_where_clause",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_can_be_used_in_orderby",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_column_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_object_value",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_id",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_row_num",
      "pypika/tests/test_pseudocolumns.py::PseudoColumnsTest::test_sys_date",
      "pypika/tests/test_query.py::QueryTablesTests::test_is_joined",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_case_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_delete_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_filter_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_having_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_insert_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_join_tables",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_only_specified_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_orderby_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_tuple_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table",
      "pypika/tests/test_query.py::QueryTablesTests::test_replace_update_table_current_table_not_match",
      "pypika/tests/test_query.py::QueryBuilderTests::test_query_builders_have_reference_to_correct_query_class",
      "pypika/tests/test_selects.py::SelectTests::test_empty_query",
      "pypika/tests/test_selects.py::SelectTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_postgresql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__column__single__table_alias__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__field",
      "pypika/tests/test_selects.py::SelectTests::test_select__columns__multi__str",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__multi",
      "pypika/tests/test_selects.py::SelectTests::test_select__distinct__single",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_subqueries",
      "pypika/tests/test_selects.py::SelectTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::SelectTests::test_select__nested_subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__no_table",
      "pypika/tests/test_selects.py::SelectTests::test_select__star",
      "pypika/tests/test_selects.py::SelectTests::test_select__star__replacement",
      "pypika/tests/test_selects.py::SelectTests::test_select__subquery",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_list",
      "pypika/tests/test_selects.py::SelectTests::test_select__table_schema_with_multiple_levels_as_tuple",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_from_with_field_raises_exception",
      "pypika/tests/test_selects.py::SelectTests::test_select_no_with_alias_from",
      "pypika/tests/test_selects.py::SelectTests::test_select_then_add_table",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_force_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_and_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_limit_zero",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_offset__func",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_calls",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_multiple_indexes",
      "pypika/tests/test_selects.py::SelectTests::test_select_with_use_index_with_index_object",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias",
      "pypika/tests/test_selects.py::SelectTests::test_table_select_alias_with_offset_and_limit",
      "pypika/tests/test_selects.py::SelectTests::test_temporal_select",
      "pypika/tests/test_selects.py::SelectTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::WhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::WhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_enum",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::WhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::WhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::WhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::WhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_having",
      "pypika/tests/test_selects.py::PreWhereTests::test_ignore_empty_criterion_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_prewhere_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_select_with_force_index_and_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_and_prewhere",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_enum",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_contains",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_contain",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_end_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_does_not_start_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_ends_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_and",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_multiple_tables",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_nowait",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_of_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_for_update_skip_locked_and_of",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_or",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_equals_where_two_not",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_is_not_n_chars_long",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regex",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_regexp",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_matches_rlike",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_field_starts_with",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_nested_conditions",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_single_quote",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_and_case",
      "pypika/tests/test_selects.py::PreWhereTests::test_where_with_multiple_wheres_using_or_case",
      "pypika/tests/test_selects.py::GroupByTests::test_group_by__single_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_platforms",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__alias_with_join",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_field",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__count_star",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__int",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__multi_with_totals",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_mssql",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__no_alias_oracle",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__single",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__str",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_distinct",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby__sum_filter",
      "pypika/tests/test_selects.py::GroupByTests::test_groupby_with_case_uses_the_alias",
      "pypika/tests/test_selects.py::GroupByTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::GroupByTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_having_and",
      "pypika/tests/test_selects.py::HavingTests::test_having_greater_than",
      "pypika/tests/test_selects.py::HavingTests::test_having_join_and_equality",
      "pypika/tests/test_selects.py::HavingTests::test_mssql_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_mysql_query_uses_backtick_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_oracle_query_uses_no_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_postgres_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_redshift_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::HavingTests::test_vertica_query_uses_double_quote_chars",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_asc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_desc",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_multi_fields",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_no_alias",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_field",
      "pypika/tests/test_selects.py::OrderByTests::test_orderby_single_str",
      "pypika/tests/test_selects.py::AliasTests::test_arithmetic_function",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_case_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_function_using_as_nested",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_as",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param",
      "pypika/tests/test_selects.py::AliasTests::test_functions_using_constructor_param_nested",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_criterion_comparison",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_field_inside_case",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_groupby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_orderby",
      "pypika/tests/test_selects.py::AliasTests::test_ignored_in_where",
      "pypika/tests/test_selects.py::AliasTests::test_null_value_with_alias",
      "pypika/tests/test_selects.py::AliasTests::test_select__multiple_tables",
      "pypika/tests/test_selects.py::AliasTests::test_table_field",
      "pypika/tests/test_selects.py::AliasTests::test_table_field__multi",
      "pypika/tests/test_selects.py::AliasTests::test_table_with_schema_and_alias",
      "pypika/tests/test_selects.py::AliasTests::test_use_aliases_in_groupby_and_orderby",
      "pypika/tests/test_selects.py::SubqueryTests::test_from_subquery_without_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_query_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_join_with_with",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_nested_query_with_join",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_from_with_returning",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery",
      "pypika/tests/test_selects.py::SubqueryTests::test_select_subquery_with_alias",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__equality",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in",
      "pypika/tests/test_selects.py::SubqueryTests::test_where__in_nested",
      "pypika/tests/test_selects.py::SubqueryTests::test_with",
      "pypika/tests/test_selects.py::QuoteTests::test_extraneous_quotes",
      "pypika/tests/test_tables.py::TableStructureTests::test_database_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_schema_table_attr",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_period_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_for_system_time_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_sql",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_alias",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_and_schema_parent_arg",
      "pypika/tests/test_tables.py::TableStructureTests::test_table_with_schema_arg",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_with_or_not_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_many_tables_without_alias",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_equal_by_schema_and_name_using_schema_with_parent",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_by_schema_and_name_using_schema_with_different_parents",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_names",
      "pypika/tests/test_tables.py::TableEqualityTests::test_tables_not_equal_with_different_schemas",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_make_tables_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_factory_with_dialect_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_bad_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_default_query_cls",
      "pypika/tests/test_tables.py::TableDialectTests::test_table_with_dialect_query_cls",
      "pypika/tests/test_terms.py::FieldAliasTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::FieldInitTests::test_init_with_str_table",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_aliased_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_non_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_eq_fields_equally_hashed",
      "pypika/tests/test_terms.py::FieldHashingTests::test_tabled_ne_fields_differently_hashed",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_passes_kwargs_to_field_get_sql",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_alias_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_not_specified",
      "pypika/tests/test_terms.py::AtTimezoneTests::test_when_interval_specified",
      "pypika/tests/test_tuples.py::TupleTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_both",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_left",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_equality_tuple_on_right",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_mixed_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_pypika_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_in_using_python_tuples",
      "pypika/tests/test_tuples.py::TupleTests::test_tuple_is_aggregate",
      "pypika/tests/test_tuples.py::TupleTests::test_tuples_in_join",
      "pypika/tests/test_tuples.py::ArrayTests::test_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_empty_psql_array",
      "pypika/tests/test_tuples.py::ArrayTests::test_psql_array_general",
      "pypika/tests/test_tuples.py::ArrayTests::test_render_alias_in_array_sql",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets",
      "pypika/tests/test_tuples.py::BracketTests::test_arithmetic_with_brackets_and_alias",
      "pypika/tests/test_updates.py::UpdateTests::test_empty_query",
      "pypika/tests/test_updates.py::UpdateTests::test_for_portion",
      "pypika/tests/test_updates.py::UpdateTests::test_omit_where",
      "pypika/tests/test_updates.py::UpdateTests::test_single_quote_escape_in_set",
      "pypika/tests/test_updates.py::UpdateTests::test_update__table_schema",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from",
      "pypika/tests/test_updates.py::UpdateTests::test_update_from_with_where",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_join",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_limit",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_none",
      "pypika/tests/test_updates.py::UpdateTests::test_update_with_statement",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_from_different_tables",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_star",
      "pypika/tests/test_updates.py::PostgresUpdateTests::test_update_returning_str",
      "pypika/tests/test_updates.py::SQLLiteUpdateTests::test_update_with_bool",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_deepcopy",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getnewargs",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_getstate",
      "pypika/tests/test_utils.py::ImmutabilityTests::test_raise_attribute_error_for_setstate"
    ],
    "created_at": "2025-06-19T18:37:26.633163",
    "image_name": "swesmith.x86_64.kayak__pypika.1c9646f0",
    "base_commit": "main",
    "problem_statement": "Mutating side-effects when re-using a QueryBuilder  \n=================================================\n\nHey there \ud83d\udc4b\n\nSomething seems to have slipped in lately: re-using an existing `Query` to build a second query now mutates the first one as well.  \nThis breaks the \u201cqueries are immutable\u201d contract that has held for years and makes it pretty easy to accidentally change earlier queries in a longer chain.\n\nRepro script\n------------\n\n```python\nfrom pypika import Query, Table\n\ntbl_a = Table('a')\ntbl_b = Table('b')\n\n# 1) create a base query\nq1 = Query.from_(tbl_a).select(tbl_a.foo)\n\n# 2) derive a new query from the first one\nq2 = q1.select(tbl_a.bar)\n\nprint(\"q1 :\", q1)      # <-- unexpected\nprint(\"q2 :\", q2)\n```\n\nOn current `main` (and the latest wheel built from it) this prints:\n\n```\nq1 : SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\nq2 : SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\n```\n\nExpected behaviour\n------------------\n\nBefore the recent change (and according to the docs/examples) `q1` should stay untouched:\n\n```\nq1 : SELECT \"a\".\"foo\" FROM \"a\"\nq2 : SELECT \"a\".\"foo\",\"a\".\"bar\" FROM \"a\"\n```\n\nWhy it matters\n--------------\n\nThe same problem shows up in other builder operations:\n\n```python\nq3 = Query.from_(tbl_a).select(tbl_a.foo)\nq4 = q3.join(tbl_b).on(tbl_a.foo == tbl_b.bar).select(tbl_b.buz)\n\nprint(q3)  # should be: SELECT \"foo\" FROM \"a\"\nprint(q4)  # should be: SELECT \"a\".\"foo\",\"b\".\"buz\" FROM \"a\" JOIN \"b\" ON \"a\".\"foo\"=\"b\".\"bar\"\n```\n\n\u2026but `q3` now prints the long, joined statement as well.  \nIf a large codebase keeps references to the first query (for logging, caching, etc.) those logs / caches suddenly contain the modified SQL.\n\nEnvironment\n-----------\n\n```\nimport platform, sys, pypika, itertools, logging\nprint(platform.platform())\nprint(\"Python\", sys.version)\nprint(\"PyPika\", pypika.__version__)\n```\n\n(Observed with Python 3.10.12 on macOS and on Ubuntu 22.04.  The behaviour was still correct on 0.48.9, started to change with the latest commit on `main`.)\n\nLet me know if you need any further details. Happy to help track this down!"
  },
  {
    "instance_id": "kurtmckee__feedparser.cad965a3.sweagent_buggen__63ad560e",
    "repo": "swesmith/kurtmckee__feedparser.cad965a3",
    "patch": "diff --git a/feedparser/util.py b/feedparser/util.py\nindex ded2539d..cba2ab21 100644\n--- a/feedparser/util.py\n+++ b/feedparser/util.py\n@@ -140,7 +140,7 @@ class FeedParserDict(dict):\n     def __setitem__(self, key, value):\n         key = self.keymap.get(key, key)\n         if isinstance(key, list):\n-            key = key[0]\n+            key = key.pop(0)\n         return dict.__setitem__(self, key, value)\n \n     def __getattr__(self, key):\n",
    "FAIL_TO_PASS": [
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_charset_overrides_encoding_2.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/double-encoded-html.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/bozo_double-encoded-html.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/euc-kr-attribute.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/demoronize-1.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/demoronize-3.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_charset_2.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/euc-kr-item.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/demoronize-2.xml]",
      "tests/test_feedparser_dict.py::test_multiple_mapping_target_1",
      "tests/test_feedparser_dict.py::test_multiple_mapping_mapped_key",
      "tests/test_well_formed.py::test_strict_parser[info1311]",
      "tests/test_well_formed.py::test_http_conditions[info30]",
      "tests/test_well_formed.py::test_strict_parser[info1302]",
      "tests/test_well_formed.py::test_strict_parser[info1405]",
      "tests/test_well_formed.py::test_strict_parser[info1587]",
      "tests/test_well_formed.py::test_strict_parser[info1348]",
      "tests/test_well_formed.py::test_strict_parser[info1232]",
      "tests/test_well_formed.py::test_loose_parser[info1273]",
      "tests/test_well_formed.py::test_strict_parser[info968]",
      "tests/test_well_formed.py::test_strict_parser[info1298]",
      "tests/test_well_formed.py::test_loose_parser[info1311]",
      "tests/test_well_formed.py::test_http_conditions[info95]",
      "tests/test_well_formed.py::test_strict_parser[info1273]",
      "tests/test_well_formed.py::test_strict_parser[info1471]",
      "tests/test_well_formed.py::test_strict_parser[info1276]",
      "tests/test_well_formed.py::test_loose_parser[info1428]",
      "tests/test_well_formed.py::test_strict_parser[info1338]",
      "tests/test_well_formed.py::test_strict_parser[info1579]",
      "tests/test_well_formed.py::test_loose_parser[info1348]",
      "tests/test_well_formed.py::test_loose_parser[info1471]",
      "tests/test_well_formed.py::test_http_conditions[info31]",
      "tests/test_well_formed.py::test_loose_parser[info1538]",
      "tests/test_well_formed.py::test_loose_parser[info1338]",
      "tests/test_well_formed.py::test_http_conditions[info71]",
      "tests/test_well_formed.py::test_http_conditions[info90]",
      "tests/test_well_formed.py::test_loose_parser[info1341]",
      "tests/test_well_formed.py::test_strict_parser[info1476]",
      "tests/test_well_formed.py::test_strict_parser[info1417]",
      "tests/test_well_formed.py::test_loose_parser[info1476]",
      "tests/test_well_formed.py::test_loose_parser[info1245]",
      "tests/test_well_formed.py::test_loose_parser[info1302]",
      "tests/test_well_formed.py::test_loose_parser[info1577]",
      "tests/test_well_formed.py::test_loose_parser[info1298]",
      "tests/test_well_formed.py::test_strict_parser[info1538]",
      "tests/test_well_formed.py::test_loose_parser[info1549]",
      "tests/test_well_formed.py::test_loose_parser[info1587]",
      "tests/test_well_formed.py::test_loose_parser[info1466]",
      "tests/test_well_formed.py::test_loose_parser[info1417]",
      "tests/test_well_formed.py::test_loose_parser[info1579]",
      "tests/test_well_formed.py::test_strict_parser[info1385]",
      "tests/test_well_formed.py::test_loose_parser[info1504]",
      "tests/test_well_formed.py::test_loose_parser[info1385]",
      "tests/test_well_formed.py::test_strict_parser[info1466]",
      "tests/test_well_formed.py::test_loose_parser[info1517]",
      "tests/test_well_formed.py::test_loose_parser[info1405]",
      "tests/test_well_formed.py::test_strict_parser[info1582]",
      "tests/test_well_formed.py::test_strict_parser[info849]",
      "tests/test_well_formed.py::test_loose_parser[info1276]",
      "tests/test_well_formed.py::test_loose_parser[info1236]",
      "tests/test_well_formed.py::test_strict_parser[info1226]",
      "tests/test_well_formed.py::test_loose_parser[info1232]",
      "tests/test_well_formed.py::test_strict_parser[info1428]",
      "tests/test_well_formed.py::test_strict_parser[info1341]",
      "tests/test_well_formed.py::test_loose_parser[info1615]",
      "tests/test_well_formed.py::test_loose_parser[info1226]",
      "tests/test_well_formed.py::test_strict_parser[info1245]",
      "tests/test_well_formed.py::test_strict_parser[info1236]",
      "tests/test_well_formed.py::test_loose_parser[info968]",
      "tests/test_well_formed.py::test_http_conditions[info78]",
      "tests/test_well_formed.py::test_strict_parser[info1504]",
      "tests/test_well_formed.py::test_loose_parser[info1582]",
      "tests/test_well_formed.py::test_strict_parser[info1549]",
      "tests/test_well_formed.py::test_http_conditions[info83]",
      "tests/test_well_formed.py::test_http_conditions[info21]",
      "tests/test_well_formed.py::test_loose_parser[info1309]",
      "tests/test_well_formed.py::test_strict_parser[info1309]",
      "tests/test_well_formed.py::test_loose_parser[info1544]",
      "tests/test_well_formed.py::test_http_conditions[info56]",
      "tests/test_well_formed.py::test_loose_parser[info849]",
      "tests/test_well_formed.py::test_http_conditions[info67]"
    ],
    "PASS_TO_PASS": [
      "tests/test_sanitizer.py::test_style_attr_can_be_disabled",
      "tests/test_sanitizer.py::test_style_attr_is_enabled",
      "tests/test_parse_parameters.py::test_sanitize_html_off",
      "tests/test_parse_parameters.py::test_sanitize_html_default",
      "tests/test_parse_parameters.py::test_resolve_relative_uris_default",
      "tests/test_parse_parameters.py::test_resolve_relative_uris_on",
      "tests/test_parse_parameters.py::test_resolve_relative_uris_off",
      "tests/test_parse_parameters.py::test_sanitize_html_on",
      "tests/test_json.py::test_json[path0]",
      "tests/test_open_resource.py::test_unicode_1",
      "tests/test_open_resource.py::test_string",
      "tests/test_open_resource.py::testbytes",
      "tests/test_open_resource.py::test_unicode_2",
      "tests/test_open_resource.py::test_fileobj",
      "tests/test_temporary_behavior.py::test_issue_328_fallback_behavior",
      "tests/test_make_safe_absolute_uri.py::test_catch_value_error[http://bad]test/]",
      "tests/test_ill_formed.py::test_strict_parser[info8]",
      "tests/test_ill_formed.py::test_strict_parser[info2]",
      "tests/test_ill_formed.py::test_strict_parser[info9]",
      "tests/test_ill_formed.py::test_strict_parser[info5]",
      "tests/test_ill_formed.py::test_strict_parser[info1]",
      "tests/test_ill_formed.py::test_strict_parser[info4]",
      "tests/test_ill_formed.py::test_strict_parser[info3]",
      "tests/test_ill_formed.py::test_strict_parser[info7]",
      "tests/test_ill_formed.py::test_http_conditions[info0]",
      "tests/test_ill_formed.py::test_strict_parser[info6]",
      "tests/test_ill_formed.py::test_strict_parser[info0]",
      "tests/test_encoding.py::test_doctype_replacement",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_default.xml]",
      "tests/test_encoding.py::test_encoding[cp_is]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/bozo_http_i18n.xml]",
      "tests/test_encoding.py::test_encoding[windows_1255]",
      "tests/test_encoding.py::test_encoding[windows-1258]",
      "tests/test_encoding.py::test_encoding[ibm437]",
      "tests/test_encoding.py::test_encoding[cp437]",
      "tests/test_encoding.py::test_encoding[csibm865]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_be]",
      "tests/test_encoding.py::test_encoding[ibm857]",
      "tests/test_encoding.py::test_encoding[windows_1254]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf_32.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16be.xml]",
      "tests/test_encoding.py::test_encoding[windows_1256]",
      "tests/test_encoding.py::test_encoding[windows-1252]",
      "tests/test_encoding.py::test_encoding[csibm500]",
      "tests/test_encoding.py::test_encoding[cp860]",
      "tests/test_encoding.py::test_encoding[437]",
      "tests/test_encoding.py::test_encoding[cp037]",
      "tests/test_encoding.py::test_encoding[cp500]",
      "tests/test_encoding.py::test_encoding[857]",
      "tests/test_encoding.py::test_encoding[cp864]",
      "tests/test_encoding.py::test_encoding[ibm855]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_rss_xml_charset.xml]",
      "tests/test_encoding.py::test_encoding[cspc8codepage437]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_charset.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/bozo_http_text_plain_charset.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32le.xml]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_nl]",
      "tests/test_encoding.py::test_encoding[windows-1253]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_epe_encoding.xml]",
      "tests/test_encoding.py::test_encoding[csibm037]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16le-bom.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_encoding_attribute_crash.xml]",
      "tests/test_encoding.py::test_encoding[ibm863]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_charset.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_epe_charset.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_rss_xml_default.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[ibm775]",
      "tests/test_encoding.py::test_encoding[cspcp852]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_charset.xml]",
      "tests/test_encoding.py::test_encoding[koi8-r]",
      "tests/test_encoding.py::test_encoding[cp1253]",
      "tests/test_encoding.py::test_encoding[cspc775baltic]",
      "tests/test_encoding.py::test_encoding[860]",
      "tests/test_encoding.py::test_encoding[ibm862]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_dtd_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[cp1255]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_us]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_wt]",
      "tests/test_encoding.py::test_encoding[cp1251]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf16.xml]",
      "tests/test_encoding.py::test_encoding[ibm1140]",
      "tests/test_encoding.py::test_encoding[maccyrillic]",
      "tests/test_encoding.py::test_encoding[csibm866]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/bozo_bogus_encoding.xml]",
      "tests/test_encoding.py::test_encoding[855]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32be-autodetect.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32le-autodetect.xml]",
      "tests/test_encoding.py::test_encoding[cspc850multilingual]",
      "tests/test_encoding.py::test_encoding[cp861]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_gb2312_charset.xml]",
      "tests/test_encoding.py::test_encoding[ibm852]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_gb2312_encoding.xml]",
      "tests/test_encoding.py::test_encoding[csibm855]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_ca]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_atom_xml_encoding.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_dtd_default.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_epe_charset.xml]",
      "tests/test_encoding.py::test_encoding[csibm861]",
      "tests/test_encoding.py::test_encoding[863]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_rss_xml_encoding.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_default.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_epe_default.xml]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-nl]",
      "tests/test_encoding.py::test_encoding[866]",
      "tests/test_encoding.py::test_encoding[cp862]",
      "tests/test_encoding.py::test_encoding[csibm863]",
      "tests/test_encoding.py::test_encoding[861]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_epe_encoding.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf_16.xml]",
      "tests/test_encoding.py::test_encoding[windows-1250]",
      "tests/test_encoding.py::test_encoding[cp1257]",
      "tests/test_encoding.py::test_gb2312_converted_to_gb18030_in_xml_encoding",
      "tests/test_encoding.py::test_encoding[cp775]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_dtd_encoding.xml]",
      "tests/test_encoding.py::test_encoding[852]",
      "tests/test_encoding.py::test_encoding[862]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/bozo_linenoise.xml]",
      "tests/test_encoding.py::test_encoding[865]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32le-bom.xml]",
      "tests/test_encoding.py::test_encoding[cp856]",
      "tests/test_encoding.py::test_encoding[ibm865]",
      "tests/test_encoding.py::test_encoding[windows_1253]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_epe_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[ibm861]",
      "tests/test_encoding.py::test_encoding[macturkish]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/bozo_http_text_plain.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-8-bom.xml]",
      "tests/test_encoding.py::test_encoding[ibm850]",
      "tests/test_encoding.py::test_encoding[ibm866]",
      "tests/test_encoding.py::test_encoding[macgreek]",
      "tests/test_encoding.py::test_encoding[cp737]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-ca]",
      "tests/test_encoding.py::test_encoding[maciceland]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-be]",
      "tests/test_encoding.py::test_encoding[cp857]",
      "tests/test_encoding.py::test_encoding[maccentraleurope]",
      "tests/test_encoding.py::test_encoding[maclatin2]",
      "tests/test_encoding.py::test_encoding[cp865]",
      "tests/test_encoding.py::test_encoding[mac-cyrillic]",
      "tests/test_encoding.py::test_encoding[cp850]",
      "tests/test_encoding.py::test_encoding[cp1254]",
      "tests/test_encoding.py::test_encoding[cskoi8r]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_gb2312_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[850]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/bozo_invalid-bytes-with-bom.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_encoding.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16le.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16be-autodetect.xml]",
      "tests/test_encoding.py::test_encoding[koi8-u]",
      "tests/test_encoding.py::test_encoding[csibm864]",
      "tests/test_encoding.py::test_encoding[windows-1257]",
      "tests/test_encoding.py::test_encoding[windows-1256]",
      "tests/test_encoding.py::test_encoding[ibm037]",
      "tests/test_encoding.py::test_encoding[csibm860]",
      "tests/test_encoding.py::test_encoding[windows_1257]",
      "tests/test_encoding.py::test_encoding[cspc862latinhebrew]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_rss_xml_charset.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_i18n.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/encoding_attribute_crash.xml]",
      "tests/test_encoding.py::test_encoding[cp874]",
      "tests/test_encoding.py::test_encoding[windows-1251]",
      "tests/test_encoding.py::test_encoding[cp855]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-us]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/euc-kr.xml]",
      "tests/test_encoding.py::test_encoding[cp1258]",
      "tests/test_encoding.py::test_encoding[windows_1250]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/no_content_type_encoding.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16be-bom.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/encoding_attribute_crash_2.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_default.xml]",
      "tests/test_encoding.py::test_encoding[koi8-t]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_rss_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[macintosh]",
      "tests/test_encoding.py::test_encoding[ibm039]",
      "tests/test_encoding.py::test_encoding[macroman]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32be-bom.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_atom_xml_encoding.xml]",
      "tests/test_encoding.py::test_encoding[ibm860]",
      "tests/test_encoding.py::test_encoding[csibm857]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_atom_xml_charset.xml]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-ch]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_qs.xml]",
      "tests/test_encoding.py::test_encoding[ebcdic_cp_ch]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_bogus_charset.xml]",
      "tests/test_encoding.py::test_encoding[cp1252]",
      "tests/test_encoding.py::test_encoding[windows_1251]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_epe_default.xml]",
      "tests/test_encoding.py::test_encoding[cp1250]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_atom_xml_default.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-32be.xml]",
      "tests/test_encoding.py::test_encoding[cp866]",
      "tests/test_encoding.py::test_encoding[ibm500]",
      "tests/test_encoding.py::test_encoding[ebcdic-cp-wt]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/bozo_encoding_mismatch_crash.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/u16.xml]",
      "tests/test_encoding.py::test_encoding[cp863]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_rss_xml_default.xml]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/utf-16le-autodetect.xml]",
      "tests/test_encoding.py::test_encoding[windows-1254]",
      "tests/test_encoding.py::test_encoding[cp875]",
      "tests/test_encoding.py::test_encoding[cp852]",
      "tests/test_encoding.py::test_encoding[windows-1255]",
      "tests/test_encoding.py::test_encoding[ibm864]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/big5.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_rss_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_rss_xml_encoding.xml]",
      "tests/test_encoding.py::test_encoding[cp1256]",
      "tests/test_encoding.py::test_encoding[windows_1258]",
      "tests/test_encoding.py::test_encoding[windows_1252]",
      "tests/test_encoding.py::test_local_encoding_file[./tests/encoding/no_content_type_default.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_atom_xml_charset_overrides_encoding.xml]",
      "tests/test_encoding.py::test_encoding[cp1125]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_dtd_charset.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_text_xml_bogus_param.xml]",
      "tests/test_encoding.py::test_http_encoding_file[./tests/encoding/http_application_xml_epe_charset_overrides_encoding.xml]",
      "tests/test_everything_is_unicode.py::test_not_everything_is_unicode[example1]",
      "tests/test_everything_is_unicode.py::test_not_everything_is_unicode[example0]",
      "tests/test_everything_is_unicode.py::test_not_everything_is_unicode[example2]",
      "tests/test_everything_is_unicode.py::test_everything_is_unicode",
      "tests/test_everything_is_unicode.py::test_not_everything_is_unicode[example3]",
      "tests/test_entities.py::test_entities_loose[info2]",
      "tests/test_entities.py::test_entities_strict[info122]",
      "tests/test_entities.py::test_entities_loose[info44]",
      "tests/test_entities.py::test_entities_strict[info150]",
      "tests/test_entities.py::test_entities_strict[info58]",
      "tests/test_entities.py::test_entities_strict[info59]",
      "tests/test_entities.py::test_entities_strict[info136]",
      "tests/test_entities.py::test_entities_strict[info95]",
      "tests/test_entities.py::test_entities_loose[info24]",
      "tests/test_entities.py::test_entities_loose[info194]",
      "tests/test_entities.py::test_entities_strict[info87]",
      "tests/test_entities.py::test_entities_loose[info142]",
      "tests/test_entities.py::test_entities_loose[info19]",
      "tests/test_entities.py::test_entities_loose[info110]",
      "tests/test_entities.py::test_entities_loose[info103]",
      "tests/test_entities.py::test_entities_strict[info89]",
      "tests/test_entities.py::test_entities_loose[info127]",
      "tests/test_entities.py::test_entities_loose[info6]",
      "tests/test_entities.py::test_entities_strict[info10]",
      "tests/test_entities.py::test_entities_loose[info161]",
      "tests/test_entities.py::test_entities_loose[info15]",
      "tests/test_entities.py::test_entities_strict[info220]",
      "tests/test_entities.py::test_entities_loose[info228]",
      "tests/test_entities.py::test_entities_loose[info25]",
      "tests/test_entities.py::test_entities_loose[info32]",
      "tests/test_entities.py::test_entities_loose[info102]",
      "tests/test_entities.py::test_entities_loose[info9]",
      "tests/test_entities.py::test_entities_strict[info185]",
      "tests/test_entities.py::test_entities_loose[info217]",
      "tests/test_entities.py::test_entities_strict[info106]",
      "tests/test_entities.py::test_entities_loose[info145]",
      "tests/test_entities.py::test_entities_loose[info146]",
      "tests/test_entities.py::test_entities_strict[info166]",
      "tests/test_entities.py::test_entities_loose[info223]",
      "tests/test_entities.py::test_entities_loose[info204]",
      "tests/test_entities.py::test_entities_strict[info82]",
      "tests/test_entities.py::test_entities_strict[info152]",
      "tests/test_entities.py::test_entities_strict[info219]",
      "tests/test_entities.py::test_entities_loose[info147]",
      "tests/test_entities.py::test_entities_loose[info54]",
      "tests/test_entities.py::test_entities_strict[info176]",
      "tests/test_entities.py::test_entities_strict[info113]",
      "tests/test_entities.py::test_entities_loose[info163]",
      "tests/test_entities.py::test_entities_loose[info94]",
      "tests/test_entities.py::test_entities_loose[info57]",
      "tests/test_entities.py::test_entities_loose[info56]",
      "tests/test_entities.py::test_entities_strict[info183]",
      "tests/test_entities.py::test_entities_loose[info16]",
      "tests/test_entities.py::test_entities_strict[info157]",
      "tests/test_entities.py::test_entities_loose[info136]",
      "tests/test_entities.py::test_entities_strict[info132]",
      "tests/test_entities.py::test_entities_loose[info158]",
      "tests/test_entities.py::test_entities_strict[info170]",
      "tests/test_entities.py::test_entities_loose[info197]",
      "tests/test_entities.py::test_entities_strict[info236]",
      "tests/test_entities.py::test_entities_loose[info26]",
      "tests/test_entities.py::test_entities_strict[info209]",
      "tests/test_entities.py::test_entities_loose[info254]",
      "tests/test_entities.py::test_entities_loose[info230]",
      "tests/test_entities.py::test_entities_strict[info182]",
      "tests/test_entities.py::test_entities_strict[info6]",
      "tests/test_entities.py::test_entities_loose[info107]",
      "tests/test_entities.py::test_entities_strict[info77]",
      "tests/test_entities.py::test_entities_strict[info39]",
      "tests/test_entities.py::test_entities_strict[info90]",
      "tests/test_entities.py::test_entities_loose[info101]",
      "tests/test_entities.py::test_entities_strict[info19]",
      "tests/test_entities.py::test_entities_strict[info142]",
      "tests/test_entities.py::test_entities_strict[info2]",
      "tests/test_entities.py::test_entities_strict[info72]",
      "tests/test_entities.py::test_entities_loose[info135]",
      "tests/test_entities.py::test_entities_strict[info29]",
      "tests/test_entities.py::test_entities_strict[info5]",
      "tests/test_entities.py::test_entities_strict[info180]",
      "tests/test_entities.py::test_entities_loose[info21]",
      "tests/test_entities.py::test_entities_loose[info221]",
      "tests/test_entities.py::test_entities_strict[info226]",
      "tests/test_entities.py::test_entities_strict[info190]",
      "tests/test_entities.py::test_entities_loose[info141]",
      "tests/test_entities.py::test_entities_loose[info55]",
      "tests/test_entities.py::test_entities_strict[info247]",
      "tests/test_entities.py::test_entities_strict[info50]",
      "tests/test_entities.py::test_entities_strict[info144]",
      "tests/test_entities.py::test_entities_strict[info178]",
      "tests/test_entities.py::test_entities_loose[info139]",
      "tests/test_entities.py::test_entities_loose[info87]",
      "tests/test_entities.py::test_entities_loose[info1]",
      "tests/test_entities.py::test_entities_loose[info53]",
      "tests/test_entities.py::test_entities_loose[info126]",
      "tests/test_entities.py::test_entities_loose[info168]",
      "tests/test_entities.py::test_entities_strict[info202]",
      "tests/test_entities.py::test_entities_loose[info207]",
      "tests/test_entities.py::test_entities_strict[info22]",
      "tests/test_entities.py::test_entities_strict[info165]",
      "tests/test_entities.py::test_entities_strict[info128]",
      "tests/test_entities.py::test_entities_strict[info252]",
      "tests/test_entities.py::test_entities_loose[info202]",
      "tests/test_entities.py::test_entities_strict[info74]",
      "tests/test_entities.py::test_entities_loose[info62]",
      "tests/test_entities.py::test_entities_loose[info172]",
      "tests/test_entities.py::test_entities_strict[info91]",
      "tests/test_entities.py::test_entities_loose[info63]",
      "tests/test_entities.py::test_entities_loose[info185]",
      "tests/test_entities.py::test_entities_strict[info93]",
      "tests/test_entities.py::test_entities_loose[info153]",
      "tests/test_entities.py::test_entities_loose[info69]",
      "tests/test_entities.py::test_entities_loose[info239]",
      "tests/test_entities.py::test_entities_strict[info18]",
      "tests/test_entities.py::test_entities_strict[info162]",
      "tests/test_entities.py::test_entities_loose[info84]",
      "tests/test_entities.py::test_entities_strict[info169]",
      "tests/test_entities.py::test_entities_loose[info227]",
      "tests/test_entities.py::test_entities_strict[info181]",
      "tests/test_entities.py::test_entities_strict[info234]",
      "tests/test_entities.py::test_entities_loose[info184]",
      "tests/test_entities.py::test_entities_strict[info48]",
      "tests/test_entities.py::test_entities_strict[info243]",
      "tests/test_entities.py::test_entities_strict[info85]",
      "tests/test_entities.py::test_entities_loose[info129]",
      "tests/test_entities.py::test_entities_strict[info135]",
      "tests/test_entities.py::test_entities_loose[info140]",
      "tests/test_entities.py::test_entities_strict[info14]",
      "tests/test_entities.py::test_entities_strict[info49]",
      "tests/test_entities.py::test_entities_loose[info36]",
      "tests/test_entities.py::test_entities_strict[info158]",
      "tests/test_entities.py::test_entities_loose[info89]",
      "tests/test_entities.py::test_entities_strict[info191]",
      "tests/test_entities.py::test_entities_strict[info92]",
      "tests/test_entities.py::test_entities_loose[info128]",
      "tests/test_entities.py::test_entities_loose[info49]",
      "tests/test_entities.py::test_entities_loose[info92]",
      "tests/test_entities.py::test_entities_loose[info199]",
      "tests/test_entities.py::test_entities_loose[info206]",
      "tests/test_entities.py::test_entities_loose[info118]",
      "tests/test_entities.py::test_entities_strict[info57]",
      "tests/test_entities.py::test_entities_loose[info236]",
      "tests/test_entities.py::test_entities_strict[info177]",
      "tests/test_entities.py::test_entities_loose[info18]",
      "tests/test_entities.py::test_entities_loose[info234]",
      "tests/test_entities.py::test_entities_loose[info37]",
      "tests/test_entities.py::test_entities_strict[info235]",
      "tests/test_entities.py::test_entities_strict[info143]",
      "tests/test_entities.py::test_entities_loose[info222]",
      "tests/test_entities.py::test_entities_strict[info204]",
      "tests/test_entities.py::test_entities_loose[info115]",
      "tests/test_entities.py::test_entities_strict[info116]",
      "tests/test_entities.py::test_entities_strict[info224]",
      "tests/test_entities.py::test_entities_loose[info28]",
      "tests/test_entities.py::test_entities_strict[info137]",
      "tests/test_entities.py::test_entities_loose[info203]",
      "tests/test_entities.py::test_entities_loose[info27]",
      "tests/test_entities.py::test_entities_loose[info68]",
      "tests/test_entities.py::test_entities_strict[info66]",
      "tests/test_entities.py::test_entities_strict[info231]",
      "tests/test_entities.py::test_entities_strict[info38]",
      "tests/test_entities.py::test_entities_loose[info97]",
      "tests/test_entities.py::test_entities_loose[info45]",
      "tests/test_entities.py::test_entities_strict[info96]",
      "tests/test_entities.py::test_entities_strict[info173]",
      "tests/test_entities.py::test_entities_loose[info218]",
      "tests/test_entities.py::test_entities_loose[info173]",
      "tests/test_entities.py::test_entities_loose[info253]",
      "tests/test_entities.py::test_entities_loose[info22]",
      "tests/test_entities.py::test_entities_strict[info227]",
      "tests/test_entities.py::test_entities_strict[info123]",
      "tests/test_entities.py::test_entities_loose[info120]",
      "tests/test_entities.py::test_entities_strict[info41]",
      "tests/test_entities.py::test_entities_loose[info143]",
      "tests/test_entities.py::test_entities_strict[info112]",
      "tests/test_entities.py::test_entities_loose[info167]",
      "tests/test_entities.py::test_entities_loose[info111]",
      "tests/test_entities.py::test_entities_strict[info45]",
      "tests/test_entities.py::test_entities_loose[info215]",
      "tests/test_entities.py::test_entities_strict[info222]",
      "tests/test_entities.py::test_entities_loose[info237]",
      "tests/test_entities.py::test_entities_loose[info79]",
      "tests/test_entities.py::test_entities_loose[info114]",
      "tests/test_entities.py::test_entities_loose[info208]",
      "tests/test_entities.py::test_entities_strict[info161]",
      "tests/test_entities.py::test_entities_loose[info70]",
      "tests/test_entities.py::test_entities_strict[info232]",
      "tests/test_entities.py::test_entities_strict[info86]",
      "tests/test_entities.py::test_entities_strict[info105]",
      "tests/test_entities.py::test_entities_strict[info26]",
      "tests/test_entities.py::test_entities_loose[info150]",
      "tests/test_entities.py::test_entities_strict[info51]",
      "tests/test_entities.py::test_entities_strict[info239]",
      "tests/test_entities.py::test_entities_strict[info210]",
      "tests/test_entities.py::test_entities_loose[info74]",
      "tests/test_entities.py::test_entities_loose[info211]",
      "tests/test_entities.py::test_entities_loose[info42]",
      "tests/test_entities.py::test_entities_loose[info240]",
      "tests/test_entities.py::test_entities_strict[info78]",
      "tests/test_entities.py::test_entities_loose[info133]",
      "tests/test_entities.py::test_entities_strict[info55]",
      "tests/test_entities.py::test_entities_strict[info70]",
      "tests/test_entities.py::test_entities_strict[info241]",
      "tests/test_entities.py::test_entities_strict[info225]",
      "tests/test_entities.py::test_entities_loose[info159]",
      "tests/test_entities.py::test_entities_loose[info238]",
      "tests/test_entities.py::test_entities_loose[info90]",
      "tests/test_entities.py::test_entities_strict[info15]",
      "tests/test_entities.py::test_entities_strict[info94]",
      "tests/test_entities.py::test_entities_loose[info249]",
      "tests/test_entities.py::test_entities_loose[info65]",
      "tests/test_entities.py::test_entities_loose[info209]",
      "tests/test_entities.py::test_entities_strict[info1]",
      "tests/test_entities.py::test_entities_loose[info195]",
      "tests/test_entities.py::test_entities_loose[info5]",
      "tests/test_entities.py::test_entities_strict[info121]",
      "tests/test_entities.py::test_entities_strict[info155]",
      "tests/test_entities.py::test_entities_strict[info164]",
      "tests/test_entities.py::test_entities_loose[info214]",
      "tests/test_entities.py::test_entities_loose[info122]",
      "tests/test_entities.py::test_entities_strict[info163]",
      "tests/test_entities.py::test_entities_strict[info237]",
      "tests/test_entities.py::test_entities_strict[info118]",
      "tests/test_entities.py::test_entities_strict[info171]",
      "tests/test_entities.py::test_entities_loose[info151]",
      "tests/test_entities.py::test_entities_loose[info41]",
      "tests/test_entities.py::test_entities_loose[info246]",
      "tests/test_entities.py::test_entities_loose[info220]",
      "tests/test_entities.py::test_entities_loose[info177]",
      "tests/test_entities.py::test_entities_strict[info47]",
      "tests/test_entities.py::test_entities_strict[info203]",
      "tests/test_entities.py::test_entities_strict[info255]",
      "tests/test_entities.py::test_entities_loose[info175]",
      "tests/test_entities.py::test_entities_strict[info186]",
      "tests/test_entities.py::test_entities_loose[info125]",
      "tests/test_entities.py::test_entities_loose[info12]",
      "tests/test_entities.py::test_entities_strict[info65]",
      "tests/test_entities.py::test_entities_loose[info252]",
      "tests/test_entities.py::test_entities_strict[info127]",
      "tests/test_entities.py::test_entities_strict[info117]",
      "tests/test_entities.py::test_entities_loose[info66]",
      "tests/test_entities.py::test_entities_strict[info201]",
      "tests/test_entities.py::test_entities_strict[info254]",
      "tests/test_entities.py::test_entities_loose[info17]",
      "tests/test_entities.py::test_entities_strict[info24]",
      "tests/test_entities.py::test_entities_strict[info27]",
      "tests/test_entities.py::test_entities_strict[info43]",
      "tests/test_entities.py::test_entities_strict[info188]",
      "tests/test_entities.py::test_entities_strict[info197]",
      "tests/test_entities.py::test_entities_loose[info108]",
      "tests/test_entities.py::test_entities_loose[info23]",
      "tests/test_entities.py::test_entities_strict[info240]",
      "tests/test_entities.py::test_entities_strict[info108]",
      "tests/test_entities.py::test_entities_loose[info255]",
      "tests/test_entities.py::test_entities_loose[info181]",
      "tests/test_entities.py::test_entities_strict[info3]",
      "tests/test_entities.py::test_entities_loose[info178]",
      "tests/test_entities.py::test_entities_loose[info241]",
      "tests/test_entities.py::test_entities_loose[info113]",
      "tests/test_entities.py::test_entities_loose[info91]",
      "tests/test_entities.py::test_entities_loose[info149]",
      "tests/test_entities.py::test_entities_strict[info0]",
      "tests/test_entities.py::test_entities_strict[info199]",
      "tests/test_entities.py::test_entities_loose[info186]",
      "tests/test_entities.py::test_entities_strict[info9]",
      "tests/test_entities.py::test_entities_strict[info229]",
      "tests/test_entities.py::test_entities_loose[info187]",
      "tests/test_entities.py::test_entities_loose[info130]",
      "tests/test_entities.py::test_entities_loose[info123]",
      "tests/test_entities.py::test_entities_loose[info225]",
      "tests/test_entities.py::test_entities_loose[info86]",
      "tests/test_entities.py::test_entities_loose[info233]",
      "tests/test_entities.py::test_entities_strict[info120]",
      "tests/test_entities.py::test_entities_strict[info75]",
      "tests/test_entities.py::test_entities_loose[info10]",
      "tests/test_entities.py::test_entities_strict[info37]",
      "tests/test_entities.py::test_entities_strict[info32]",
      "tests/test_entities.py::test_entities_loose[info235]",
      "tests/test_entities.py::test_entities_strict[info194]",
      "tests/test_entities.py::test_entities_loose[info244]",
      "tests/test_entities.py::test_entities_strict[info54]",
      "tests/test_entities.py::test_entities_strict[info79]",
      "tests/test_entities.py::test_entities_strict[info80]",
      "tests/test_entities.py::test_entities_loose[info99]",
      "tests/test_entities.py::test_entities_loose[info85]",
      "tests/test_entities.py::test_entities_strict[info119]",
      "tests/test_entities.py::test_entities_loose[info100]",
      "tests/test_entities.py::test_entities_loose[info180]",
      "tests/test_entities.py::test_entities_strict[info11]",
      "tests/test_entities.py::test_entities_loose[info213]",
      "tests/test_entities.py::test_entities_loose[info83]",
      "tests/test_entities.py::test_entities_strict[info156]",
      "tests/test_entities.py::test_entities_strict[info97]",
      "tests/test_entities.py::test_entities_strict[info187]",
      "tests/test_entities.py::test_entities_loose[info132]",
      "tests/test_entities.py::test_entities_strict[info214]",
      "tests/test_entities.py::test_entities_strict[info99]",
      "tests/test_entities.py::test_entities_strict[info81]",
      "tests/test_entities.py::test_entities_strict[info228]",
      "tests/test_entities.py::test_entities_loose[info198]",
      "tests/test_entities.py::test_entities_strict[info25]",
      "tests/test_entities.py::test_entities_strict[info104]",
      "tests/test_entities.py::test_entities_loose[info212]",
      "tests/test_entities.py::test_entities_strict[info56]",
      "tests/test_entities.py::test_entities_loose[info156]",
      "tests/test_entities.py::test_entities_strict[info217]",
      "tests/test_entities.py::test_entities_strict[info223]",
      "tests/test_entities.py::test_entities_loose[info193]",
      "tests/test_entities.py::test_entities_loose[info4]",
      "tests/test_entities.py::test_entities_strict[info67]",
      "tests/test_entities.py::test_entities_loose[info50]",
      "tests/test_entities.py::test_entities_loose[info229]",
      "tests/test_entities.py::test_entities_strict[info242]",
      "tests/test_entities.py::test_entities_strict[info174]",
      "tests/test_entities.py::test_entities_strict[info42]",
      "tests/test_entities.py::test_entities_strict[info153]",
      "tests/test_entities.py::test_entities_loose[info162]",
      "tests/test_entities.py::test_entities_loose[info226]",
      "tests/test_entities.py::test_entities_loose[info81]",
      "tests/test_entities.py::test_entities_strict[info7]",
      "tests/test_entities.py::test_entities_strict[info213]",
      "tests/test_entities.py::test_entities_strict[info139]",
      "tests/test_entities.py::test_entities_strict[info17]",
      "tests/test_entities.py::test_entities_strict[info31]",
      "tests/test_entities.py::test_entities_loose[info169]",
      "tests/test_entities.py::test_entities_strict[info148]",
      "tests/test_entities.py::test_entities_loose[info179]",
      "tests/test_entities.py::test_entities_loose[info200]",
      "tests/test_entities.py::test_entities_loose[info104]",
      "tests/test_entities.py::test_entities_strict[info211]",
      "tests/test_entities.py::test_entities_strict[info160]",
      "tests/test_entities.py::test_entities_loose[info73]",
      "tests/test_entities.py::test_entities_strict[info53]",
      "tests/test_entities.py::test_entities_loose[info148]",
      "tests/test_entities.py::test_entities_strict[info249]",
      "tests/test_entities.py::test_entities_loose[info98]",
      "tests/test_entities.py::test_entities_loose[info157]",
      "tests/test_entities.py::test_entities_strict[info138]",
      "tests/test_entities.py::test_entities_strict[info124]",
      "tests/test_entities.py::test_entities_strict[info154]",
      "tests/test_entities.py::test_entities_strict[info208]",
      "tests/test_entities.py::test_entities_loose[info43]",
      "tests/test_entities.py::test_entities_strict[info8]",
      "tests/test_entities.py::test_entities_strict[info46]",
      "tests/test_entities.py::test_entities_strict[info212]",
      "tests/test_entities.py::test_entities_loose[info34]",
      "tests/test_entities.py::test_entities_loose[info7]",
      "tests/test_entities.py::test_entities_strict[info172]",
      "tests/test_entities.py::test_entities_strict[info36]",
      "tests/test_entities.py::test_entities_loose[info3]",
      "tests/test_entities.py::test_entities_loose[info164]",
      "tests/test_entities.py::test_entities_strict[info110]",
      "tests/test_entities.py::test_entities_strict[info84]",
      "tests/test_entities.py::test_entities_loose[info242]",
      "tests/test_entities.py::test_entities_loose[info51]",
      "tests/test_entities.py::test_entities_strict[info238]",
      "tests/test_entities.py::test_entities_loose[info72]",
      "tests/test_entities.py::test_entities_loose[info182]",
      "tests/test_entities.py::test_entities_strict[info200]",
      "tests/test_entities.py::test_entities_loose[info192]",
      "tests/test_entities.py::test_entities_strict[info28]",
      "tests/test_entities.py::test_entities_loose[info232]",
      "tests/test_entities.py::test_entities_strict[info68]",
      "tests/test_entities.py::test_entities_strict[info151]",
      "tests/test_entities.py::test_entities_strict[info192]",
      "tests/test_entities.py::test_entities_strict[info21]",
      "tests/test_entities.py::test_entities_strict[info245]",
      "tests/test_entities.py::test_entities_strict[info34]",
      "tests/test_entities.py::test_entities_loose[info93]",
      "tests/test_entities.py::test_entities_loose[info216]",
      "tests/test_entities.py::test_entities_loose[info67]",
      "tests/test_entities.py::test_entities_strict[info111]",
      "tests/test_entities.py::test_entities_loose[info30]",
      "tests/test_entities.py::test_entities_strict[info147]",
      "tests/test_entities.py::test_entities_loose[info124]",
      "tests/test_entities.py::test_entities_loose[info8]",
      "tests/test_entities.py::test_entities_strict[info107]",
      "tests/test_entities.py::test_entities_strict[info189]",
      "tests/test_entities.py::test_entities_loose[info29]",
      "tests/test_entities.py::test_entities_loose[info160]",
      "tests/test_entities.py::test_entities_strict[info175]",
      "tests/test_entities.py::test_entities_loose[info174]",
      "tests/test_entities.py::test_entities_loose[info40]",
      "tests/test_entities.py::test_entities_strict[info61]",
      "tests/test_entities.py::test_entities_strict[info62]",
      "tests/test_entities.py::test_entities_strict[info52]",
      "tests/test_entities.py::test_entities_strict[info253]",
      "tests/test_entities.py::test_entities_strict[info125]",
      "tests/test_entities.py::test_entities_loose[info152]",
      "tests/test_entities.py::test_entities_loose[info116]",
      "tests/test_entities.py::test_entities_strict[info100]",
      "tests/test_entities.py::test_entities_strict[info159]",
      "tests/test_entities.py::test_entities_loose[info137]",
      "tests/test_entities.py::test_entities_loose[info210]",
      "tests/test_entities.py::test_entities_strict[info168]",
      "tests/test_entities.py::test_entities_loose[info144]",
      "tests/test_entities.py::test_entities_strict[info196]",
      "tests/test_entities.py::test_entities_strict[info30]",
      "tests/test_entities.py::test_entities_strict[info141]",
      "tests/test_entities.py::test_entities_strict[info129]",
      "tests/test_entities.py::test_entities_strict[info20]",
      "tests/test_entities.py::test_entities_loose[info219]",
      "tests/test_entities.py::test_entities_loose[info155]",
      "tests/test_entities.py::test_entities_strict[info130]",
      "tests/test_entities.py::test_entities_loose[info88]",
      "tests/test_entities.py::test_entities_loose[info95]",
      "tests/test_entities.py::test_entities_loose[info106]",
      "tests/test_entities.py::test_entities_loose[info20]",
      "tests/test_entities.py::test_entities_loose[info224]",
      "tests/test_entities.py::test_entities_strict[info69]",
      "tests/test_entities.py::test_entities_loose[info109]",
      "tests/test_entities.py::test_entities_loose[info38]",
      "tests/test_entities.py::test_entities_loose[info166]",
      "tests/test_entities.py::test_entities_loose[info48]",
      "tests/test_entities.py::test_entities_loose[info231]",
      "tests/test_entities.py::test_entities_strict[info216]",
      "tests/test_entities.py::test_entities_loose[info245]",
      "tests/test_entities.py::test_entities_loose[info138]",
      "tests/test_entities.py::test_entities_loose[info76]",
      "tests/test_entities.py::test_entities_loose[info14]",
      "tests/test_entities.py::test_entities_strict[info233]",
      "tests/test_entities.py::test_entities_loose[info80]",
      "tests/test_entities.py::test_entities_strict[info251]",
      "tests/test_entities.py::test_entities_strict[info244]",
      "tests/test_entities.py::test_entities_strict[info44]",
      "tests/test_entities.py::test_entities_strict[info184]",
      "tests/test_entities.py::test_entities_strict[info207]",
      "tests/test_entities.py::test_entities_strict[info167]",
      "tests/test_entities.py::test_entities_loose[info77]",
      "tests/test_entities.py::test_entities_strict[info218]",
      "tests/test_entities.py::test_entities_loose[info46]",
      "tests/test_entities.py::test_entities_loose[info47]",
      "tests/test_entities.py::test_entities_strict[info215]",
      "tests/test_entities.py::test_entities_strict[info146]",
      "tests/test_entities.py::test_entities_loose[info170]",
      "tests/test_entities.py::test_entities_loose[info117]",
      "tests/test_entities.py::test_entities_strict[info12]",
      "tests/test_entities.py::test_entities_strict[info195]",
      "tests/test_entities.py::test_entities_loose[info31]",
      "tests/test_entities.py::test_entities_strict[info246]",
      "tests/test_entities.py::test_entities_strict[info33]",
      "tests/test_entities.py::test_entities_loose[info205]",
      "tests/test_entities.py::test_entities_strict[info16]",
      "tests/test_entities.py::test_entities_strict[info193]",
      "tests/test_entities.py::test_entities_strict[info76]",
      "tests/test_entities.py::test_entities_strict[info88]",
      "tests/test_entities.py::test_entities_loose[info75]",
      "tests/test_entities.py::test_entities_loose[info251]",
      "tests/test_entities.py::test_entities_strict[info134]",
      "tests/test_entities.py::test_entities_strict[info206]",
      "tests/test_entities.py::test_entities_loose[info176]",
      "tests/test_entities.py::test_entities_loose[info248]",
      "tests/test_entities.py::test_entities_strict[info71]",
      "tests/test_entities.py::test_entities_loose[info154]",
      "tests/test_entities.py::test_entities_loose[info131]",
      "tests/test_entities.py::test_entities_strict[info131]",
      "tests/test_entities.py::test_entities_loose[info11]",
      "tests/test_entities.py::test_entities_loose[info61]",
      "tests/test_entities.py::test_entities_loose[info189]",
      "tests/test_entities.py::test_entities_strict[info115]",
      "tests/test_entities.py::test_entities_strict[info126]",
      "tests/test_entities.py::test_entities_strict[info248]",
      "tests/test_entities.py::test_entities_loose[info35]",
      "tests/test_entities.py::test_entities_strict[info145]",
      "tests/test_entities.py::test_entities_strict[info250]",
      "tests/test_entities.py::test_entities_strict[info133]",
      "tests/test_entities.py::test_entities_strict[info35]",
      "tests/test_entities.py::test_entities_loose[info0]",
      "tests/test_entities.py::test_entities_strict[info63]",
      "tests/test_entities.py::test_entities_loose[info105]",
      "tests/test_entities.py::test_entities_loose[info201]",
      "tests/test_entities.py::test_entities_loose[info39]",
      "tests/test_entities.py::test_entities_strict[info73]",
      "tests/test_entities.py::test_entities_loose[info78]",
      "tests/test_entities.py::test_entities_strict[info101]",
      "tests/test_entities.py::test_entities_strict[info13]",
      "tests/test_entities.py::test_entities_strict[info230]",
      "tests/test_entities.py::test_entities_loose[info247]",
      "tests/test_entities.py::test_entities_strict[info83]",
      "tests/test_entities.py::test_entities_loose[info119]",
      "tests/test_entities.py::test_entities_strict[info4]",
      "tests/test_entities.py::test_entities_loose[info165]",
      "tests/test_entities.py::test_entities_loose[info243]",
      "tests/test_entities.py::test_entities_loose[info171]",
      "tests/test_entities.py::test_entities_loose[info188]",
      "tests/test_entities.py::test_entities_strict[info179]",
      "tests/test_entities.py::test_entities_loose[info58]",
      "tests/test_entities.py::test_entities_strict[info149]",
      "tests/test_entities.py::test_entities_loose[info121]",
      "tests/test_entities.py::test_entities_loose[info196]",
      "tests/test_entities.py::test_entities_strict[info60]",
      "tests/test_entities.py::test_entities_loose[info59]",
      "tests/test_entities.py::test_entities_strict[info102]",
      "tests/test_entities.py::test_entities_loose[info183]",
      "tests/test_entities.py::test_entities_strict[info23]",
      "tests/test_entities.py::test_entities_loose[info134]",
      "tests/test_entities.py::test_entities_loose[info190]",
      "tests/test_entities.py::test_entities_strict[info40]",
      "tests/test_entities.py::test_entities_strict[info64]",
      "tests/test_entities.py::test_entities_strict[info98]",
      "tests/test_entities.py::test_entities_loose[info191]",
      "tests/test_entities.py::test_entities_loose[info71]",
      "tests/test_entities.py::test_entities_strict[info221]",
      "tests/test_entities.py::test_entities_strict[info198]",
      "tests/test_entities.py::test_entities_loose[info82]",
      "tests/test_entities.py::test_entities_strict[info140]",
      "tests/test_entities.py::test_entities_loose[info13]",
      "tests/test_entities.py::test_entities_strict[info114]",
      "tests/test_entities.py::test_entities_strict[info205]",
      "tests/test_entities.py::test_entities_strict[info109]",
      "tests/test_entities.py::test_entities_loose[info60]",
      "tests/test_entities.py::test_entities_loose[info52]",
      "tests/test_entities.py::test_entities_strict[info103]",
      "tests/test_entities.py::test_entities_loose[info250]",
      "tests/test_entities.py::test_entities_loose[info112]",
      "tests/test_entities.py::test_entities_loose[info96]",
      "tests/test_entities.py::test_entities_loose[info33]",
      "tests/test_entities.py::test_entities_loose[info64]",
      "tests/test_feedparser_dict.py::test_category",
      "tests/test_feedparser_dict.py::test_empty",
      "tests/test_feedparser_dict.py::test_single_mapping_target_1",
      "tests/test_feedparser_dict.py::test_license",
      "tests/test_feedparser_dict.py::test_neutral",
      "tests/test_feedparser_dict.py::test_multiple_mapping_target_2",
      "tests/test_feedparser_dict.py::test_single_mapping_target_2",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T25:14:55Z-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2013-01-28T09:xx:00Z-None]",
      "tests/test_date_parsers.py::test_year_10000_date",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31-expected_value52]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T10:61:55Z-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601-031231-expected_value6]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_perforce--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_hungarian--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2007-04-23T23:25:47.538+10:00-expected_value51]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-02-28T18:14:55-08:00-expected_value56]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-013-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-9999-12-31T23:59:59-99:99-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601-03335-expected_value9]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T10:14:55Z-expected_value48]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T10:14:55-08:00-expected_value49]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2013-01-27-01-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2013-01-28T09:00:00+00:xx-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2000-02-28T18:14:55-08:00-expected_value57]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-22013-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601--03-12-expected_value8]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601-2003-12-31T10:14:55.1234Z-expected_value10]",
      "tests/test_date_parsers.py::test_none",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2004-02-28T18:14:55-08:00-expected_value55]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2013-01-28T11:30:00-06:00Textra-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601-2003-012-31T10:14:55+00:00-expected_value11]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_onblog--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_nate--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601-03-12-31-expected_value7]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_rfc822--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_iso8601--0312-expected_value5]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2013-xx-27-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-expected_value54]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_hungarian-2004-j\\xfalius-13T9:15-05:00-expected_value3]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T10:14:61Z-None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_greek--None]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-31T18:14:55+08:00-expected_value50]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf-2003-12-expected_value53]",
      "tests/test_date_parsers.py::test_date_parser[_parse_date_w3dtf--None]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-8-kwargs5-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-8-kwargs5-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs3-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-8-kwargs6-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_to_utf8_decode_error_fallback",
      "tests/test_encoding_helpers.py::test_reset_file_wrapper",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs0-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs0-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs4-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs1-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs2-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-8-kwargs6-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-8-kwargs6-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-8-kwargs6-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_prefix_file_wrapper[_make_file]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs4-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_prefix_file_wrapper_no_prefix",
      "tests/test_encoding_helpers.py::test_convert_file_to_utf8[8192-headers0]",
      "tests/test_encoding_helpers.py::test_prefix_file_wrapper[_make_file_one_by_one]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-8-kwargs5-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs3-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_to_utf8[65536-headers0]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs1-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_to_utf8[8192-headers1]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs3-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs2-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs3-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_prefix_file_wrapper[_make_file_in_the_middle]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs4-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs4-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs1-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs2-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_to_utf8[65536-headers1]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs0-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-8-kwargs5-\\U0001f600\\U0001f61b\\U0001f92f\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers0-1-kwargs0-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs2-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_encoding_helpers.py::test_convert_file_prefix_to_utf8[headers1-1-kwargs1-\\U0001f600a\\U0001f61bb\\U0001f92fc\\U0001f631]",
      "tests/test_well_formed.py::test_strict_parser[info802]",
      "tests/test_well_formed.py::test_loose_parser[info773]",
      "tests/test_well_formed.py::test_loose_parser[info1082]",
      "tests/test_well_formed.py::test_strict_parser[info1045]",
      "tests/test_well_formed.py::test_loose_parser[info151]",
      "tests/test_well_formed.py::test_loose_parser[info628]",
      "tests/test_well_formed.py::test_strict_parser[info6]",
      "tests/test_well_formed.py::test_loose_parser[info442]",
      "tests/test_well_formed.py::test_strict_parser[info1111]",
      "tests/test_well_formed.py::test_strict_parser[info930]",
      "tests/test_well_formed.py::test_strict_parser[info289]",
      "tests/test_well_formed.py::test_strict_parser[info906]",
      "tests/test_well_formed.py::test_loose_parser[info19]",
      "tests/test_well_formed.py::test_strict_parser[info815]",
      "tests/test_well_formed.py::test_loose_parser[info694]",
      "tests/test_well_formed.py::test_loose_parser[info1136]",
      "tests/test_well_formed.py::test_strict_parser[info1015]",
      "tests/test_well_formed.py::test_loose_parser[info962]",
      "tests/test_well_formed.py::test_loose_parser[info663]",
      "tests/test_well_formed.py::test_strict_parser[info613]",
      "tests/test_well_formed.py::test_strict_parser[info344]",
      "tests/test_well_formed.py::test_strict_parser[info424]",
      "tests/test_well_formed.py::test_http_conditions[info94]",
      "tests/test_well_formed.py::test_strict_parser[info1238]",
      "tests/test_well_formed.py::test_strict_parser[info568]",
      "tests/test_well_formed.py::test_loose_parser[info1483]",
      "tests/test_well_formed.py::test_strict_parser[info1080]",
      "tests/test_well_formed.py::test_strict_parser[info1578]",
      "tests/test_well_formed.py::test_strict_parser[info903]",
      "tests/test_well_formed.py::test_loose_parser[info591]",
      "tests/test_well_formed.py::test_loose_parser[info1451]",
      "tests/test_well_formed.py::test_strict_parser[info1613]",
      "tests/test_well_formed.py::test_strict_parser[info520]",
      "tests/test_well_formed.py::test_loose_parser[info1637]",
      "tests/test_well_formed.py::test_strict_parser[info1489]",
      "tests/test_well_formed.py::test_strict_parser[info1453]",
      "tests/test_well_formed.py::test_strict_parser[info405]",
      "tests/test_well_formed.py::test_loose_parser[info884]",
      "tests/test_well_formed.py::test_loose_parser[info821]",
      "tests/test_well_formed.py::test_strict_parser[info924]",
      "tests/test_well_formed.py::test_strict_parser[info756]",
      "tests/test_well_formed.py::test_strict_parser[info609]",
      "tests/test_well_formed.py::test_strict_parser[info717]",
      "tests/test_well_formed.py::test_loose_parser[info685]",
      "tests/test_well_formed.py::test_loose_parser[info250]",
      "tests/test_well_formed.py::test_strict_parser[info1607]",
      "tests/test_well_formed.py::test_strict_parser[info1214]",
      "tests/test_well_formed.py::test_loose_parser[info1249]",
      "tests/test_well_formed.py::test_loose_parser[info1485]",
      "tests/test_well_formed.py::test_strict_parser[info1263]",
      "tests/test_well_formed.py::test_loose_parser[info355]",
      "tests/test_well_formed.py::test_strict_parser[info1068]",
      "tests/test_well_formed.py::test_strict_parser[info1144]",
      "tests/test_well_formed.py::test_strict_parser[info551]",
      "tests/test_well_formed.py::test_strict_parser[info1026]",
      "tests/test_well_formed.py::test_loose_parser[info837]",
      "tests/test_well_formed.py::test_strict_parser[info1477]",
      "tests/test_well_formed.py::test_loose_parser[info41]",
      "tests/test_well_formed.py::test_strict_parser[info307]",
      "tests/test_well_formed.py::test_loose_parser[info1435]",
      "tests/test_well_formed.py::test_loose_parser[info1639]",
      "tests/test_well_formed.py::test_strict_parser[info1319]",
      "tests/test_well_formed.py::test_strict_parser[info872]",
      "tests/test_well_formed.py::test_loose_parser[info554]",
      "tests/test_well_formed.py::test_strict_parser[info1145]",
      "tests/test_well_formed.py::test_loose_parser[info924]",
      "tests/test_well_formed.py::test_strict_parser[info1132]",
      "tests/test_well_formed.py::test_loose_parser[info1035]",
      "tests/test_well_formed.py::test_loose_parser[info215]",
      "tests/test_well_formed.py::test_loose_parser[info33]",
      "tests/test_well_formed.py::test_strict_parser[info1209]",
      "tests/test_well_formed.py::test_strict_parser[info1096]",
      "tests/test_well_formed.py::test_strict_parser[info1626]",
      "tests/test_well_formed.py::test_loose_parser[info836]",
      "tests/test_well_formed.py::test_strict_parser[info399]",
      "tests/test_well_formed.py::test_loose_parser[info99]",
      "tests/test_well_formed.py::test_loose_parser[info592]",
      "tests/test_well_formed.py::test_strict_parser[info1043]",
      "tests/test_well_formed.py::test_loose_parser[info556]",
      "tests/test_well_formed.py::test_loose_parser[info844]",
      "tests/test_well_formed.py::test_strict_parser[info33]",
      "tests/test_well_formed.py::test_strict_parser[info145]",
      "tests/test_well_formed.py::test_strict_parser[info155]",
      "tests/test_well_formed.py::test_strict_parser[info267]",
      "tests/test_well_formed.py::test_loose_parser[info346]",
      "tests/test_well_formed.py::test_loose_parser[info1590]",
      "tests/test_well_formed.py::test_loose_parser[info25]",
      "tests/test_well_formed.py::test_strict_parser[info1383]",
      "tests/test_well_formed.py::test_strict_parser[info110]",
      "tests/test_well_formed.py::test_loose_parser[info506]",
      "tests/test_well_formed.py::test_loose_parser[info887]",
      "tests/test_well_formed.py::test_loose_parser[info1100]",
      "tests/test_well_formed.py::test_loose_parser[info101]",
      "tests/test_well_formed.py::test_http_conditions[info25]",
      "tests/test_well_formed.py::test_strict_parser[info441]",
      "tests/test_well_formed.py::test_strict_parser[info1012]",
      "tests/test_well_formed.py::test_loose_parser[info786]",
      "tests/test_well_formed.py::test_strict_parser[info1009]",
      "tests/test_well_formed.py::test_strict_parser[info141]",
      "tests/test_well_formed.py::test_strict_parser[info973]",
      "tests/test_well_formed.py::test_loose_parser[info503]",
      "tests/test_well_formed.py::test_strict_parser[info494]",
      "tests/test_well_formed.py::test_loose_parser[info873]",
      "tests/test_well_formed.py::test_loose_parser[info940]",
      "tests/test_well_formed.py::test_strict_parser[info1395]",
      "tests/test_well_formed.py::test_loose_parser[info1450]",
      "tests/test_well_formed.py::test_strict_parser[info811]",
      "tests/test_well_formed.py::test_loose_parser[info260]",
      "tests/test_well_formed.py::test_loose_parser[info470]",
      "tests/test_well_formed.py::test_loose_parser[info879]",
      "tests/test_well_formed.py::test_loose_parser[info1303]",
      "tests/test_well_formed.py::test_strict_parser[info477]",
      "tests/test_well_formed.py::test_loose_parser[info1147]",
      "tests/test_well_formed.py::test_strict_parser[info154]",
      "tests/test_well_formed.py::test_strict_parser[info482]",
      "tests/test_well_formed.py::test_loose_parser[info221]",
      "tests/test_well_formed.py::test_loose_parser[info1084]",
      "tests/test_well_formed.py::test_strict_parser[info330]",
      "tests/test_well_formed.py::test_strict_parser[info1551]",
      "tests/test_well_formed.py::test_loose_parser[info754]",
      "tests/test_well_formed.py::test_strict_parser[info548]",
      "tests/test_well_formed.py::test_strict_parser[info214]",
      "tests/test_well_formed.py::test_loose_parser[info633]",
      "tests/test_well_formed.py::test_strict_parser[info713]",
      "tests/test_well_formed.py::test_loose_parser[info654]",
      "tests/test_well_formed.py::test_loose_parser[info927]",
      "tests/test_well_formed.py::test_strict_parser[info956]",
      "tests/test_well_formed.py::test_loose_parser[info1351]",
      "tests/test_well_formed.py::test_loose_parser[info207]",
      "tests/test_well_formed.py::test_strict_parser[info169]",
      "tests/test_well_formed.py::test_loose_parser[info1414]",
      "tests/test_well_formed.py::test_strict_parser[info1218]",
      "tests/test_well_formed.py::test_loose_parser[info157]",
      "tests/test_well_formed.py::test_strict_parser[info370]",
      "tests/test_well_formed.py::test_strict_parser[info1559]",
      "tests/test_well_formed.py::test_loose_parser[info1013]",
      "tests/test_well_formed.py::test_strict_parser[info1600]",
      "tests/test_well_formed.py::test_loose_parser[info1290]",
      "tests/test_well_formed.py::test_http_conditions[info77]",
      "tests/test_well_formed.py::test_strict_parser[info1630]",
      "tests/test_well_formed.py::test_loose_parser[info1548]",
      "tests/test_well_formed.py::test_strict_parser[info1333]",
      "tests/test_well_formed.py::test_strict_parser[info1038]",
      "tests/test_well_formed.py::test_loose_parser[info1234]",
      "tests/test_well_formed.py::test_strict_parser[info530]",
      "tests/test_well_formed.py::test_loose_parser[info116]",
      "tests/test_well_formed.py::test_strict_parser[info290]",
      "tests/test_well_formed.py::test_strict_parser[info1375]",
      "tests/test_well_formed.py::test_loose_parser[info1312]",
      "tests/test_well_formed.py::test_loose_parser[info1404]",
      "tests/test_well_formed.py::test_loose_parser[info464]",
      "tests/test_well_formed.py::test_loose_parser[info395]",
      "tests/test_well_formed.py::test_http_conditions[info57]",
      "tests/test_well_formed.py::test_loose_parser[info1497]",
      "tests/test_well_formed.py::test_strict_parser[info164]",
      "tests/test_well_formed.py::test_strict_parser[info483]",
      "tests/test_well_formed.py::test_strict_parser[info888]",
      "tests/test_well_formed.py::test_strict_parser[info249]",
      "tests/test_well_formed.py::test_strict_parser[info219]",
      "tests/test_well_formed.py::test_strict_parser[info511]",
      "tests/test_well_formed.py::test_loose_parser[info181]",
      "tests/test_well_formed.py::test_strict_parser[info316]",
      "tests/test_well_formed.py::test_loose_parser[info374]",
      "tests/test_well_formed.py::test_strict_parser[info1334]",
      "tests/test_well_formed.py::test_loose_parser[info1153]",
      "tests/test_well_formed.py::test_loose_parser[info139]",
      "tests/test_well_formed.py::test_strict_parser[info920]",
      "tests/test_well_formed.py::test_http_conditions[info27]",
      "tests/test_well_formed.py::test_loose_parser[info1318]",
      "tests/test_well_formed.py::test_loose_parser[info675]",
      "tests/test_well_formed.py::test_strict_parser[info880]",
      "tests/test_well_formed.py::test_strict_parser[info1362]",
      "tests/test_well_formed.py::test_strict_parser[info710]",
      "tests/test_well_formed.py::test_strict_parser[info806]",
      "tests/test_well_formed.py::test_strict_parser[info892]",
      "tests/test_well_formed.py::test_strict_parser[info309]",
      "tests/test_well_formed.py::test_strict_parser[info384]",
      "tests/test_well_formed.py::test_loose_parser[info1299]",
      "tests/test_well_formed.py::test_loose_parser[info915]",
      "tests/test_well_formed.py::test_loose_parser[info1216]",
      "tests/test_well_formed.py::test_loose_parser[info193]",
      "tests/test_well_formed.py::test_strict_parser[info1516]",
      "tests/test_well_formed.py::test_strict_parser[info820]",
      "tests/test_well_formed.py::test_strict_parser[info688]",
      "tests/test_well_formed.py::test_loose_parser[info942]",
      "tests/test_well_formed.py::test_loose_parser[info1619]",
      "tests/test_well_formed.py::test_strict_parser[info1086]",
      "tests/test_well_formed.py::test_loose_parser[info1562]",
      "tests/test_well_formed.py::test_strict_parser[info1473]",
      "tests/test_well_formed.py::test_strict_parser[info652]",
      "tests/test_well_formed.py::test_loose_parser[info789]",
      "tests/test_well_formed.py::test_strict_parser[info869]",
      "tests/test_well_formed.py::test_loose_parser[info575]",
      "tests/test_well_formed.py::test_strict_parser[info156]",
      "tests/test_well_formed.py::test_strict_parser[info333]",
      "tests/test_well_formed.py::test_loose_parser[info1448]",
      "tests/test_well_formed.py::test_loose_parser[info67]",
      "tests/test_well_formed.py::test_strict_parser[info518]",
      "tests/test_well_formed.py::test_http_conditions[info0]",
      "tests/test_well_formed.py::test_strict_parser[info1590]",
      "tests/test_well_formed.py::test_strict_parser[info942]",
      "tests/test_well_formed.py::test_loose_parser[info253]",
      "tests/test_well_formed.py::test_strict_parser[info376]",
      "tests/test_well_formed.py::test_strict_parser[info1557]",
      "tests/test_well_formed.py::test_strict_parser[info597]",
      "tests/test_well_formed.py::test_loose_parser[info886]",
      "tests/test_well_formed.py::test_strict_parser[info846]",
      "tests/test_well_formed.py::test_strict_parser[info60]",
      "tests/test_well_formed.py::test_strict_parser[info926]",
      "tests/test_well_formed.py::test_loose_parser[info1192]",
      "tests/test_well_formed.py::test_loose_parser[info63]",
      "tests/test_well_formed.py::test_loose_parser[info1269]",
      "tests/test_well_formed.py::test_loose_parser[info1542]",
      "tests/test_well_formed.py::test_loose_parser[info998]",
      "tests/test_well_formed.py::test_loose_parser[info311]",
      "tests/test_well_formed.py::test_loose_parser[info1621]",
      "tests/test_well_formed.py::test_loose_parser[info491]",
      "tests/test_well_formed.py::test_strict_parser[info631]",
      "tests/test_well_formed.py::test_loose_parser[info1121]",
      "tests/test_well_formed.py::test_strict_parser[info538]",
      "tests/test_well_formed.py::test_strict_parser[info661]",
      "tests/test_well_formed.py::test_strict_parser[info985]",
      "tests/test_well_formed.py::test_loose_parser[info1580]",
      "tests/test_well_formed.py::test_strict_parser[info1475]",
      "tests/test_well_formed.py::test_strict_parser[info1403]",
      "tests/test_well_formed.py::test_strict_parser[info1636]",
      "tests/test_well_formed.py::test_loose_parser[info599]",
      "tests/test_well_formed.py::test_strict_parser[info59]",
      "tests/test_well_formed.py::test_loose_parser[info48]",
      "tests/test_well_formed.py::test_strict_parser[info1624]",
      "tests/test_well_formed.py::test_loose_parser[info232]",
      "tests/test_well_formed.py::test_strict_parser[info644]",
      "tests/test_well_formed.py::test_strict_parser[info837]",
      "tests/test_well_formed.py::test_strict_parser[info1025]",
      "tests/test_well_formed.py::test_loose_parser[info917]",
      "tests/test_well_formed.py::test_strict_parser[info46]",
      "tests/test_well_formed.py::test_loose_parser[info384]",
      "tests/test_well_formed.py::test_strict_parser[info1296]",
      "tests/test_well_formed.py::test_loose_parser[info1044]",
      "tests/test_well_formed.py::test_loose_parser[info381]",
      "tests/test_well_formed.py::test_strict_parser[info1327]",
      "tests/test_well_formed.py::test_loose_parser[info504]",
      "tests/test_well_formed.py::test_strict_parser[info671]",
      "tests/test_well_formed.py::test_strict_parser[info1020]",
      "tests/test_well_formed.py::test_loose_parser[info642]",
      "tests/test_well_formed.py::test_strict_parser[info1360]",
      "tests/test_well_formed.py::test_strict_parser[info843]",
      "tests/test_well_formed.py::test_loose_parser[info1382]",
      "tests/test_well_formed.py::test_strict_parser[info633]",
      "tests/test_well_formed.py::test_strict_parser[info433]",
      "tests/test_well_formed.py::test_strict_parser[info1585]",
      "tests/test_well_formed.py::test_strict_parser[info1586]",
      "tests/test_well_formed.py::test_http_conditions[info33]",
      "tests/test_well_formed.py::test_loose_parser[info1600]",
      "tests/test_well_formed.py::test_loose_parser[info102]",
      "tests/test_well_formed.py::test_strict_parser[info1151]",
      "tests/test_well_formed.py::test_loose_parser[info579]",
      "tests/test_well_formed.py::test_strict_parser[info907]",
      "tests/test_well_formed.py::test_strict_parser[info1127]",
      "tests/test_well_formed.py::test_loose_parser[info196]",
      "tests/test_well_formed.py::test_loose_parser[info874]",
      "tests/test_well_formed.py::test_strict_parser[info343]",
      "tests/test_well_formed.py::test_loose_parser[info791]",
      "tests/test_well_formed.py::test_loose_parser[info684]",
      "tests/test_well_formed.py::test_strict_parser[info593]",
      "tests/test_well_formed.py::test_loose_parser[info708]",
      "tests/test_well_formed.py::test_loose_parser[info236]",
      "tests/test_well_formed.py::test_loose_parser[info954]",
      "tests/test_well_formed.py::test_strict_parser[info25]",
      "tests/test_well_formed.py::test_strict_parser[info423]",
      "tests/test_well_formed.py::test_strict_parser[info591]",
      "tests/test_well_formed.py::test_loose_parser[info1552]",
      "tests/test_well_formed.py::test_strict_parser[info1039]",
      "tests/test_well_formed.py::test_loose_parser[info228]",
      "tests/test_well_formed.py::test_loose_parser[info46]",
      "tests/test_well_formed.py::test_loose_parser[info424]",
      "tests/test_well_formed.py::test_strict_parser[info90]",
      "tests/test_well_formed.py::test_loose_parser[info897]",
      "tests/test_well_formed.py::test_loose_parser[info202]",
      "tests/test_well_formed.py::test_strict_parser[info839]",
      "tests/test_well_formed.py::test_loose_parser[info127]",
      "tests/test_well_formed.py::test_loose_parser[info1104]",
      "tests/test_well_formed.py::test_loose_parser[info238]",
      "tests/test_well_formed.py::test_loose_parser[info1574]",
      "tests/test_well_formed.py::test_strict_parser[info88]",
      "tests/test_well_formed.py::test_strict_parser[info419]",
      "tests/test_well_formed.py::test_strict_parser[info1046]",
      "tests/test_well_formed.py::test_loose_parser[info550]",
      "tests/test_well_formed.py::test_strict_parser[info255]",
      "tests/test_well_formed.py::test_loose_parser[info584]",
      "tests/test_well_formed.py::test_loose_parser[info112]",
      "tests/test_well_formed.py::test_strict_parser[info120]",
      "tests/test_well_formed.py::test_strict_parser[info118]",
      "tests/test_well_formed.py::test_strict_parser[info470]",
      "tests/test_well_formed.py::test_strict_parser[info1612]",
      "tests/test_well_formed.py::test_strict_parser[info1119]",
      "tests/test_well_formed.py::test_strict_parser[info1317]",
      "tests/test_well_formed.py::test_strict_parser[info1645]",
      "tests/test_well_formed.py::test_strict_parser[info1248]",
      "tests/test_well_formed.py::test_strict_parser[info972]",
      "tests/test_well_formed.py::test_strict_parser[info845]",
      "tests/test_well_formed.py::test_strict_parser[info1]",
      "tests/test_well_formed.py::test_loose_parser[info801]",
      "tests/test_well_formed.py::test_strict_parser[info984]",
      "tests/test_well_formed.py::test_loose_parser[info1137]",
      "tests/test_well_formed.py::test_strict_parser[info478]",
      "tests/test_well_formed.py::test_loose_parser[info1324]",
      "tests/test_well_formed.py::test_strict_parser[info893]",
      "tests/test_well_formed.py::test_loose_parser[info666]",
      "tests/test_well_formed.py::test_http_conditions[info52]",
      "tests/test_well_formed.py::test_loose_parser[info704]",
      "tests/test_well_formed.py::test_strict_parser[info565]",
      "tests/test_well_formed.py::test_strict_parser[info409]",
      "tests/test_well_formed.py::test_loose_parser[info686]",
      "tests/test_well_formed.py::test_loose_parser[info956]",
      "tests/test_well_formed.py::test_strict_parser[info584]",
      "tests/test_well_formed.py::test_strict_parser[info1509]",
      "tests/test_well_formed.py::test_strict_parser[info1250]",
      "tests/test_well_formed.py::test_strict_parser[info1351]",
      "tests/test_well_formed.py::test_loose_parser[info933]",
      "tests/test_well_formed.py::test_strict_parser[info657]",
      "tests/test_well_formed.py::test_strict_parser[info228]",
      "tests/test_well_formed.py::test_loose_parser[info1138]",
      "tests/test_well_formed.py::test_loose_parser[info124]",
      "tests/test_well_formed.py::test_loose_parser[info984]",
      "tests/test_well_formed.py::test_strict_parser[info283]",
      "tests/test_well_formed.py::test_loose_parser[info456]",
      "tests/test_well_formed.py::test_strict_parser[info723]",
      "tests/test_well_formed.py::test_loose_parser[info64]",
      "tests/test_well_formed.py::test_loose_parser[info630]",
      "tests/test_well_formed.py::test_loose_parser[info1292]",
      "tests/test_well_formed.py::test_loose_parser[info994]",
      "tests/test_well_formed.py::test_strict_parser[info184]",
      "tests/test_well_formed.py::test_loose_parser[info1444]",
      "tests/test_well_formed.py::test_loose_parser[info1354]",
      "tests/test_well_formed.py::test_loose_parser[info243]",
      "tests/test_well_formed.py::test_loose_parser[info1478]",
      "tests/test_well_formed.py::test_strict_parser[info515]",
      "tests/test_well_formed.py::test_strict_parser[info139]",
      "tests/test_well_formed.py::test_loose_parser[info725]",
      "tests/test_well_formed.py::test_loose_parser[info85]",
      "tests/test_well_formed.py::test_loose_parser[info1202]",
      "tests/test_well_formed.py::test_strict_parser[info241]",
      "tests/test_well_formed.py::test_strict_parser[info1001]",
      "tests/test_well_formed.py::test_loose_parser[info715]",
      "tests/test_well_formed.py::test_strict_parser[info500]",
      "tests/test_well_formed.py::test_loose_parser[info1489]",
      "tests/test_well_formed.py::test_strict_parser[info1416]",
      "tests/test_well_formed.py::test_strict_parser[info850]",
      "tests/test_well_formed.py::test_strict_parser[info881]",
      "tests/test_well_formed.py::test_loose_parser[info858]",
      "tests/test_well_formed.py::test_loose_parser[info1547]",
      "tests/test_well_formed.py::test_strict_parser[info1627]",
      "tests/test_well_formed.py::test_loose_parser[info1028]",
      "tests/test_well_formed.py::test_strict_parser[info220]",
      "tests/test_well_formed.py::test_loose_parser[info105]",
      "tests/test_well_formed.py::test_strict_parser[info1396]",
      "tests/test_well_formed.py::test_strict_parser[info792]",
      "tests/test_well_formed.py::test_loose_parser[info26]",
      "tests/test_well_formed.py::test_strict_parser[info223]",
      "tests/test_well_formed.py::test_strict_parser[info829]",
      "tests/test_well_formed.py::test_loose_parser[info1116]",
      "tests/test_well_formed.py::test_strict_parser[info838]",
      "tests/test_well_formed.py::test_loose_parser[info1194]",
      "tests/test_well_formed.py::test_strict_parser[info760]",
      "tests/test_well_formed.py::test_loose_parser[info79]",
      "tests/test_well_formed.py::test_loose_parser[info1646]",
      "tests/test_well_formed.py::test_strict_parser[info1384]",
      "tests/test_well_formed.py::test_strict_parser[info411]",
      "tests/test_well_formed.py::test_strict_parser[info945]",
      "tests/test_well_formed.py::test_strict_parser[info311]",
      "tests/test_well_formed.py::test_strict_parser[info1344]",
      "tests/test_well_formed.py::test_strict_parser[info1470]",
      "tests/test_well_formed.py::test_loose_parser[info527]",
      "tests/test_well_formed.py::test_loose_parser[info411]",
      "tests/test_well_formed.py::test_strict_parser[info1000]",
      "tests/test_well_formed.py::test_loose_parser[info593]",
      "tests/test_well_formed.py::test_strict_parser[info546]",
      "tests/test_well_formed.py::test_loose_parser[info1320]",
      "tests/test_well_formed.py::test_strict_parser[info706]",
      "tests/test_well_formed.py::test_strict_parser[info381]",
      "tests/test_well_formed.py::test_loose_parser[info302]",
      "tests/test_well_formed.py::test_loose_parser[info748]",
      "tests/test_well_formed.py::test_strict_parser[info1117]",
      "tests/test_well_formed.py::test_strict_parser[info950]",
      "tests/test_well_formed.py::test_strict_parser[info1286]",
      "tests/test_well_formed.py::test_loose_parser[info829]",
      "tests/test_well_formed.py::test_strict_parser[info1570]",
      "tests/test_well_formed.py::test_strict_parser[info443]",
      "tests/test_well_formed.py::test_strict_parser[info735]",
      "tests/test_well_formed.py::test_loose_parser[info1434]",
      "tests/test_well_formed.py::test_strict_parser[info1595]",
      "tests/test_well_formed.py::test_loose_parser[info283]",
      "tests/test_well_formed.py::test_loose_parser[info822]",
      "tests/test_well_formed.py::test_strict_parser[info1062]",
      "tests/test_well_formed.py::test_strict_parser[info904]",
      "tests/test_well_formed.py::test_loose_parser[info792]",
      "tests/test_well_formed.py::test_strict_parser[info740]",
      "tests/test_well_formed.py::test_strict_parser[info1081]",
      "tests/test_well_formed.py::test_strict_parser[info1589]",
      "tests/test_well_formed.py::test_loose_parser[info149]",
      "tests/test_well_formed.py::test_strict_parser[info366]",
      "tests/test_well_formed.py::test_strict_parser[info1346]",
      "tests/test_well_formed.py::test_strict_parser[info1189]",
      "tests/test_well_formed.py::test_loose_parser[info185]",
      "tests/test_well_formed.py::test_loose_parser[info80]",
      "tests/test_well_formed.py::test_loose_parser[info759]",
      "tests/test_well_formed.py::test_strict_parser[info1363]",
      "tests/test_well_formed.py::test_loose_parser[info871]",
      "tests/test_well_formed.py::test_loose_parser[info279]",
      "tests/test_well_formed.py::test_loose_parser[info980]",
      "tests/test_well_formed.py::test_strict_parser[info275]",
      "tests/test_well_formed.py::test_strict_parser[info1438]",
      "tests/test_well_formed.py::test_strict_parser[info1554]",
      "tests/test_well_formed.py::test_loose_parser[info758]",
      "tests/test_well_formed.py::test_loose_parser[info867]",
      "tests/test_well_formed.py::test_loose_parser[info1033]",
      "tests/test_well_formed.py::test_strict_parser[info412]",
      "tests/test_well_formed.py::test_strict_parser[info131]",
      "tests/test_well_formed.py::test_strict_parser[info392]",
      "tests/test_well_formed.py::test_strict_parser[info559]",
      "tests/test_well_formed.py::test_strict_parser[info1552]",
      "tests/test_well_formed.py::test_strict_parser[info540]",
      "tests/test_well_formed.py::test_strict_parser[info440]",
      "tests/test_well_formed.py::test_strict_parser[info940]",
      "tests/test_well_formed.py::test_strict_parser[info1190]",
      "tests/test_well_formed.py::test_strict_parser[info1071]",
      "tests/test_well_formed.py::test_loose_parser[info492]",
      "tests/test_well_formed.py::test_strict_parser[info1568]",
      "tests/test_well_formed.py::test_loose_parser[info66]",
      "tests/test_well_formed.py::test_loose_parser[info526]",
      "tests/test_well_formed.py::test_strict_parser[info216]",
      "tests/test_well_formed.py::test_loose_parser[info499]",
      "tests/test_well_formed.py::test_strict_parser[info403]",
      "tests/test_well_formed.py::test_strict_parser[info630]",
      "tests/test_well_formed.py::test_strict_parser[info1028]",
      "tests/test_well_formed.py::test_loose_parser[info1225]",
      "tests/test_well_formed.py::test_strict_parser[info932]",
      "tests/test_well_formed.py::test_http_conditions[info23]",
      "tests/test_well_formed.py::test_loose_parser[info1190]",
      "tests/test_well_formed.py::test_loose_parser[info710]",
      "tests/test_well_formed.py::test_strict_parser[info1187]",
      "tests/test_well_formed.py::test_loose_parser[info769]",
      "tests/test_well_formed.py::test_strict_parser[info1219]",
      "tests/test_well_formed.py::test_strict_parser[info1450]",
      "tests/test_well_formed.py::test_strict_parser[info1131]",
      "tests/test_well_formed.py::test_strict_parser[info611]",
      "tests/test_well_formed.py::test_loose_parser[info1564]",
      "tests/test_well_formed.py::test_loose_parser[info393]",
      "tests/test_well_formed.py::test_strict_parser[info1536]",
      "tests/test_well_formed.py::test_loose_parser[info582]",
      "tests/test_well_formed.py::test_strict_parser[info197]",
      "tests/test_well_formed.py::test_loose_parser[info1253]",
      "tests/test_well_formed.py::test_loose_parser[info618]",
      "tests/test_well_formed.py::test_loose_parser[info197]",
      "tests/test_well_formed.py::test_loose_parser[info1280]",
      "tests/test_well_formed.py::test_strict_parser[info624]",
      "tests/test_well_formed.py::test_loose_parser[info1397]",
      "tests/test_well_formed.py::test_strict_parser[info1073]",
      "tests/test_well_formed.py::test_loose_parser[info1636]",
      "tests/test_well_formed.py::test_loose_parser[info1439]",
      "tests/test_well_formed.py::test_loose_parser[info417]",
      "tests/test_well_formed.py::test_strict_parser[info1514]",
      "tests/test_well_formed.py::test_strict_parser[info902]",
      "tests/test_well_formed.py::test_strict_parser[info1262]",
      "tests/test_well_formed.py::test_strict_parser[info1229]",
      "tests/test_well_formed.py::test_strict_parser[info1267]",
      "tests/test_well_formed.py::test_loose_parser[info1335]",
      "tests/test_well_formed.py::test_loose_parser[info1308]",
      "tests/test_well_formed.py::test_loose_parser[info1371]",
      "tests/test_well_formed.py::test_loose_parser[info1127]",
      "tests/test_well_formed.py::test_strict_parser[info31]",
      "tests/test_well_formed.py::test_loose_parser[info205]",
      "tests/test_well_formed.py::test_loose_parser[info1531]",
      "tests/test_well_formed.py::test_strict_parser[info143]",
      "tests/test_well_formed.py::test_loose_parser[info235]",
      "tests/test_well_formed.py::test_strict_parser[info337]",
      "tests/test_well_formed.py::test_strict_parser[info277]",
      "tests/test_well_formed.py::test_strict_parser[info566]",
      "tests/test_well_formed.py::test_loose_parser[info511]",
      "tests/test_well_formed.py::test_strict_parser[info929]",
      "tests/test_well_formed.py::test_strict_parser[info694]",
      "tests/test_well_formed.py::test_loose_parser[info412]",
      "tests/test_well_formed.py::test_loose_parser[info335]",
      "tests/test_well_formed.py::test_strict_parser[info1005]",
      "tests/test_well_formed.py::test_strict_parser[info1313]",
      "tests/test_well_formed.py::test_loose_parser[info3]",
      "tests/test_well_formed.py::test_strict_parser[info1493]",
      "tests/test_well_formed.py::test_loose_parser[info1248]",
      "tests/test_well_formed.py::test_strict_parser[info178]",
      "tests/test_well_formed.py::test_loose_parser[info1229]",
      "tests/test_well_formed.py::test_loose_parser[info1347]",
      "tests/test_well_formed.py::test_loose_parser[info776]",
      "tests/test_well_formed.py::test_loose_parser[info1598]",
      "tests/test_well_formed.py::test_strict_parser[info623]",
      "tests/test_well_formed.py::test_loose_parser[info1540]",
      "tests/test_well_formed.py::test_loose_parser[info866]",
      "tests/test_well_formed.py::test_loose_parser[info433]",
      "tests/test_well_formed.py::test_strict_parser[info137]",
      "tests/test_well_formed.py::test_strict_parser[info506]",
      "tests/test_well_formed.py::test_strict_parser[info1454]",
      "tests/test_well_formed.py::test_strict_parser[info526]",
      "tests/test_well_formed.py::test_loose_parser[info957]",
      "tests/test_well_formed.py::test_loose_parser[info370]",
      "tests/test_well_formed.py::test_loose_parser[info1304]",
      "tests/test_well_formed.py::test_loose_parser[info327]",
      "tests/test_well_formed.py::test_strict_parser[info994]",
      "tests/test_well_formed.py::test_http_conditions[info61]",
      "tests/test_well_formed.py::test_strict_parser[info1521]",
      "tests/test_well_formed.py::test_strict_parser[info1567]",
      "tests/test_well_formed.py::test_loose_parser[info292]",
      "tests/test_well_formed.py::test_loose_parser[info905]",
      "tests/test_well_formed.py::test_strict_parser[info535]",
      "tests/test_well_formed.py::test_loose_parser[info137]",
      "tests/test_well_formed.py::test_strict_parser[info572]",
      "tests/test_well_formed.py::test_loose_parser[info461]",
      "tests/test_well_formed.py::test_loose_parser[info453]",
      "tests/test_well_formed.py::test_http_conditions[info36]",
      "tests/test_well_formed.py::test_strict_parser[info521]",
      "tests/test_well_formed.py::test_strict_parser[info854]",
      "tests/test_well_formed.py::test_strict_parser[info712]",
      "tests/test_well_formed.py::test_loose_parser[info194]",
      "tests/test_well_formed.py::test_loose_parser[info1095]",
      "tests/test_well_formed.py::test_strict_parser[info329]",
      "tests/test_well_formed.py::test_strict_parser[info876]",
      "tests/test_well_formed.py::test_strict_parser[info312]",
      "tests/test_well_formed.py::test_strict_parser[info130]",
      "tests/test_well_formed.py::test_loose_parser[info724]",
      "tests/test_well_formed.py::test_strict_parser[info596]",
      "tests/test_well_formed.py::test_strict_parser[info395]",
      "tests/test_well_formed.py::test_strict_parser[info1330]",
      "tests/test_well_formed.py::test_strict_parser[info390]",
      "tests/test_well_formed.py::test_loose_parser[info1212]",
      "tests/test_well_formed.py::test_loose_parser[info1132]",
      "tests/test_well_formed.py::test_strict_parser[info683]",
      "tests/test_well_formed.py::test_strict_parser[info1051]",
      "tests/test_well_formed.py::test_http_conditions[info81]",
      "tests/test_well_formed.py::test_strict_parser[info34]",
      "tests/test_well_formed.py::test_loose_parser[info612]",
      "tests/test_well_formed.py::test_strict_parser[info1240]",
      "tests/test_well_formed.py::test_loose_parser[info400]",
      "tests/test_well_formed.py::test_loose_parser[info904]",
      "tests/test_well_formed.py::test_loose_parser[info902]",
      "tests/test_well_formed.py::test_strict_parser[info434]",
      "tests/test_well_formed.py::test_strict_parser[info563]",
      "tests/test_well_formed.py::test_loose_parser[info1099]",
      "tests/test_well_formed.py::test_loose_parser[info218]",
      "tests/test_well_formed.py::test_strict_parser[info84]",
      "tests/test_well_formed.py::test_strict_parser[info1435]",
      "tests/test_well_formed.py::test_strict_parser[info209]",
      "tests/test_well_formed.py::test_strict_parser[info1511]",
      "tests/test_well_formed.py::test_strict_parser[info420]",
      "tests/test_well_formed.py::test_strict_parser[info529]",
      "tests/test_well_formed.py::test_loose_parser[info188]",
      "tests/test_well_formed.py::test_loose_parser[info1543]",
      "tests/test_well_formed.py::test_loose_parser[info213]",
      "tests/test_well_formed.py::test_http_conditions[info5]",
      "tests/test_well_formed.py::test_loose_parser[info505]",
      "tests/test_well_formed.py::test_strict_parser[info691]",
      "tests/test_well_formed.py::test_loose_parser[info276]",
      "tests/test_well_formed.py::test_strict_parser[info887]",
      "tests/test_well_formed.py::test_loose_parser[info1458]",
      "tests/test_well_formed.py::test_loose_parser[info638]",
      "tests/test_well_formed.py::test_loose_parser[info852]",
      "tests/test_well_formed.py::test_loose_parser[info1376]",
      "tests/test_well_formed.py::test_loose_parser[info1255]",
      "tests/test_well_formed.py::test_strict_parser[info0]",
      "tests/test_well_formed.py::test_strict_parser[info1457]",
      "tests/test_well_formed.py::test_strict_parser[info885]",
      "tests/test_well_formed.py::test_loose_parser[info1057]",
      "tests/test_well_formed.py::test_loose_parser[info727]",
      "tests/test_well_formed.py::test_strict_parser[info124]",
      "tests/test_well_formed.py::test_strict_parser[info1308]",
      "tests/test_well_formed.py::test_strict_parser[info784]",
      "tests/test_well_formed.py::test_strict_parser[info485]",
      "tests/test_well_formed.py::test_loose_parser[info9]",
      "tests/test_well_formed.py::test_loose_parser[info1375]",
      "tests/test_well_formed.py::test_strict_parser[info776]",
      "tests/test_well_formed.py::test_strict_parser[info626]",
      "tests/test_well_formed.py::test_loose_parser[info1407]",
      "tests/test_well_formed.py::test_loose_parser[info1570]",
      "tests/test_well_formed.py::test_strict_parser[info30]",
      "tests/test_well_formed.py::test_strict_parser[info1013]",
      "tests/test_well_formed.py::test_loose_parser[info57]",
      "tests/test_well_formed.py::test_strict_parser[info1053]",
      "tests/test_well_formed.py::test_loose_parser[info1009]",
      "tests/test_well_formed.py::test_loose_parser[info274]",
      "tests/test_well_formed.py::test_strict_parser[info882]",
      "tests/test_well_formed.py::test_strict_parser[info1632]",
      "tests/test_well_formed.py::test_loose_parser[info17]",
      "tests/test_well_formed.py::test_loose_parser[info805]",
      "tests/test_well_formed.py::test_strict_parser[info527]",
      "tests/test_well_formed.py::test_loose_parser[info1412]",
      "tests/test_well_formed.py::test_strict_parser[info489]",
      "tests/test_well_formed.py::test_strict_parser[info622]",
      "tests/test_well_formed.py::test_strict_parser[info129]",
      "tests/test_well_formed.py::test_loose_parser[info1286]",
      "tests/test_well_formed.py::test_strict_parser[info410]",
      "tests/test_well_formed.py::test_loose_parser[info344]",
      "tests/test_well_formed.py::test_loose_parser[info1131]",
      "tests/test_well_formed.py::test_loose_parser[info629]",
      "tests/test_well_formed.py::test_strict_parser[info782]",
      "tests/test_well_formed.py::test_strict_parser[info1382]",
      "tests/test_well_formed.py::test_strict_parser[info794]",
      "tests/test_well_formed.py::test_strict_parser[info388]",
      "tests/test_well_formed.py::test_strict_parser[info68]",
      "tests/test_well_formed.py::test_strict_parser[info1213]",
      "tests/test_well_formed.py::test_loose_parser[info544]",
      "tests/test_well_formed.py::test_strict_parser[info458]",
      "tests/test_well_formed.py::test_strict_parser[info659]",
      "tests/test_well_formed.py::test_strict_parser[info1347]",
      "tests/test_well_formed.py::test_strict_parser[info1548]",
      "tests/test_well_formed.py::test_loose_parser[info1528]",
      "tests/test_well_formed.py::test_loose_parser[info307]",
      "tests/test_well_formed.py::test_loose_parser[info1107]",
      "tests/test_well_formed.py::test_loose_parser[info1093]",
      "tests/test_well_formed.py::test_strict_parser[info1228]",
      "tests/test_well_formed.py::test_strict_parser[info669]",
      "tests/test_well_formed.py::test_strict_parser[info1264]",
      "tests/test_well_formed.py::test_loose_parser[info949]",
      "tests/test_well_formed.py::test_strict_parser[info1604]",
      "tests/test_well_formed.py::test_strict_parser[info1619]",
      "tests/test_well_formed.py::test_loose_parser[info615]",
      "tests/test_well_formed.py::test_strict_parser[info629]",
      "tests/test_well_formed.py::test_strict_parser[info380]",
      "tests/test_well_formed.py::test_loose_parser[info746]",
      "tests/test_well_formed.py::test_http_conditions[info8]",
      "tests/test_well_formed.py::test_loose_parser[info545]",
      "tests/test_well_formed.py::test_loose_parser[info661]",
      "tests/test_well_formed.py::test_strict_parser[info1270]",
      "tests/test_well_formed.py::test_loose_parser[info865]",
      "tests/test_well_formed.py::test_strict_parser[info1449]",
      "tests/test_well_formed.py::test_loose_parser[info225]",
      "tests/test_well_formed.py::test_loose_parser[info334]",
      "tests/test_well_formed.py::test_loose_parser[info1576]",
      "tests/test_well_formed.py::test_strict_parser[info695]",
      "tests/test_well_formed.py::test_loose_parser[info646]",
      "tests/test_well_formed.py::test_strict_parser[info1414]",
      "tests/test_well_formed.py::test_http_conditions[info68]",
      "tests/test_well_formed.py::test_http_conditions[info92]",
      "tests/test_well_formed.py::test_strict_parser[info402]",
      "tests/test_well_formed.py::test_loose_parser[info129]",
      "tests/test_well_formed.py::test_loose_parser[info413]",
      "tests/test_well_formed.py::test_loose_parser[info1059]",
      "tests/test_well_formed.py::test_loose_parser[info722]",
      "tests/test_well_formed.py::test_strict_parser[info1494]",
      "tests/test_well_formed.py::test_strict_parser[info1539]",
      "tests/test_well_formed.py::test_loose_parser[info1442]",
      "tests/test_well_formed.py::test_strict_parser[info1087]",
      "tests/test_well_formed.py::test_loose_parser[info1430]",
      "tests/test_well_formed.py::test_loose_parser[info1342]",
      "tests/test_well_formed.py::test_loose_parser[info428]",
      "tests/test_well_formed.py::test_strict_parser[info1072]",
      "tests/test_well_formed.py::test_strict_parser[info991]",
      "tests/test_well_formed.py::test_loose_parser[info1558]",
      "tests/test_well_formed.py::test_strict_parser[info742]",
      "tests/test_well_formed.py::test_strict_parser[info560]",
      "tests/test_well_formed.py::test_strict_parser[info519]",
      "tests/test_well_formed.py::test_loose_parser[info1612]",
      "tests/test_well_formed.py::test_strict_parser[info361]",
      "tests/test_well_formed.py::test_loose_parser[info831]",
      "tests/test_well_formed.py::test_loose_parser[info136]",
      "tests/test_well_formed.py::test_strict_parser[info1621]",
      "tests/test_well_formed.py::test_loose_parser[info559]",
      "tests/test_well_formed.py::test_strict_parser[info86]",
      "tests/test_well_formed.py::test_loose_parser[info214]",
      "tests/test_well_formed.py::test_strict_parser[info229]",
      "tests/test_well_formed.py::test_loose_parser[info1024]",
      "tests/test_well_formed.py::test_strict_parser[info957]",
      "tests/test_well_formed.py::test_strict_parser[info1575]",
      "tests/test_well_formed.py::test_loose_parser[info1410]",
      "tests/test_well_formed.py::test_strict_parser[info580]",
      "tests/test_well_formed.py::test_strict_parser[info264]",
      "tests/test_well_formed.py::test_loose_parser[info842]",
      "tests/test_well_formed.py::test_loose_parser[info749]",
      "tests/test_well_formed.py::test_loose_parser[info785]",
      "tests/test_well_formed.py::test_strict_parser[info1099]",
      "tests/test_well_formed.py::test_loose_parser[info1079]",
      "tests/test_well_formed.py::test_loose_parser[info256]",
      "tests/test_well_formed.py::test_loose_parser[info649]",
      "tests/test_well_formed.py::test_strict_parser[info447]",
      "tests/test_well_formed.py::test_strict_parser[info544]",
      "tests/test_well_formed.py::test_strict_parser[info244]",
      "tests/test_well_formed.py::test_http_conditions[info60]",
      "tests/test_well_formed.py::test_strict_parser[info1200]",
      "tests/test_well_formed.py::test_http_conditions[info98]",
      "tests/test_well_formed.py::test_loose_parser[info671]",
      "tests/test_well_formed.py::test_loose_parser[info1421]",
      "tests/test_well_formed.py::test_loose_parser[info142]",
      "tests/test_well_formed.py::test_strict_parser[info1201]",
      "tests/test_well_formed.py::test_loose_parser[info1301]",
      "tests/test_well_formed.py::test_strict_parser[info510]",
      "tests/test_well_formed.py::test_loose_parser[info1086]",
      "tests/test_well_formed.py::test_loose_parser[info463]",
      "tests/test_well_formed.py::test_strict_parser[info1605]",
      "tests/test_well_formed.py::test_loose_parser[info108]",
      "tests/test_well_formed.py::test_loose_parser[info1559]",
      "tests/test_well_formed.py::test_loose_parser[info1145]",
      "tests/test_well_formed.py::test_strict_parser[info700]",
      "tests/test_well_formed.py::test_strict_parser[info292]",
      "tests/test_well_formed.py::test_loose_parser[info676]",
      "tests/test_well_formed.py::test_loose_parser[info1482]",
      "tests/test_well_formed.py::test_strict_parser[info165]",
      "tests/test_well_formed.py::test_strict_parser[info752]",
      "tests/test_well_formed.py::test_loose_parser[info619]",
      "tests/test_well_formed.py::test_strict_parser[info1066]",
      "tests/test_well_formed.py::test_strict_parser[info1530]",
      "tests/test_well_formed.py::test_loose_parser[info353]",
      "tests/test_well_formed.py::test_loose_parser[info348]",
      "tests/test_well_formed.py::test_loose_parser[info1203]",
      "tests/test_well_formed.py::test_loose_parser[info1210]",
      "tests/test_well_formed.py::test_loose_parser[info911]",
      "tests/test_well_formed.py::test_strict_parser[info1082]",
      "tests/test_well_formed.py::test_strict_parser[info799]",
      "tests/test_well_formed.py::test_strict_parser[info949]",
      "tests/test_well_formed.py::test_loose_parser[info1089]",
      "tests/test_well_formed.py::test_strict_parser[info798]",
      "tests/test_well_formed.py::test_loose_parser[info512]",
      "tests/test_well_formed.py::test_strict_parser[info813]",
      "tests/test_well_formed.py::test_strict_parser[info1465]",
      "tests/test_well_formed.py::test_loose_parser[info301]",
      "tests/test_well_formed.py::test_strict_parser[info1079]",
      "tests/test_well_formed.py::test_loose_parser[info263]",
      "tests/test_well_formed.py::test_loose_parser[info1533]",
      "tests/test_well_formed.py::test_strict_parser[info670]",
      "tests/test_well_formed.py::test_strict_parser[info1609]",
      "tests/test_well_formed.py::test_loose_parser[info86]",
      "tests/test_well_formed.py::test_strict_parser[info1282]",
      "tests/test_well_formed.py::test_strict_parser[info495]",
      "tests/test_well_formed.py::test_strict_parser[info192]",
      "tests/test_well_formed.py::test_strict_parser[info53]",
      "tests/test_well_formed.py::test_strict_parser[info1641]",
      "tests/test_well_formed.py::test_loose_parser[info1633]",
      "tests/test_well_formed.py::test_strict_parser[info374]",
      "tests/test_well_formed.py::test_loose_parser[info923]",
      "tests/test_well_formed.py::test_loose_parser[info1596]",
      "tests/test_well_formed.py::test_loose_parser[info1452]",
      "tests/test_well_formed.py::test_strict_parser[info95]",
      "tests/test_well_formed.py::test_loose_parser[info1049]",
      "tests/test_well_formed.py::test_strict_parser[info452]",
      "tests/test_well_formed.py::test_strict_parser[info454]",
      "tests/test_well_formed.py::test_loose_parser[info502]",
      "tests/test_well_formed.py::test_strict_parser[info1617]",
      "tests/test_well_formed.py::test_loose_parser[info373]",
      "tests/test_well_formed.py::test_loose_parser[info1287]",
      "tests/test_well_formed.py::test_loose_parser[info729]",
      "tests/test_well_formed.py::test_loose_parser[info1406]",
      "tests/test_well_formed.py::test_strict_parser[info245]",
      "tests/test_well_formed.py::test_loose_parser[info158]",
      "tests/test_well_formed.py::test_strict_parser[info296]",
      "tests/test_well_formed.py::test_loose_parser[info270]",
      "tests/test_well_formed.py::test_strict_parser[info1234]",
      "tests/test_well_formed.py::test_http_conditions[info48]",
      "tests/test_well_formed.py::test_strict_parser[info146]",
      "tests/test_well_formed.py::test_loose_parser[info1223]",
      "tests/test_well_formed.py::test_strict_parser[info835]",
      "tests/test_well_formed.py::test_loose_parser[info460]",
      "tests/test_well_formed.py::test_strict_parser[info768]",
      "tests/test_well_formed.py::test_strict_parser[info475]",
      "tests/test_well_formed.py::test_loose_parser[info1029]",
      "tests/test_well_formed.py::test_loose_parser[info287]",
      "tests/test_well_formed.py::test_loose_parser[info1088]",
      "tests/test_well_formed.py::test_strict_parser[info995]",
      "tests/test_well_formed.py::test_strict_parser[info643]",
      "tests/test_well_formed.py::test_strict_parser[info1596]",
      "tests/test_well_formed.py::test_loose_parser[info627]",
      "tests/test_well_formed.py::test_http_conditions[info82]",
      "tests/test_well_formed.py::test_loose_parser[info349]",
      "tests/test_well_formed.py::test_strict_parser[info963]",
      "tests/test_well_formed.py::test_strict_parser[info1032]",
      "tests/test_well_formed.py::test_strict_parser[info36]",
      "tests/test_well_formed.py::test_strict_parser[info714]",
      "tests/test_well_formed.py::test_strict_parser[info1165]",
      "tests/test_well_formed.py::test_loose_parser[info360]",
      "tests/test_well_formed.py::test_http_conditions[info55]",
      "tests/test_well_formed.py::test_loose_parser[info230]",
      "tests/test_well_formed.py::test_strict_parser[info1272]",
      "tests/test_well_formed.py::test_loose_parser[info1010]",
      "tests/test_well_formed.py::test_strict_parser[info645]",
      "tests/test_well_formed.py::test_loose_parser[info1374]",
      "tests/test_well_formed.py::test_loose_parser[info1523]",
      "tests/test_well_formed.py::test_strict_parser[info1147]",
      "tests/test_well_formed.py::test_loose_parser[info771]",
      "tests/test_well_formed.py::test_strict_parser[info182]",
      "tests/test_well_formed.py::test_loose_parser[info515]",
      "tests/test_well_formed.py::test_loose_parser[info206]",
      "tests/test_well_formed.py::test_strict_parser[info1588]",
      "tests/test_well_formed.py::test_loose_parser[info698]",
      "tests/test_well_formed.py::test_strict_parser[info1304]",
      "tests/test_well_formed.py::test_strict_parser[info1380]",
      "tests/test_well_formed.py::test_loose_parser[info959]",
      "tests/test_well_formed.py::test_loose_parser[info677]",
      "tests/test_well_formed.py::test_strict_parser[info121]",
      "tests/test_well_formed.py::test_strict_parser[info308]",
      "tests/test_well_formed.py::test_strict_parser[info62]",
      "tests/test_well_formed.py::test_loose_parser[info1241]",
      "tests/test_well_formed.py::test_strict_parser[info227]",
      "tests/test_well_formed.py::test_strict_parser[info1326]",
      "tests/test_well_formed.py::test_strict_parser[info762]",
      "tests/test_well_formed.py::test_strict_parser[info1611]",
      "tests/test_well_formed.py::test_loose_parser[info365]",
      "tests/test_well_formed.py::test_strict_parser[info1237]",
      "tests/test_well_formed.py::test_strict_parser[info1297]",
      "tests/test_well_formed.py::test_loose_parser[info714]",
      "tests/test_well_formed.py::test_strict_parser[info1109]",
      "tests/test_well_formed.py::test_loose_parser[info324]",
      "tests/test_well_formed.py::test_loose_parser[info1244]",
      "tests/test_well_formed.py::test_strict_parser[info1342]",
      "tests/test_well_formed.py::test_loose_parser[info1629]",
      "tests/test_well_formed.py::test_loose_parser[info549]",
      "tests/test_well_formed.py::test_strict_parser[info315]",
      "tests/test_well_formed.py::test_loose_parser[info199]",
      "tests/test_well_formed.py::test_strict_parser[info13]",
      "tests/test_well_formed.py::test_strict_parser[info186]",
      "tests/test_well_formed.py::test_strict_parser[info99]",
      "tests/test_well_formed.py::test_strict_parser[info16]",
      "tests/test_well_formed.py::test_loose_parser[info645]",
      "tests/test_well_formed.py::test_strict_parser[info736]",
      "tests/test_well_formed.py::test_strict_parser[info150]",
      "tests/test_well_formed.py::test_strict_parser[info1505]",
      "tests/test_well_formed.py::test_loose_parser[info1510]",
      "tests/test_well_formed.py::test_strict_parser[info1623]",
      "tests/test_well_formed.py::test_strict_parser[info1639]",
      "tests/test_well_formed.py::test_strict_parser[info1193]",
      "tests/test_well_formed.py::test_loose_parser[info577]",
      "tests/test_well_formed.py::test_strict_parser[info917]",
      "tests/test_well_formed.py::test_loose_parser[info392]",
      "tests/test_well_formed.py::test_strict_parser[info908]",
      "tests/test_well_formed.py::test_http_conditions[info38]",
      "tests/test_well_formed.py::test_strict_parser[info1244]",
      "tests/test_well_formed.py::test_loose_parser[info34]",
      "tests/test_well_formed.py::test_strict_parser[info1196]",
      "tests/test_well_formed.py::test_http_conditions[info75]",
      "tests/test_well_formed.py::test_strict_parser[info233]",
      "tests/test_well_formed.py::test_loose_parser[info1254]",
      "tests/test_well_formed.py::test_strict_parser[info748]",
      "tests/test_well_formed.py::test_strict_parser[info1108]",
      "tests/test_well_formed.py::test_loose_parser[info1056]",
      "tests/test_well_formed.py::test_loose_parser[info1584]",
      "tests/test_well_formed.py::test_loose_parser[info93]",
      "tests/test_well_formed.py::test_strict_parser[info966]",
      "tests/test_well_formed.py::test_loose_parser[info1242]",
      "tests/test_well_formed.py::test_loose_parser[info1275]",
      "tests/test_well_formed.py::test_strict_parser[info772]",
      "tests/test_well_formed.py::test_strict_parser[info1205]",
      "tests/test_well_formed.py::test_http_conditions[info34]",
      "tests/test_well_formed.py::test_loose_parser[info832]",
      "tests/test_well_formed.py::test_strict_parser[info1176]",
      "tests/test_well_formed.py::test_strict_parser[info1410]",
      "tests/test_well_formed.py::test_strict_parser[info358]",
      "tests/test_well_formed.py::test_loose_parser[info1282]",
      "tests/test_well_formed.py::test_loose_parser[info482]",
      "tests/test_well_formed.py::test_strict_parser[info1070]",
      "tests/test_well_formed.py::test_loose_parser[info835]",
      "tests/test_well_formed.py::test_http_conditions[info86]",
      "tests/test_well_formed.py::test_loose_parser[info643]",
      "tests/test_well_formed.py::test_loose_parser[info1257]",
      "tests/test_well_formed.py::test_loose_parser[info1486]",
      "tests/test_well_formed.py::test_strict_parser[info160]",
      "tests/test_well_formed.py::test_strict_parser[info1177]",
      "tests/test_well_formed.py::test_loose_parser[info987]",
      "tests/test_well_formed.py::test_strict_parser[info733]",
      "tests/test_well_formed.py::test_loose_parser[info1586]",
      "tests/test_well_formed.py::test_loose_parser[info755]",
      "tests/test_well_formed.py::test_strict_parser[info1252]",
      "tests/test_well_formed.py::test_loose_parser[info78]",
      "tests/test_well_formed.py::test_loose_parser[info264]",
      "tests/test_well_formed.py::test_loose_parser[info1422]",
      "tests/test_well_formed.py::test_strict_parser[info1541]",
      "tests/test_well_formed.py::test_loose_parser[info1344]",
      "tests/test_well_formed.py::test_loose_parser[info416]",
      "tests/test_well_formed.py::test_loose_parser[info401]",
      "tests/test_well_formed.py::test_strict_parser[info48]",
      "tests/test_well_formed.py::test_loose_parser[info770]",
      "tests/test_well_formed.py::test_strict_parser[info1528]",
      "tests/test_well_formed.py::test_loose_parser[info908]",
      "tests/test_well_formed.py::test_strict_parser[info1195]",
      "tests/test_well_formed.py::test_loose_parser[info1416]",
      "tests/test_well_formed.py::test_strict_parser[info83]",
      "tests/test_well_formed.py::test_strict_parser[info367]",
      "tests/test_well_formed.py::test_strict_parser[info852]",
      "tests/test_well_formed.py::test_loose_parser[info1472]",
      "tests/test_well_formed.py::test_loose_parser[info567]",
      "tests/test_well_formed.py::test_loose_parser[info173]",
      "tests/test_well_formed.py::test_loose_parser[info1134]",
      "tests/test_well_formed.py::test_loose_parser[info273]",
      "tests/test_well_formed.py::test_loose_parser[info29]",
      "tests/test_well_formed.py::test_loose_parser[info736]",
      "tests/test_well_formed.py::test_loose_parser[info55]",
      "tests/test_well_formed.py::test_loose_parser[info1353]",
      "tests/test_well_formed.py::test_loose_parser[info854]",
      "tests/test_well_formed.py::test_strict_parser[info396]",
      "tests/test_well_formed.py::test_loose_parser[info604]",
      "tests/test_well_formed.py::test_http_conditions[info7]",
      "tests/test_well_formed.py::test_loose_parser[info971]",
      "tests/test_well_formed.py::test_loose_parser[info1535]",
      "tests/test_well_formed.py::test_loose_parser[info784]",
      "tests/test_well_formed.py::test_loose_parser[info487]",
      "tests/test_well_formed.py::test_strict_parser[info1206]",
      "tests/test_well_formed.py::test_strict_parser[info481]",
      "tests/test_well_formed.py::test_strict_parser[info1581]",
      "tests/test_well_formed.py::test_loose_parser[info1078]",
      "tests/test_well_formed.py::test_loose_parser[info42]",
      "tests/test_well_formed.py::test_loose_parser[info1]",
      "tests/test_well_formed.py::test_loose_parser[info555]",
      "tests/test_well_formed.py::test_strict_parser[info1222]",
      "tests/test_well_formed.py::test_loose_parser[info368]",
      "tests/test_well_formed.py::test_strict_parser[info472]",
      "tests/test_well_formed.py::test_http_conditions[info54]",
      "tests/test_well_formed.py::test_loose_parser[info1520]",
      "tests/test_well_formed.py::test_strict_parser[info923]",
      "tests/test_well_formed.py::test_loose_parser[info1130]",
      "tests/test_well_formed.py::test_strict_parser[info394]",
      "tests/test_well_formed.py::test_strict_parser[info1203]",
      "tests/test_well_formed.py::test_loose_parser[info296]",
      "tests/test_well_formed.py::test_loose_parser[info8]",
      "tests/test_well_formed.py::test_loose_parser[info98]",
      "tests/test_well_formed.py::test_loose_parser[info1058]",
      "tests/test_well_formed.py::test_strict_parser[info1141]",
      "tests/test_well_formed.py::test_strict_parser[info50]",
      "tests/test_well_formed.py::test_strict_parser[info114]",
      "tests/test_well_formed.py::test_loose_parser[info1087]",
      "tests/test_well_formed.py::test_loose_parser[info347]",
      "tests/test_well_formed.py::test_strict_parser[info1512]",
      "tests/test_well_formed.py::test_strict_parser[info1633]",
      "tests/test_well_formed.py::test_loose_parser[info774]",
      "tests/test_well_formed.py::test_strict_parser[info238]",
      "tests/test_well_formed.py::test_strict_parser[info971]",
      "tests/test_well_formed.py::test_strict_parser[info1398]",
      "tests/test_well_formed.py::test_loose_parser[info1284]",
      "tests/test_well_formed.py::test_strict_parser[info1420]",
      "tests/test_well_formed.py::test_strict_parser[info541]",
      "tests/test_well_formed.py::test_loose_parser[info1501]",
      "tests/test_well_formed.py::test_loose_parser[info1493]",
      "tests/test_well_formed.py::test_loose_parser[info818]",
      "tests/test_well_formed.py::test_strict_parser[info716]",
      "tests/test_well_formed.py::test_strict_parser[info787]",
      "tests/test_well_formed.py::test_strict_parser[info901]",
      "tests/test_well_formed.py::test_strict_parser[info1467]",
      "tests/test_well_formed.py::test_loose_parser[info1218]",
      "tests/test_well_formed.py::test_strict_parser[info663]",
      "tests/test_well_formed.py::test_strict_parser[info1288]",
      "tests/test_well_formed.py::test_strict_parser[info1287]",
      "tests/test_well_formed.py::test_loose_parser[info180]",
      "tests/test_well_formed.py::test_strict_parser[info251]",
      "tests/test_well_formed.py::test_strict_parser[info1640]",
      "tests/test_well_formed.py::test_loose_parser[info1618]",
      "tests/test_well_formed.py::test_loose_parser[info441]",
      "tests/test_well_formed.py::test_loose_parser[info875]",
      "tests/test_well_formed.py::test_loose_parser[info143]",
      "tests/test_well_formed.py::test_loose_parser[info1176]",
      "tests/test_well_formed.py::test_loose_parser[info1460]",
      "tests/test_well_formed.py::test_http_conditions[info2]",
      "tests/test_well_formed.py::test_strict_parser[info1352]",
      "tests/test_well_formed.py::test_loose_parser[info446]",
      "tests/test_well_formed.py::test_strict_parser[info281]",
      "tests/test_well_formed.py::test_loose_parser[info161]",
      "tests/test_well_formed.py::test_strict_parser[info620]",
      "tests/test_well_formed.py::test_loose_parser[info1310]",
      "tests/test_well_formed.py::test_loose_parser[info1390]",
      "tests/test_well_formed.py::test_strict_parser[info853]",
      "tests/test_well_formed.py::test_strict_parser[info63]",
      "tests/test_well_formed.py::test_loose_parser[info547]",
      "tests/test_well_formed.py::test_loose_parser[info468]",
      "tests/test_well_formed.py::test_loose_parser[info494]",
      "tests/test_well_formed.py::test_loose_parser[info476]",
      "tests/test_well_formed.py::test_strict_parser[info911]",
      "tests/test_well_formed.py::test_strict_parser[info1221]",
      "tests/test_well_formed.py::test_loose_parser[info1507]",
      "tests/test_well_formed.py::test_loose_parser[info564]",
      "tests/test_well_formed.py::test_strict_parser[info1599]",
      "tests/test_well_formed.py::test_loose_parser[info922]",
      "tests/test_well_formed.py::test_loose_parser[info934]",
      "tests/test_well_formed.py::test_strict_parser[info1615]",
      "tests/test_well_formed.py::test_loose_parser[info473]",
      "tests/test_well_formed.py::test_loose_parser[info125]",
      "tests/test_well_formed.py::test_http_conditions[info87]",
      "tests/test_well_formed.py::test_loose_parser[info1293]",
      "tests/test_well_formed.py::test_strict_parser[info666]",
      "tests/test_well_formed.py::test_strict_parser[info82]",
      "tests/test_well_formed.py::test_strict_parser[info509]",
      "tests/test_well_formed.py::test_strict_parser[info18]",
      "tests/test_well_formed.py::test_strict_parser[info1182]",
      "tests/test_well_formed.py::test_strict_parser[info616]",
      "tests/test_well_formed.py::test_strict_parser[info460]",
      "tests/test_well_formed.py::test_loose_parser[info1515]",
      "tests/test_well_formed.py::test_strict_parser[info372]",
      "tests/test_well_formed.py::test_strict_parser[info1408]",
      "tests/test_well_formed.py::test_loose_parser[info623]",
      "tests/test_well_formed.py::test_loose_parser[info356]",
      "tests/test_well_formed.py::test_strict_parser[info1378]",
      "tests/test_well_formed.py::test_loose_parser[info81]",
      "tests/test_well_formed.py::test_strict_parser[info265]",
      "tests/test_well_formed.py::test_strict_parser[info1107]",
      "tests/test_well_formed.py::test_loose_parser[info421]",
      "tests/test_well_formed.py::test_loose_parser[info15]",
      "tests/test_well_formed.py::test_strict_parser[info1048]",
      "tests/test_well_formed.py::test_strict_parser[info747]",
      "tests/test_well_formed.py::test_loose_parser[info588]",
      "tests/test_well_formed.py::test_loose_parser[info765]",
      "tests/test_well_formed.py::test_loose_parser[info141]",
      "tests/test_well_formed.py::test_loose_parser[info371]",
      "tests/test_well_formed.py::test_strict_parser[info1390]",
      "tests/test_well_formed.py::test_strict_parser[info524]",
      "tests/test_well_formed.py::test_loose_parser[info680]",
      "tests/test_well_formed.py::test_strict_parser[info324]",
      "tests/test_well_formed.py::test_loose_parser[info853]",
      "tests/test_well_formed.py::test_strict_parser[info1185]",
      "tests/test_well_formed.py::test_strict_parser[info40]",
      "tests/test_well_formed.py::test_loose_parser[info709]",
      "tests/test_well_formed.py::test_strict_parser[info1120]",
      "tests/test_well_formed.py::test_loose_parser[info1270]",
      "tests/test_well_formed.py::test_loose_parser[info1569]",
      "tests/test_well_formed.py::test_strict_parser[info685]",
      "tests/test_well_formed.py::test_strict_parser[info803]",
      "tests/test_well_formed.py::test_loose_parser[info851]",
      "tests/test_well_formed.py::test_loose_parser[info1148]",
      "tests/test_well_formed.py::test_http_conditions[info62]",
      "tests/test_well_formed.py::test_loose_parser[info1511]",
      "tests/test_well_formed.py::test_strict_parser[info1293]",
      "tests/test_well_formed.py::test_loose_parser[info1560]",
      "tests/test_well_formed.py::test_strict_parser[info368]",
      "tests/test_well_formed.py::test_loose_parser[info115]",
      "tests/test_well_formed.py::test_loose_parser[info471]",
      "tests/test_well_formed.py::test_loose_parser[info880]",
      "tests/test_well_formed.py::test_loose_parser[info88]",
      "tests/test_well_formed.py::test_loose_parser[info397]",
      "tests/test_well_formed.py::test_strict_parser[info1616]",
      "tests/test_well_formed.py::test_strict_parser[info567]",
      "tests/test_well_formed.py::test_loose_parser[info767]",
      "tests/test_well_formed.py::test_loose_parser[info190]",
      "tests/test_well_formed.py::test_loose_parser[info278]",
      "tests/test_well_formed.py::test_loose_parser[info566]",
      "tests/test_well_formed.py::test_strict_parser[info1649]",
      "tests/test_well_formed.py::test_strict_parser[info1614]",
      "tests/test_well_formed.py::test_strict_parser[info404]",
      "tests/test_well_formed.py::test_strict_parser[info1169]",
      "tests/test_well_formed.py::test_strict_parser[info1033]",
      "tests/test_well_formed.py::test_loose_parser[info144]",
      "tests/test_well_formed.py::test_strict_parser[info867]",
      "tests/test_well_formed.py::test_loose_parser[info1378]",
      "tests/test_well_formed.py::test_strict_parser[info1104]",
      "tests/test_well_formed.py::test_loose_parser[info342]",
      "tests/test_well_formed.py::test_strict_parser[info181]",
      "tests/test_well_formed.py::test_loose_parser[info1196]",
      "tests/test_well_formed.py::test_strict_parser[info1207]",
      "tests/test_well_formed.py::test_loose_parser[info943]",
      "tests/test_well_formed.py::test_strict_parser[info608]",
      "tests/test_well_formed.py::test_loose_parser[info1529]",
      "tests/test_well_formed.py::test_loose_parser[info1359]",
      "tests/test_well_formed.py::test_loose_parser[info888]",
      "tests/test_well_formed.py::test_strict_parser[info730]",
      "tests/test_well_formed.py::test_strict_parser[info1100]",
      "tests/test_well_formed.py::test_loose_parser[info974]",
      "tests/test_well_formed.py::test_loose_parser[info1250]",
      "tests/test_well_formed.py::test_strict_parser[info786]",
      "tests/test_well_formed.py::test_loose_parser[info430]",
      "tests/test_well_formed.py::test_strict_parser[info1166]",
      "tests/test_well_formed.py::test_http_conditions[info20]",
      "tests/test_well_formed.py::test_loose_parser[info1193]",
      "tests/test_well_formed.py::test_loose_parser[info543]",
      "tests/test_well_formed.py::test_strict_parser[info1492]",
      "tests/test_well_formed.py::test_strict_parser[info170]",
      "tests/test_well_formed.py::test_loose_parser[info378]",
      "tests/test_well_formed.py::test_strict_parser[info1198]",
      "tests/test_well_formed.py::test_loose_parser[info552]",
      "tests/test_well_formed.py::test_strict_parser[info625]",
      "tests/test_well_formed.py::test_strict_parser[info578]",
      "tests/test_well_formed.py::test_loose_parser[info828]",
      "tests/test_well_formed.py::test_loose_parser[info328]",
      "tests/test_well_formed.py::test_strict_parser[info574]",
      "tests/test_well_formed.py::test_loose_parser[info1165]",
      "tests/test_well_formed.py::test_loose_parser[info978]",
      "tests/test_well_formed.py::test_loose_parser[info701]",
      "tests/test_well_formed.py::test_loose_parser[info1141]",
      "tests/test_well_formed.py::test_strict_parser[info177]",
      "tests/test_well_formed.py::test_loose_parser[info1080]",
      "tests/test_well_formed.py::test_loose_parser[info10]",
      "tests/test_well_formed.py::test_loose_parser[info1039]",
      "tests/test_well_formed.py::test_loose_parser[info689]",
      "tests/test_well_formed.py::test_loose_parser[info739]",
      "tests/test_well_formed.py::test_strict_parser[info1560]",
      "tests/test_well_formed.py::test_strict_parser[info341]",
      "tests/test_well_formed.py::test_strict_parser[info601]",
      "tests/test_well_formed.py::test_loose_parser[info893]",
      "tests/test_well_formed.py::test_strict_parser[info400]",
      "tests/test_well_formed.py::test_loose_parser[info919]",
      "tests/test_well_formed.py::test_strict_parser[info41]",
      "tests/test_well_formed.py::test_loose_parser[info483]",
      "tests/test_well_formed.py::test_strict_parser[info1464]",
      "tests/test_well_formed.py::test_loose_parser[info1015]",
      "tests/test_well_formed.py::test_loose_parser[info938]",
      "tests/test_well_formed.py::test_strict_parser[info61]",
      "tests/test_well_formed.py::test_strict_parser[info89]",
      "tests/test_well_formed.py::test_loose_parser[info531]",
      "tests/test_well_formed.py::test_strict_parser[info138]",
      "tests/test_well_formed.py::test_strict_parser[info860]",
      "tests/test_well_formed.py::test_strict_parser[info1094]",
      "tests/test_well_formed.py::test_strict_parser[info615]",
      "tests/test_well_formed.py::test_strict_parser[info1513]",
      "tests/test_well_formed.py::test_loose_parser[info825]",
      "tests/test_well_formed.py::test_loose_parser[info227]",
      "tests/test_well_formed.py::test_loose_parser[info169]",
      "tests/test_well_formed.py::test_loose_parser[info145]",
      "tests/test_well_formed.py::test_loose_parser[info625]",
      "tests/test_well_formed.py::test_loose_parser[info36]",
      "tests/test_well_formed.py::test_loose_parser[info1048]",
      "tests/test_well_formed.py::test_loose_parser[info76]",
      "tests/test_well_formed.py::test_loose_parser[info1462]",
      "tests/test_well_formed.py::test_strict_parser[info1635]",
      "tests/test_well_formed.py::test_loose_parser[info1365]",
      "tests/test_well_formed.py::test_http_conditions[info18]",
      "tests/test_well_formed.py::test_loose_parser[info484]",
      "tests/test_well_formed.py::test_loose_parser[info1037]",
      "tests/test_well_formed.py::test_strict_parser[info263]",
      "tests/test_well_formed.py::test_strict_parser[info190]",
      "tests/test_well_formed.py::test_loose_parser[info1363]",
      "tests/test_well_formed.py::test_loose_parser[info420]",
      "tests/test_well_formed.py::test_loose_parser[info1364]",
      "tests/test_well_formed.py::test_strict_parser[info1235]",
      "tests/test_well_formed.py::test_strict_parser[info157]",
      "tests/test_well_formed.py::test_loose_parser[info1628]",
      "tests/test_well_formed.py::test_strict_parser[info866]",
      "tests/test_well_formed.py::test_loose_parser[info639]",
      "tests/test_well_formed.py::test_strict_parser[info590]",
      "tests/test_well_formed.py::test_strict_parser[info1011]",
      "tests/test_well_formed.py::test_loose_parser[info210]",
      "tests/test_well_formed.py::test_strict_parser[info1161]",
      "tests/test_well_formed.py::test_strict_parser[info1076]",
      "tests/test_well_formed.py::test_loose_parser[info609]",
      "tests/test_well_formed.py::test_loose_parser[info1337]",
      "tests/test_well_formed.py::test_loose_parser[info872]",
      "tests/test_well_formed.py::test_loose_parser[info1499]",
      "tests/test_well_formed.py::test_strict_parser[info362]",
      "tests/test_well_formed.py::test_strict_parser[info504]",
      "tests/test_well_formed.py::test_strict_parser[info1529]",
      "tests/test_well_formed.py::test_loose_parser[info341]",
      "tests/test_well_formed.py::test_strict_parser[info449]",
      "tests/test_well_formed.py::test_strict_parser[info600]",
      "tests/test_well_formed.py::test_strict_parser[info375]",
      "tests/test_well_formed.py::test_strict_parser[info886]",
      "tests/test_well_formed.py::test_strict_parser[info1377]",
      "tests/test_well_formed.py::test_loose_parser[info113]",
      "tests/test_well_formed.py::test_strict_parser[info751]",
      "tests/test_well_formed.py::test_loose_parser[info1146]",
      "tests/test_well_formed.py::test_strict_parser[info1031]",
      "tests/test_well_formed.py::test_strict_parser[info801]",
      "tests/test_well_formed.py::test_loose_parser[info1239]",
      "tests/test_well_formed.py::test_strict_parser[info1067]",
      "tests/test_well_formed.py::test_strict_parser[info922]",
      "tests/test_well_formed.py::test_loose_parser[info322]",
      "tests/test_well_formed.py::test_loose_parser[info47]",
      "tests/test_well_formed.py::test_loose_parser[info1469]",
      "tests/test_well_formed.py::test_loose_parser[info1172]",
      "tests/test_well_formed.py::test_strict_parser[info57]",
      "tests/test_well_formed.py::test_strict_parser[info1216]",
      "tests/test_well_formed.py::test_loose_parser[info376]",
      "tests/test_well_formed.py::test_strict_parser[info766]",
      "tests/test_well_formed.py::test_strict_parser[info1336]",
      "tests/test_well_formed.py::test_strict_parser[info1192]",
      "tests/test_well_formed.py::test_loose_parser[info1220]",
      "tests/test_well_formed.py::test_strict_parser[info378]",
      "tests/test_well_formed.py::test_strict_parser[info889]",
      "tests/test_well_formed.py::test_strict_parser[info1186]",
      "tests/test_well_formed.py::test_strict_parser[info77]",
      "tests/test_well_formed.py::test_loose_parser[info337]",
      "tests/test_well_formed.py::test_loose_parser[info766]",
      "tests/test_well_formed.py::test_strict_parser[info650]",
      "tests/test_well_formed.py::test_strict_parser[info385]",
      "tests/test_well_formed.py::test_strict_parser[info321]",
      "tests/test_well_formed.py::test_loose_parser[info170]",
      "tests/test_well_formed.py::test_loose_parser[info1019]",
      "tests/test_well_formed.py::test_strict_parser[info38]",
      "tests/test_well_formed.py::test_loose_parser[info1367]",
      "tests/test_well_formed.py::test_loose_parser[info83]",
      "tests/test_well_formed.py::test_strict_parser[info692]",
      "tests/test_well_formed.py::test_loose_parser[info1191]",
      "tests/test_well_formed.py::test_strict_parser[info1089]",
      "tests/test_well_formed.py::test_strict_parser[info276]",
      "tests/test_well_formed.py::test_strict_parser[info1321]",
      "tests/test_well_formed.py::test_strict_parser[info373]",
      "tests/test_well_formed.py::test_strict_parser[info1318]",
      "tests/test_well_formed.py::test_strict_parser[info393]",
      "tests/test_well_formed.py::test_strict_parser[info117]",
      "tests/test_well_formed.py::test_strict_parser[info781]",
      "tests/test_well_formed.py::test_loose_parser[info345]",
      "tests/test_well_formed.py::test_loose_parser[info521]",
      "tests/test_well_formed.py::test_strict_parser[info1389]",
      "tests/test_well_formed.py::test_loose_parser[info700]",
      "tests/test_well_formed.py::test_loose_parser[info343]",
      "tests/test_well_formed.py::test_strict_parser[info1419]",
      "tests/test_well_formed.py::test_loose_parser[info241]",
      "tests/test_well_formed.py::test_loose_parser[info409]",
      "tests/test_well_formed.py::test_loose_parser[info1593]",
      "tests/test_well_formed.py::test_loose_parser[info563]",
      "tests/test_well_formed.py::test_strict_parser[info450]",
      "tests/test_well_formed.py::test_loose_parser[info437]",
      "tests/test_well_formed.py::test_strict_parser[info461]",
      "tests/test_well_formed.py::test_loose_parser[info419]",
      "tests/test_well_formed.py::test_strict_parser[info573]",
      "tests/test_well_formed.py::test_loose_parser[info976]",
      "tests/test_well_formed.py::test_loose_parser[info1265]",
      "tests/test_well_formed.py::test_strict_parser[info64]",
      "tests/test_well_formed.py::test_strict_parser[info1320]",
      "tests/test_well_formed.py::test_http_conditions[info45]",
      "tests/test_well_formed.py::test_loose_parser[info184]",
      "tests/test_well_formed.py::test_loose_parser[info18]",
      "tests/test_well_formed.py::test_strict_parser[info951]",
      "tests/test_well_formed.py::test_strict_parser[info1227]",
      "tests/test_well_formed.py::test_loose_parser[info973]",
      "tests/test_well_formed.py::test_loose_parser[info176]",
      "tests/test_well_formed.py::test_strict_parser[info1097]",
      "tests/test_well_formed.py::test_strict_parser[info1249]",
      "tests/test_well_formed.py::test_strict_parser[info1638]",
      "tests/test_well_formed.py::test_loose_parser[info1025]",
      "tests/test_well_formed.py::test_strict_parser[info673]",
      "tests/test_well_formed.py::test_loose_parser[info1047]",
      "tests/test_well_formed.py::test_loose_parser[info975]",
      "tests/test_well_formed.py::test_strict_parser[info1373]",
      "tests/test_well_formed.py::test_strict_parser[info1155]",
      "tests/test_well_formed.py::test_loose_parser[info1545]",
      "tests/test_well_formed.py::test_loose_parser[info860]",
      "tests/test_well_formed.py::test_strict_parser[info702]",
      "tests/test_well_formed.py::test_strict_parser[info1102]",
      "tests/test_well_formed.py::test_loose_parser[info679]",
      "tests/test_well_formed.py::test_strict_parser[info496]",
      "tests/test_well_formed.py::test_loose_parser[info336]",
      "tests/test_well_formed.py::test_strict_parser[info109]",
      "tests/test_well_formed.py::test_strict_parser[info989]",
      "tests/test_well_formed.py::test_strict_parser[info415]",
      "tests/test_well_formed.py::test_loose_parser[info1283]",
      "tests/test_well_formed.py::test_loose_parser[info1252]",
      "tests/test_well_formed.py::test_strict_parser[info517]",
      "tests/test_well_formed.py::test_loose_parser[info1583]",
      "tests/test_well_formed.py::test_strict_parser[info180]",
      "tests/test_well_formed.py::test_loose_parser[info696]",
      "tests/test_well_formed.py::test_loose_parser[info380]",
      "tests/test_well_formed.py::test_loose_parser[info1032]",
      "tests/test_well_formed.py::test_loose_parser[info1362]",
      "tests/test_well_formed.py::test_strict_parser[info1103]",
      "tests/test_well_formed.py::test_strict_parser[info814]",
      "tests/test_well_formed.py::test_strict_parser[info1316]",
      "tests/test_well_formed.py::test_strict_parser[info928]",
      "tests/test_well_formed.py::test_loose_parser[info1074]",
      "tests/test_well_formed.py::test_strict_parser[info828]",
      "tests/test_well_formed.py::test_strict_parser[info1138]",
      "tests/test_well_formed.py::test_loose_parser[info399]",
      "tests/test_well_formed.py::test_http_conditions[info4]",
      "tests/test_well_formed.py::test_loose_parser[info1163]",
      "tests/test_well_formed.py::test_strict_parser[info864]",
      "tests/test_well_formed.py::test_strict_parser[info765]",
      "tests/test_well_formed.py::test_loose_parser[info1106]",
      "tests/test_well_formed.py::test_strict_parser[info201]",
      "tests/test_well_formed.py::test_loose_parser[info1516]",
      "tests/test_well_formed.py::test_loose_parser[info1589]",
      "tests/test_well_formed.py::test_strict_parser[info975]",
      "tests/test_well_formed.py::test_strict_parser[info295]",
      "tests/test_well_formed.py::test_loose_parser[info669]",
      "tests/test_well_formed.py::test_loose_parser[info74]",
      "tests/test_well_formed.py::test_loose_parser[info1157]",
      "tests/test_well_formed.py::test_strict_parser[info1361]",
      "tests/test_well_formed.py::test_strict_parser[info232]",
      "tests/test_well_formed.py::test_loose_parser[info1323]",
      "tests/test_well_formed.py::test_strict_parser[info298]",
      "tests/test_well_formed.py::test_loose_parser[info478]",
      "tests/test_well_formed.py::test_strict_parser[info79]",
      "tests/test_well_formed.py::test_strict_parser[info594]",
      "tests/test_well_formed.py::test_loose_parser[info146]",
      "tests/test_well_formed.py::test_strict_parser[info65]",
      "tests/test_well_formed.py::test_strict_parser[info149]",
      "tests/test_well_formed.py::test_loose_parser[info1235]",
      "tests/test_well_formed.py::test_loose_parser[info925]",
      "tests/test_well_formed.py::test_loose_parser[info84]",
      "tests/test_well_formed.py::test_strict_parser[info1359]",
      "tests/test_well_formed.py::test_strict_parser[info194]",
      "tests/test_well_formed.py::test_loose_parser[info27]",
      "tests/test_well_formed.py::test_strict_parser[info823]",
      "tests/test_well_formed.py::test_loose_parser[info388]",
      "tests/test_well_formed.py::test_strict_parser[info119]",
      "tests/test_well_formed.py::test_strict_parser[info431]",
      "tests/test_well_formed.py::test_strict_parser[info958]",
      "tests/test_well_formed.py::test_loose_parser[info1361]",
      "tests/test_well_formed.py::test_strict_parser[info822]",
      "tests/test_well_formed.py::test_loose_parser[info1285]",
      "tests/test_well_formed.py::test_loose_parser[info1069]",
      "tests/test_well_formed.py::test_loose_parser[info578]",
      "tests/test_well_formed.py::test_loose_parser[info863]",
      "tests/test_well_formed.py::test_loose_parser[info995]",
      "tests/test_well_formed.py::test_loose_parser[info1185]",
      "tests/test_well_formed.py::test_strict_parser[info731]",
      "tests/test_well_formed.py::test_loose_parser[info620]",
      "tests/test_well_formed.py::test_strict_parser[info868]",
      "tests/test_well_formed.py::test_strict_parser[info1556]",
      "tests/test_well_formed.py::test_loose_parser[info126]",
      "tests/test_well_formed.py::test_strict_parser[info347]",
      "tests/test_well_formed.py::test_strict_parser[info383]",
      "tests/test_well_formed.py::test_strict_parser[info1137]",
      "tests/test_well_formed.py::test_loose_parser[info398]",
      "tests/test_well_formed.py::test_strict_parser[info1542]",
      "tests/test_well_formed.py::test_strict_parser[info1091]",
      "tests/test_well_formed.py::test_loose_parser[info32]",
      "tests/test_well_formed.py::test_strict_parser[info1353]",
      "tests/test_well_formed.py::test_loose_parser[info964]",
      "tests/test_well_formed.py::test_strict_parser[info303]",
      "tests/test_well_formed.py::test_loose_parser[info1105]",
      "tests/test_well_formed.py::test_strict_parser[info1443]",
      "tests/test_well_formed.py::test_strict_parser[info1035]",
      "tests/test_well_formed.py::test_strict_parser[info1601]",
      "tests/test_well_formed.py::test_loose_parser[info595]",
      "tests/test_well_formed.py::test_strict_parser[info246]",
      "tests/test_well_formed.py::test_strict_parser[info166]",
      "tests/test_well_formed.py::test_loose_parser[info1350]",
      "tests/test_well_formed.py::test_strict_parser[info1255]",
      "tests/test_well_formed.py::test_strict_parser[info299]",
      "tests/test_well_formed.py::test_loose_parser[info208]",
      "tests/test_well_formed.py::test_strict_parser[info1427]",
      "tests/test_well_formed.py::test_loose_parser[info1508]",
      "tests/test_well_formed.py::test_strict_parser[info101]",
      "tests/test_well_formed.py::test_strict_parser[info69]",
      "tests/test_well_formed.py::test_loose_parser[info231]",
      "tests/test_well_formed.py::test_strict_parser[info369]",
      "tests/test_well_formed.py::test_loose_parser[info960]",
      "tests/test_well_formed.py::test_strict_parser[info103]",
      "tests/test_well_formed.py::test_loose_parser[info1043]",
      "tests/test_well_formed.py::test_strict_parser[info282]",
      "tests/test_well_formed.py::test_strict_parser[info693]",
      "tests/test_well_formed.py::test_loose_parser[info351]",
      "tests/test_well_formed.py::test_strict_parser[info605]",
      "tests/test_well_formed.py::test_loose_parser[info1001]",
      "tests/test_well_formed.py::test_strict_parser[info1364]",
      "tests/test_well_formed.py::test_strict_parser[info775]",
      "tests/test_well_formed.py::test_loose_parser[info1441]",
      "tests/test_well_formed.py::test_strict_parser[info1164]",
      "tests/test_well_formed.py::test_strict_parser[info1299]",
      "tests/test_well_formed.py::test_strict_parser[info715]",
      "tests/test_well_formed.py::test_strict_parser[info941]",
      "tests/test_well_formed.py::test_loose_parser[info257]",
      "tests/test_well_formed.py::test_strict_parser[info1646]",
      "tests/test_well_formed.py::test_strict_parser[info763]",
      "tests/test_well_formed.py::test_strict_parser[info1482]",
      "tests/test_well_formed.py::test_strict_parser[info1472]",
      "tests/test_well_formed.py::test_strict_parser[info1167]",
      "tests/test_well_formed.py::test_strict_parser[info1217]",
      "tests/test_well_formed.py::test_strict_parser[info739]",
      "tests/test_well_formed.py::test_strict_parser[info125]",
      "tests/test_well_formed.py::test_loose_parser[info950]",
      "tests/test_well_formed.py::test_loose_parser[info500]",
      "tests/test_well_formed.py::test_strict_parser[info191]",
      "tests/test_well_formed.py::test_loose_parser[info1296]",
      "tests/test_well_formed.py::test_loose_parser[info509]",
      "tests/test_well_formed.py::test_strict_parser[info884]",
      "tests/test_well_formed.py::test_strict_parser[info310]",
      "tests/test_well_formed.py::test_strict_parser[info294]",
      "tests/test_well_formed.py::test_strict_parser[info364]",
      "tests/test_well_formed.py::test_loose_parser[info1228]",
      "tests/test_well_formed.py::test_loose_parser[info952]",
      "tests/test_well_formed.py::test_strict_parser[info437]",
      "tests/test_well_formed.py::test_strict_parser[info1429]",
      "tests/test_well_formed.py::test_loose_parser[info1109]",
      "tests/test_well_formed.py::test_loose_parser[info308]",
      "tests/test_well_formed.py::test_strict_parser[info488]",
      "tests/test_well_formed.py::test_strict_parser[info466]",
      "tests/test_well_formed.py::test_loose_parser[info1114]",
      "tests/test_well_formed.py::test_loose_parser[info1231]",
      "tests/test_well_formed.py::test_strict_parser[info1441]",
      "tests/test_well_formed.py::test_strict_parser[info1163]",
      "tests/test_well_formed.py::test_strict_parser[info943]",
      "tests/test_well_formed.py::test_strict_parser[info318]",
      "tests/test_well_formed.py::test_strict_parser[info1006]",
      "tests/test_well_formed.py::test_strict_parser[info1412]",
      "tests/test_well_formed.py::test_loose_parser[info969]",
      "tests/test_well_formed.py::test_loose_parser[info944]",
      "tests/test_well_formed.py::test_loose_parser[info1604]",
      "tests/test_well_formed.py::test_strict_parser[info377]",
      "tests/test_well_formed.py::test_loose_parser[info252]",
      "tests/test_well_formed.py::test_strict_parser[info74]",
      "tests/test_well_formed.py::test_loose_parser[info1040]",
      "tests/test_well_formed.py::test_strict_parser[info1637]",
      "tests/test_well_formed.py::test_strict_parser[info905]",
      "tests/test_well_formed.py::test_loose_parser[info304]",
      "tests/test_well_formed.py::test_loose_parser[info1170]",
      "tests/test_well_formed.py::test_strict_parser[info508]",
      "tests/test_well_formed.py::test_loose_parser[info1017]",
      "tests/test_well_formed.py::test_strict_parser[info796]",
      "tests/test_well_formed.py::test_strict_parser[info104]",
      "tests/test_well_formed.py::test_http_conditions[info28]",
      "tests/test_well_formed.py::test_strict_parser[info339]",
      "tests/test_well_formed.py::test_strict_parser[info812]",
      "tests/test_well_formed.py::test_loose_parser[info751]",
      "tests/test_well_formed.py::test_loose_parser[info1008]",
      "tests/test_well_formed.py::test_strict_parser[info1447]",
      "tests/test_well_formed.py::test_strict_parser[info1620]",
      "tests/test_well_formed.py::test_loose_parser[info1332]",
      "tests/test_well_formed.py::test_loose_parser[info291]",
      "tests/test_well_formed.py::test_strict_parser[info1460]",
      "tests/test_well_formed.py::test_loose_parser[info726]",
      "tests/test_well_formed.py::test_loose_parser[info1315]",
      "tests/test_well_formed.py::test_strict_parser[info1358]",
      "tests/test_well_formed.py::test_loose_parser[info926]",
      "tests/test_well_formed.py::test_loose_parser[info285]",
      "tests/test_well_formed.py::test_loose_parser[info1055]",
      "tests/test_well_formed.py::test_strict_parser[info1139]",
      "tests/test_well_formed.py::test_loose_parser[info1408]",
      "tests/test_well_formed.py::test_strict_parser[info365]",
      "tests/test_well_formed.py::test_strict_parser[info913]",
      "tests/test_well_formed.py::test_strict_parser[info1483]",
      "tests/test_well_formed.py::test_loose_parser[info572]",
      "tests/test_well_formed.py::test_loose_parser[info658]",
      "tests/test_well_formed.py::test_strict_parser[info354]",
      "tests/test_well_formed.py::test_loose_parser[info240]",
      "tests/test_well_formed.py::test_strict_parser[info304]",
      "tests/test_well_formed.py::test_strict_parser[info43]",
      "tests/test_well_formed.py::test_loose_parser[info406]",
      "tests/test_well_formed.py::test_strict_parser[info651]",
      "tests/test_well_formed.py::test_loose_parser[info1097]",
      "tests/test_well_formed.py::test_loose_parser[info298]",
      "tests/test_well_formed.py::test_strict_parser[info351]",
      "tests/test_well_formed.py::test_strict_parser[info465]",
      "tests/test_well_formed.py::test_strict_parser[info148]",
      "tests/test_well_formed.py::test_loose_parser[info1329]",
      "tests/test_well_formed.py::test_strict_parser[info1561]",
      "tests/test_well_formed.py::test_strict_parser[info1172]",
      "tests/test_well_formed.py::test_loose_parser[info52]",
      "tests/test_well_formed.py::test_strict_parser[info825]",
      "tests/test_well_formed.py::test_loose_parser[info883]",
      "tests/test_well_formed.py::test_strict_parser[info1078]",
      "tests/test_well_formed.py::test_http_conditions[info79]",
      "tests/test_well_formed.py::test_strict_parser[info997]",
      "tests/test_well_formed.py::test_loose_parser[info977]",
      "tests/test_well_formed.py::test_loose_parser[info290]",
      "tests/test_well_formed.py::test_loose_parser[info1051]",
      "tests/test_well_formed.py::test_loose_parser[info166]",
      "tests/test_well_formed.py::test_loose_parser[info44]",
      "tests/test_well_formed.py::test_loose_parser[info1465]",
      "tests/test_well_formed.py::test_strict_parser[info1156]",
      "tests/test_well_formed.py::test_strict_parser[info1049]",
      "tests/test_well_formed.py::test_strict_parser[info1065]",
      "tests/test_well_formed.py::test_loose_parser[info1358]",
      "tests/test_well_formed.py::test_loose_parser[info1387]",
      "tests/test_well_formed.py::test_loose_parser[info530]",
      "tests/test_well_formed.py::test_loose_parser[info558]",
      "tests/test_well_formed.py::test_strict_parser[info1545]",
      "tests/test_well_formed.py::test_loose_parser[info641]",
      "tests/test_well_formed.py::test_strict_parser[info770]",
      "tests/test_well_formed.py::test_strict_parser[info421]",
      "tests/test_well_formed.py::test_http_conditions[info41]",
      "tests/test_well_formed.py::test_strict_parser[info1602]",
      "tests/test_well_formed.py::test_loose_parser[info1617]",
      "tests/test_well_formed.py::test_strict_parser[info71]",
      "tests/test_well_formed.py::test_strict_parser[info1343]",
      "tests/test_well_formed.py::test_loose_parser[info999]",
      "tests/test_well_formed.py::test_strict_parser[info571]",
      "tests/test_well_formed.py::test_loose_parser[info1077]",
      "tests/test_well_formed.py::test_strict_parser[info878]",
      "tests/test_well_formed.py::test_loose_parser[info712]",
      "tests/test_well_formed.py::test_loose_parser[info928]",
      "tests/test_well_formed.py::test_strict_parser[info684]",
      "tests/test_well_formed.py::test_loose_parser[info1119]",
      "tests/test_well_formed.py::test_loose_parser[info594]",
      "tests/test_well_formed.py::test_strict_parser[info1547]",
      "tests/test_well_formed.py::test_loose_parser[info711]",
      "tests/test_well_formed.py::test_strict_parser[info387]",
      "tests/test_well_formed.py::test_strict_parser[info1277]",
      "tests/test_well_formed.py::test_loose_parser[info716]",
      "tests/test_well_formed.py::test_loose_parser[info930]",
      "tests/test_well_formed.py::test_strict_parser[info1251]",
      "tests/test_well_formed.py::test_loose_parser[info1627]",
      "tests/test_well_formed.py::test_loose_parser[info668]",
      "tests/test_well_formed.py::test_loose_parser[info1085]",
      "tests/test_well_formed.py::test_loose_parser[info1160]",
      "tests/test_well_formed.py::test_loose_parser[info881]",
      "tests/test_well_formed.py::test_loose_parser[info719]",
      "tests/test_well_formed.py::test_loose_parser[info2]",
      "tests/test_well_formed.py::test_loose_parser[info1474]",
      "tests/test_well_formed.py::test_strict_parser[info865]",
      "tests/test_well_formed.py::test_strict_parser[info1098]",
      "tests/test_well_formed.py::test_loose_parser[info244]",
      "tests/test_well_formed.py::test_loose_parser[info707]",
      "tests/test_well_formed.py::test_loose_parser[info254]",
      "tests/test_well_formed.py::test_strict_parser[info558]",
      "tests/test_well_formed.py::test_strict_parser[info656]",
      "tests/test_well_formed.py::test_loose_parser[info847]",
      "tests/test_well_formed.py::test_strict_parser[info1540]",
      "tests/test_well_formed.py::test_loose_parser[info920]",
      "tests/test_well_formed.py::test_strict_parser[info804]",
      "tests/test_well_formed.py::test_loose_parser[info289]",
      "tests/test_well_formed.py::test_strict_parser[info1004]",
      "tests/test_well_formed.py::test_loose_parser[info1461]",
      "tests/test_well_formed.py::test_loose_parser[info1488]",
      "tests/test_well_formed.py::test_loose_parser[info14]",
      "tests/test_well_formed.py::test_loose_parser[info474]",
      "tests/test_well_formed.py::test_strict_parser[info1455]",
      "tests/test_well_formed.py::test_strict_parser[info1366]",
      "tests/test_well_formed.py::test_loose_parser[info553]",
      "tests/test_well_formed.py::test_loose_parser[info747]",
      "tests/test_well_formed.py::test_strict_parser[info144]",
      "tests/test_well_formed.py::test_loose_parser[info542]",
      "tests/test_well_formed.py::test_strict_parser[info202]",
      "tests/test_well_formed.py::test_loose_parser[info910]",
      "tests/test_well_formed.py::test_loose_parser[info97]",
      "tests/test_well_formed.py::test_strict_parser[info1115]",
      "tests/test_well_formed.py::test_loose_parser[info294]",
      "tests/test_well_formed.py::test_loose_parser[info929]",
      "tests/test_well_formed.py::test_strict_parser[info743]",
      "tests/test_well_formed.py::test_strict_parser[info634]",
      "tests/test_well_formed.py::test_loose_parser[info1369]",
      "tests/test_well_formed.py::test_loose_parser[info948]",
      "tests/test_well_formed.py::test_strict_parser[info576]",
      "tests/test_well_formed.py::test_strict_parser[info1210]",
      "tests/test_well_formed.py::test_strict_parser[info543]",
      "tests/test_well_formed.py::test_strict_parser[info1583]",
      "tests/test_well_formed.py::test_strict_parser[info767]",
      "tests/test_well_formed.py::test_strict_parser[info1331]",
      "tests/test_well_formed.py::test_strict_parser[info696]",
      "tests/test_well_formed.py::test_http_conditions[info53]",
      "tests/test_well_formed.py::test_strict_parser[info334]",
      "tests/test_well_formed.py::test_strict_parser[info915]",
      "tests/test_well_formed.py::test_loose_parser[info1052]",
      "tests/test_well_formed.py::test_loose_parser[info104]",
      "tests/test_well_formed.py::test_loose_parser[info903]",
      "tests/test_well_formed.py::test_loose_parser[info1506]",
      "tests/test_well_formed.py::test_strict_parser[info1376]",
      "tests/test_well_formed.py::test_loose_parser[info589]",
      "tests/test_well_formed.py::test_loose_parser[info117]",
      "tests/test_well_formed.py::test_strict_parser[info487]",
      "tests/test_well_formed.py::test_strict_parser[info21]",
      "tests/test_well_formed.py::test_strict_parser[info1029]",
      "tests/test_well_formed.py::test_strict_parser[info592]",
      "tests/test_well_formed.py::test_loose_parser[info1328]",
      "tests/test_well_formed.py::test_strict_parser[info54]",
      "tests/test_well_formed.py::test_strict_parser[info1170]",
      "tests/test_well_formed.py::test_loose_parser[info752]",
      "tests/test_well_formed.py::test_loose_parser[info1463]",
      "tests/test_well_formed.py::test_strict_parser[info1484]",
      "tests/test_well_formed.py::test_strict_parser[info332]",
      "tests/test_well_formed.py::test_strict_parser[info947]",
      "tests/test_well_formed.py::test_loose_parser[info693]",
      "tests/test_well_formed.py::test_loose_parser[info1575]",
      "tests/test_well_formed.py::test_strict_parser[info1515]",
      "tests/test_well_formed.py::test_loose_parser[info1201]",
      "tests/test_well_formed.py::test_strict_parser[info1047]",
      "tests/test_well_formed.py::test_strict_parser[info840]",
      "tests/test_well_formed.py::test_strict_parser[info914]",
      "tests/test_well_formed.py::test_strict_parser[info128]",
      "tests/test_well_formed.py::test_loose_parser[info793]",
      "tests/test_well_formed.py::test_strict_parser[info85]",
      "tests/test_well_formed.py::test_loose_parser[info918]",
      "tests/test_well_formed.py::test_loose_parser[info525]",
      "tests/test_well_formed.py::test_loose_parser[info1601]",
      "tests/test_well_formed.py::test_loose_parser[info410]",
      "tests/test_well_formed.py::test_strict_parser[info709]",
      "tests/test_well_formed.py::test_loose_parser[info815]",
      "tests/test_well_formed.py::test_loose_parser[info721]",
      "tests/test_well_formed.py::test_strict_parser[info12]",
      "tests/test_well_formed.py::test_http_conditions[info93]",
      "tests/test_well_formed.py::test_strict_parser[info1258]",
      "tests/test_well_formed.py::test_loose_parser[info941]",
      "tests/test_well_formed.py::test_loose_parser[info1075]",
      "tests/test_well_formed.py::test_loose_parser[info523]",
      "tests/test_well_formed.py::test_loose_parser[info1446]",
      "tests/test_well_formed.py::test_strict_parser[info817]",
      "tests/test_well_formed.py::test_loose_parser[info449]",
      "tests/test_well_formed.py::test_strict_parser[info189]",
      "tests/test_well_formed.py::test_strict_parser[info897]",
      "tests/test_well_formed.py::test_loose_parser[info1030]",
      "tests/test_well_formed.py::test_loose_parser[info1247]",
      "tests/test_well_formed.py::test_loose_parser[info737]",
      "tests/test_well_formed.py::test_loose_parser[info267]",
      "tests/test_well_formed.py::test_loose_parser[info204]",
      "tests/test_well_formed.py::test_loose_parser[info891]",
      "tests/test_well_formed.py::test_strict_parser[info586]",
      "tests/test_well_formed.py::test_loose_parser[info982]",
      "tests/test_well_formed.py::test_strict_parser[info961]",
      "tests/test_well_formed.py::test_loose_parser[info94]",
      "tests/test_well_formed.py::test_strict_parser[info66]",
      "tests/test_well_formed.py::test_loose_parser[info735]",
      "tests/test_well_formed.py::test_strict_parser[info1367]",
      "tests/test_well_formed.py::test_loose_parser[info826]",
      "tests/test_well_formed.py::test_loose_parser[info508]",
      "tests/test_well_formed.py::test_loose_parser[info808]",
      "tests/test_well_formed.py::test_strict_parser[info314]",
      "tests/test_well_formed.py::test_strict_parser[info999]",
      "tests/test_well_formed.py::test_loose_parser[info1178]",
      "tests/test_well_formed.py::test_strict_parser[info848]",
      "tests/test_well_formed.py::test_strict_parser[info707]",
      "tests/test_well_formed.py::test_strict_parser[info1446]",
      "tests/test_well_formed.py::test_strict_parser[info1061]",
      "tests/test_well_formed.py::test_loose_parser[info796]",
      "tests/test_well_formed.py::test_loose_parser[info617]",
      "tests/test_well_formed.py::test_strict_parser[info993]",
      "tests/test_well_formed.py::test_strict_parser[info1401]",
      "tests/test_well_formed.py::test_loose_parser[info62]",
      "tests/test_well_formed.py::test_http_conditions[info85]",
      "tests/test_well_formed.py::test_strict_parser[info456]",
      "tests/test_well_formed.py::test_loose_parser[info379]",
      "tests/test_well_formed.py::test_loose_parser[info1398]",
      "tests/test_well_formed.py::test_loose_parser[info361]",
      "tests/test_well_formed.py::test_loose_parser[info156]",
      "tests/test_well_formed.py::test_loose_parser[info720]",
      "tests/test_well_formed.py::test_http_conditions[info89]",
      "tests/test_well_formed.py::test_loose_parser[info455]",
      "tests/test_well_formed.py::test_loose_parser[info217]",
      "tests/test_well_formed.py::test_loose_parser[info1492]",
      "tests/test_well_formed.py::test_strict_parser[info94]",
      "tests/test_well_formed.py::test_loose_parser[info1151]",
      "tests/test_well_formed.py::test_loose_parser[info1050]",
      "tests/test_well_formed.py::test_strict_parser[info678]",
      "tests/test_well_formed.py::test_strict_parser[info1451]",
      "tests/test_well_formed.py::test_strict_parser[info435]",
      "tests/test_well_formed.py::test_strict_parser[info516]",
      "tests/test_well_formed.py::test_loose_parser[info114]",
      "tests/test_well_formed.py::test_strict_parser[info426]",
      "tests/test_well_formed.py::test_loose_parser[info138]",
      "tests/test_well_formed.py::test_http_conditions[info63]",
      "tests/test_well_formed.py::test_loose_parser[info1266]",
      "tests/test_well_formed.py::test_loose_parser[info1568]",
      "tests/test_well_formed.py::test_strict_parser[info379]",
      "tests/test_well_formed.py::test_loose_parser[info861]",
      "tests/test_well_formed.py::test_strict_parser[info718]",
      "tests/test_well_formed.py::test_loose_parser[info951]",
      "tests/test_well_formed.py::test_loose_parser[info1111]",
      "tests/test_well_formed.py::test_loose_parser[info779]",
      "tests/test_well_formed.py::test_loose_parser[info50]",
      "tests/test_well_formed.py::test_http_conditions[info39]",
      "tests/test_well_formed.py::test_loose_parser[info672]",
      "tests/test_well_formed.py::test_loose_parser[info1307]",
      "tests/test_well_formed.py::test_strict_parser[info1312]",
      "tests/test_well_formed.py::test_strict_parser[info287]",
      "tests/test_well_formed.py::test_strict_parser[info235]",
      "tests/test_well_formed.py::test_strict_parser[info595]",
      "tests/test_well_formed.py::test_strict_parser[info203]",
      "tests/test_well_formed.py::test_strict_parser[info1027]",
      "tests/test_well_formed.py::test_loose_parser[info31]",
      "tests/test_well_formed.py::test_strict_parser[info1208]",
      "tests/test_well_formed.py::test_loose_parser[info22]",
      "tests/test_well_formed.py::test_strict_parser[info1121]",
      "tests/test_well_formed.py::test_loose_parser[info5]",
      "tests/test_well_formed.py::test_loose_parser[info203]",
      "tests/test_well_formed.py::test_strict_parser[info348]",
      "tests/test_well_formed.py::test_loose_parser[info1139]",
      "tests/test_well_formed.py::test_loose_parser[info519]",
      "tests/test_well_formed.py::test_loose_parser[info738]",
      "tests/test_well_formed.py::test_loose_parser[info1188]",
      "tests/test_well_formed.py::test_loose_parser[info271]",
      "tests/test_well_formed.py::test_loose_parser[info331]",
      "tests/test_well_formed.py::test_loose_parser[info1224]",
      "tests/test_well_formed.py::test_strict_parser[info871]",
      "tests/test_well_formed.py::test_loose_parser[info7]",
      "tests/test_well_formed.py::test_loose_parser[info557]",
      "tests/test_well_formed.py::test_http_conditions[info1]",
      "tests/test_well_formed.py::test_strict_parser[info1523]",
      "tests/test_well_formed.py::test_strict_parser[info122]",
      "tests/test_well_formed.py::test_loose_parser[info354]",
      "tests/test_well_formed.py::test_loose_parser[info602]",
      "tests/test_well_formed.py::test_loose_parser[info742]",
      "tests/test_well_formed.py::test_strict_parser[info236]",
      "tests/test_well_formed.py::test_loose_parser[info1443]",
      "tests/test_well_formed.py::test_strict_parser[info1400]",
      "tests/test_well_formed.py::test_loose_parser[info195]",
      "tests/test_well_formed.py::test_loose_parser[info367]",
      "tests/test_well_formed.py::test_strict_parser[info727]",
      "tests/test_well_formed.py::test_strict_parser[info1618]",
      "tests/test_well_formed.py::test_loose_parser[info1143]",
      "tests/test_well_formed.py::test_loose_parser[info626]",
      "tests/test_well_formed.py::test_loose_parser[info570]",
      "tests/test_well_formed.py::test_loose_parser[info28]",
      "tests/test_well_formed.py::test_loose_parser[info109]",
      "tests/test_well_formed.py::test_strict_parser[info1520]",
      "tests/test_well_formed.py::test_strict_parser[info474]",
      "tests/test_well_formed.py::test_loose_parser[info259]",
      "tests/test_well_formed.py::test_strict_parser[info261]",
      "tests/test_well_formed.py::test_strict_parser[info386]",
      "tests/test_well_formed.py::test_strict_parser[info632]",
      "tests/test_well_formed.py::test_loose_parser[info1281]",
      "tests/test_well_formed.py::test_loose_parser[info798]",
      "tests/test_well_formed.py::test_loose_parser[info565]",
      "tests/test_well_formed.py::test_loose_parser[info705]",
      "tests/test_well_formed.py::test_loose_parser[info916]",
      "tests/test_well_formed.py::test_strict_parser[info28]",
      "tests/test_well_formed.py::test_loose_parser[info913]",
      "tests/test_well_formed.py::test_strict_parser[info459]",
      "tests/test_well_formed.py::test_strict_parser[info132]",
      "tests/test_well_formed.py::test_strict_parser[info921]",
      "tests/test_well_formed.py::test_loose_parser[info1090]",
      "tests/test_well_formed.py::test_loose_parser[info1420]",
      "tests/test_well_formed.py::test_loose_parser[info788]",
      "tests/test_well_formed.py::test_loose_parser[info1262]",
      "tests/test_well_formed.py::test_strict_parser[info648]",
      "tests/test_well_formed.py::test_http_conditions[info44]",
      "tests/test_well_formed.py::test_strict_parser[info1136]",
      "tests/test_well_formed.py::test_strict_parser[info1134]",
      "tests/test_well_formed.py::test_loose_parser[info756]",
      "tests/test_well_formed.py::test_strict_parser[info699]",
      "tests/test_well_formed.py::test_loose_parser[info1171]",
      "tests/test_well_formed.py::test_strict_parser[info677]",
      "tests/test_well_formed.py::test_strict_parser[info1266]",
      "tests/test_well_formed.py::test_loose_parser[info1415]",
      "tests/test_well_formed.py::test_strict_parser[info442]",
      "tests/test_well_formed.py::test_strict_parser[info1058]",
      "tests/test_well_formed.py::test_strict_parser[info108]",
      "tests/test_well_formed.py::test_loose_parser[info868]",
      "tests/test_well_formed.py::test_strict_parser[info67]",
      "tests/test_well_formed.py::test_strict_parser[info1055]",
      "tests/test_well_formed.py::test_strict_parser[info533]",
      "tests/test_well_formed.py::test_loose_parser[info51]",
      "tests/test_well_formed.py::test_loose_parser[info1204]",
      "tests/test_well_formed.py::test_strict_parser[info300]",
      "tests/test_well_formed.py::test_strict_parser[info842]",
      "tests/test_well_formed.py::test_loose_parser[info1179]",
      "tests/test_well_formed.py::test_strict_parser[info111]",
      "tests/test_well_formed.py::test_loose_parser[info1181]",
      "tests/test_well_formed.py::test_strict_parser[info988]",
      "tests/test_well_formed.py::test_loose_parser[info510]",
      "tests/test_well_formed.py::test_loose_parser[info249]",
      "tests/test_well_formed.py::test_loose_parser[info288]",
      "tests/test_well_formed.py::test_loose_parser[info1603]",
      "tests/test_well_formed.py::test_loose_parser[info1184]",
      "tests/test_well_formed.py::test_strict_parser[info301]",
      "tests/test_well_formed.py::test_loose_parser[info529]",
      "tests/test_well_formed.py::test_loose_parser[info1352]",
      "tests/test_well_formed.py::test_loose_parser[info110]",
      "tests/test_well_formed.py::test_strict_parser[info3]",
      "tests/test_well_formed.py::test_strict_parser[info1069]",
      "tests/test_well_formed.py::test_loose_parser[info451]",
      "tests/test_well_formed.py::test_loose_parser[info229]",
      "tests/test_well_formed.py::test_loose_parser[info1200]",
      "tests/test_well_formed.py::test_strict_parser[info1597]",
      "tests/test_well_formed.py::test_loose_parser[info811]",
      "tests/test_well_formed.py::test_strict_parser[info637]",
      "tests/test_well_formed.py::test_loose_parser[info1645]",
      "tests/test_well_formed.py::test_strict_parser[info1527]",
      "tests/test_well_formed.py::test_loose_parser[info1438]",
      "tests/test_well_formed.py::test_strict_parser[info550]",
      "tests/test_well_formed.py::test_loose_parser[info192]",
      "tests/test_well_formed.py::test_strict_parser[info619]",
      "tests/test_well_formed.py::test_strict_parser[info1452]",
      "tests/test_well_formed.py::test_loose_parser[info103]",
      "tests/test_well_formed.py::test_strict_parser[info1399]",
      "tests/test_well_formed.py::test_loose_parser[info163]",
      "tests/test_well_formed.py::test_loose_parser[info438]",
      "tests/test_well_formed.py::test_loose_parser[info1291]",
      "tests/test_well_formed.py::test_loose_parser[info174]",
      "tests/test_well_formed.py::test_strict_parser[info305]",
      "tests/test_well_formed.py::test_loose_parser[info1512]",
      "tests/test_well_formed.py::test_loose_parser[info1230]",
      "tests/test_well_formed.py::test_loose_parser[info1062]",
      "tests/test_well_formed.py::test_loose_parser[info375]",
      "tests/test_well_formed.py::test_strict_parser[info2]",
      "tests/test_well_formed.py::test_http_conditions[info58]",
      "tests/test_well_formed.py::test_loose_parser[info91]",
      "tests/test_well_formed.py::test_loose_parser[info1198]",
      "tests/test_well_formed.py::test_strict_parser[info1259]",
      "tests/test_well_formed.py::test_strict_parser[info1498]",
      "tests/test_well_formed.py::test_loose_parser[info1023]",
      "tests/test_well_formed.py::test_loose_parser[info614]",
      "tests/test_well_formed.py::test_loose_parser[info855]",
      "tests/test_well_formed.py::test_loose_parser[info429]",
      "tests/test_well_formed.py::test_strict_parser[info159]",
      "tests/test_well_formed.py::test_loose_parser[info1174]",
      "tests/test_well_formed.py::test_loose_parser[info848]",
      "tests/test_well_formed.py::test_strict_parser[info503]",
      "tests/test_well_formed.py::test_strict_parser[info981]",
      "tests/test_well_formed.py::test_loose_parser[info1498]",
      "tests/test_well_formed.py::test_http_conditions[info70]",
      "tests/test_well_formed.py::test_strict_parser[info313]",
      "tests/test_well_formed.py::test_strict_parser[info1037]",
      "tests/test_well_formed.py::test_strict_parser[info134]",
      "tests/test_well_formed.py::test_loose_parser[info624]",
      "tests/test_well_formed.py::test_loose_parser[info1606]",
      "tests/test_well_formed.py::test_loose_parser[info890]",
      "tests/test_well_formed.py::test_http_conditions[info88]",
      "tests/test_well_formed.py::test_loose_parser[info187]",
      "tests/test_well_formed.py::test_loose_parser[info988]",
      "tests/test_well_formed.py::test_strict_parser[info512]",
      "tests/test_well_formed.py::test_strict_parser[info1381]",
      "tests/test_well_formed.py::test_strict_parser[info1503]",
      "tests/test_well_formed.py::test_strict_parser[info247]",
      "tests/test_well_formed.py::test_loose_parser[info1591]",
      "tests/test_well_formed.py::test_strict_parser[info686]",
      "tests/test_well_formed.py::test_loose_parser[info255]",
      "tests/test_well_formed.py::test_loose_parser[info1066]",
      "tests/test_well_formed.py::test_strict_parser[info302]",
      "tests/test_well_formed.py::test_strict_parser[info204]",
      "tests/test_well_formed.py::test_strict_parser[info133]",
      "tests/test_well_formed.py::test_loose_parser[info1316]",
      "tests/test_well_formed.py::test_strict_parser[info1231]",
      "tests/test_well_formed.py::test_strict_parser[info476]",
      "tests/test_well_formed.py::test_strict_parser[info469]",
      "tests/test_well_formed.py::test_loose_parser[info431]",
      "tests/test_well_formed.py::test_strict_parser[info1123]",
      "tests/test_well_formed.py::test_strict_parser[info20]",
      "tests/test_well_formed.py::test_strict_parser[info877]",
      "tests/test_well_formed.py::test_loose_parser[info20]",
      "tests/test_well_formed.py::test_loose_parser[info11]",
      "tests/test_well_formed.py::test_strict_parser[info916]",
      "tests/test_well_formed.py::test_strict_parser[info1439]",
      "tests/test_well_formed.py::test_strict_parser[info896]",
      "tests/test_well_formed.py::test_loose_parser[info562]",
      "tests/test_well_formed.py::test_strict_parser[info836]",
      "tests/test_well_formed.py::test_loose_parser[info1175]",
      "tests/test_well_formed.py::test_strict_parser[info199]",
      "tests/test_well_formed.py::test_loose_parser[info402]",
      "tests/test_well_formed.py::test_strict_parser[info1197]",
      "tests/test_well_formed.py::test_loose_parser[info1368]",
      "tests/test_well_formed.py::test_loose_parser[info323]",
      "tests/test_well_formed.py::test_loose_parser[info427]",
      "tests/test_well_formed.py::test_loose_parser[info168]",
      "tests/test_well_formed.py::test_strict_parser[info936]",
      "tests/test_well_formed.py::test_strict_parser[info213]",
      "tests/test_well_formed.py::test_loose_parser[info1071]",
      "tests/test_well_formed.py::test_loose_parser[info59]",
      "tests/test_well_formed.py::test_http_conditions[info32]",
      "tests/test_well_formed.py::test_loose_parser[info418]",
      "tests/test_well_formed.py::test_loose_parser[info538]",
      "tests/test_well_formed.py::test_loose_parser[info824]",
      "tests/test_well_formed.py::test_strict_parser[info179]",
      "tests/test_well_formed.py::test_loose_parser[info706]",
      "tests/test_well_formed.py::test_strict_parser[info1485]",
      "tests/test_well_formed.py::test_loose_parser[info937]",
      "tests/test_well_formed.py::test_strict_parser[info1519]",
      "tests/test_well_formed.py::test_strict_parser[info80]",
      "tests/test_well_formed.py::test_loose_parser[info1427]",
      "tests/test_well_formed.py::test_strict_parser[info422]",
      "tests/test_well_formed.py::test_strict_parser[info1421]",
      "tests/test_well_formed.py::test_loose_parser[info869]",
      "tests/test_well_formed.py::test_strict_parser[info725]",
      "tests/test_well_formed.py::test_strict_parser[info1160]",
      "tests/test_well_formed.py::test_loose_parser[info248]",
      "tests/test_well_formed.py::test_loose_parser[info802]",
      "tests/test_well_formed.py::test_loose_parser[info247]",
      "tests/test_well_formed.py::test_loose_parser[info408]",
      "tests/test_well_formed.py::test_strict_parser[info1122]",
      "tests/test_well_formed.py::test_strict_parser[info444]",
      "tests/test_well_formed.py::test_loose_parser[info1602]",
      "tests/test_well_formed.py::test_loose_parser[info1595]",
      "tests/test_well_formed.py::test_loose_parser[info520]",
      "tests/test_well_formed.py::test_loose_parser[info955]",
      "tests/test_well_formed.py::test_strict_parser[info210]",
      "tests/test_well_formed.py::test_strict_parser[info1148]",
      "tests/test_well_formed.py::test_strict_parser[info126]",
      "tests/test_well_formed.py::test_strict_parser[info1036]",
      "tests/test_well_formed.py::test_loose_parser[info794]",
      "tests/test_well_formed.py::test_http_conditions[info73]",
      "tests/test_well_formed.py::test_loose_parser[info58]",
      "tests/test_well_formed.py::test_loose_parser[info1496]",
      "tests/test_well_formed.py::test_strict_parser[info136]",
      "tests/test_well_formed.py::test_loose_parser[info1206]",
      "tests/test_well_formed.py::test_strict_parser[info542]",
      "tests/test_well_formed.py::test_strict_parser[info564]",
      "tests/test_well_formed.py::test_strict_parser[info237]",
      "tests/test_well_formed.py::test_loose_parser[info1346]",
      "tests/test_well_formed.py::test_strict_parser[info271]",
      "tests/test_well_formed.py::test_loose_parser[info488]",
      "tests/test_well_formed.py::test_strict_parser[info827]",
      "tests/test_well_formed.py::test_loose_parser[info1140]",
      "tests/test_well_formed.py::test_strict_parser[info874]",
      "tests/test_well_formed.py::test_strict_parser[info252]",
      "tests/test_well_formed.py::test_strict_parser[info174]",
      "tests/test_well_formed.py::test_http_conditions[info11]",
      "tests/test_well_formed.py::test_strict_parser[info990]",
      "tests/test_well_formed.py::test_strict_parser[info833]",
      "tests/test_well_formed.py::test_loose_parser[info1630]",
      "tests/test_well_formed.py::test_strict_parser[info112]",
      "tests/test_well_formed.py::test_strict_parser[info1462]",
      "tests/test_well_formed.py::test_loose_parser[info1003]",
      "tests/test_well_formed.py::test_loose_parser[info459]",
      "tests/test_well_formed.py::test_strict_parser[info621]",
      "tests/test_well_formed.py::test_loose_parser[info843]",
      "tests/test_well_formed.py::test_strict_parser[info1158]",
      "tests/test_well_formed.py::test_strict_parser[info51]",
      "tests/test_well_formed.py::test_loose_parser[info535]",
      "tests/test_well_formed.py::test_loose_parser[info1578]",
      "tests/test_well_formed.py::test_loose_parser[info534]",
      "tests/test_well_formed.py::test_strict_parser[info588]",
      "tests/test_well_formed.py::test_loose_parser[info1377]",
      "tests/test_well_formed.py::test_loose_parser[info426]",
      "tests/test_well_formed.py::test_loose_parser[info1162]",
      "tests/test_well_formed.py::test_strict_parser[info1008]",
      "tests/test_well_formed.py::test_strict_parser[info35]",
      "tests/test_well_formed.py::test_loose_parser[info1018]",
      "tests/test_well_formed.py::test_loose_parser[info366]",
      "tests/test_well_formed.py::test_loose_parser[info1336]",
      "tests/test_well_formed.py::test_loose_parser[info1455]",
      "tests/test_well_formed.py::test_loose_parser[info479]",
      "tests/test_well_formed.py::test_loose_parser[info1599]",
      "tests/test_well_formed.py::test_loose_parser[info372]",
      "tests/test_well_formed.py::test_strict_parser[info1603]",
      "tests/test_well_formed.py::test_loose_parser[info1447]",
      "tests/test_well_formed.py::test_strict_parser[info1535]",
      "tests/test_well_formed.py::test_loose_parser[info313]",
      "tests/test_well_formed.py::test_strict_parser[info1404]",
      "tests/test_well_formed.py::test_strict_parser[info1322]",
      "tests/test_well_formed.py::test_loose_parser[info780]",
      "tests/test_well_formed.py::test_loose_parser[info423]",
      "tests/test_well_formed.py::test_loose_parser[info434]",
      "tests/test_well_formed.py::test_strict_parser[info1437]",
      "tests/test_well_formed.py::test_strict_parser[info284]",
      "tests/test_well_formed.py::test_strict_parser[info1350]",
      "tests/test_well_formed.py::test_loose_parser[info251]",
      "tests/test_well_formed.py::test_loose_parser[info1355]",
      "tests/test_well_formed.py::test_http_conditions[info29]",
      "tests/test_well_formed.py::test_loose_parser[info1065]",
      "tests/test_well_formed.py::test_loose_parser[info1041]",
      "tests/test_well_formed.py::test_loose_parser[info896]",
      "tests/test_well_formed.py::test_strict_parser[info1634]",
      "tests/test_well_formed.py::test_loose_parser[info597]",
      "tests/test_well_formed.py::test_loose_parser[info445]",
      "tests/test_well_formed.py::test_loose_parser[info834]",
      "tests/test_well_formed.py::test_loose_parser[info56]",
      "tests/test_well_formed.py::test_strict_parser[info1631]",
      "tests/test_well_formed.py::test_loose_parser[info90]",
      "tests/test_well_formed.py::test_strict_parser[info1386]",
      "tests/test_well_formed.py::test_strict_parser[info617]",
      "tests/test_well_formed.py::test_loose_parser[info1319]",
      "tests/test_well_formed.py::test_loose_parser[info1638]",
      "tests/test_well_formed.py::test_strict_parser[info514]",
      "tests/test_well_formed.py::test_loose_parser[info859]",
      "tests/test_well_formed.py::test_loose_parser[info1418]",
      "tests/test_well_formed.py::test_loose_parser[info1305]",
      "tests/test_well_formed.py::test_loose_parser[info131]",
      "tests/test_well_formed.py::test_strict_parser[info689]",
      "tests/test_well_formed.py::test_loose_parser[info1557]",
      "tests/test_well_formed.py::test_loose_parser[info1101]",
      "tests/test_well_formed.py::test_loose_parser[info1297]",
      "tests/test_well_formed.py::test_strict_parser[info336]",
      "tests/test_well_formed.py::test_strict_parser[info955]",
      "tests/test_well_formed.py::test_strict_parser[info280]",
      "tests/test_well_formed.py::test_strict_parser[info687]",
      "tests/test_well_formed.py::test_strict_parser[info1500]",
      "tests/test_well_formed.py::test_strict_parser[info161]",
      "tests/test_well_formed.py::test_strict_parser[info1113]",
      "tests/test_well_formed.py::test_loose_parser[info1330]",
      "tests/test_well_formed.py::test_loose_parser[info326]",
      "tests/test_well_formed.py::test_loose_parser[info1607]",
      "tests/test_well_formed.py::test_strict_parser[info1023]",
      "tests/test_well_formed.py::test_loose_parser[info390]",
      "tests/test_well_formed.py::test_strict_parser[info224]",
      "tests/test_well_formed.py::test_strict_parser[info1562]",
      "tests/test_well_formed.py::test_loose_parser[info695]",
      "tests/test_well_formed.py::test_strict_parser[info1444]",
      "tests/test_well_formed.py::test_strict_parser[info78]",
      "tests/test_well_formed.py::test_loose_parser[info1219]",
      "tests/test_well_formed.py::test_http_conditions[info3]",
      "tests/test_well_formed.py::test_strict_parser[info819]",
      "tests/test_well_formed.py::test_strict_parser[info976]",
      "tests/test_well_formed.py::test_strict_parser[info327]",
      "tests/test_well_formed.py::test_strict_parser[info127]",
      "tests/test_well_formed.py::test_loose_parser[info691]",
      "tests/test_well_formed.py::test_loose_parser[info1129]",
      "tests/test_well_formed.py::test_loose_parser[info652]",
      "tests/test_well_formed.py::test_loose_parser[info226]",
      "tests/test_well_formed.py::test_loose_parser[info783]",
      "tests/test_well_formed.py::test_strict_parser[info451]",
      "tests/test_well_formed.py::test_loose_parser[info647]",
      "tests/test_well_formed.py::test_loose_parser[info1211]",
      "tests/test_well_formed.py::test_strict_parser[info22]",
      "tests/test_well_formed.py::test_strict_parser[info1084]",
      "tests/test_well_formed.py::test_loose_parser[info1373]",
      "tests/test_well_formed.py::test_strict_parser[info757]",
      "tests/test_well_formed.py::test_strict_parser[info418]",
      "tests/test_well_formed.py::test_loose_parser[info35]",
      "tests/test_well_formed.py::test_loose_parser[info123]",
      "tests/test_well_formed.py::test_loose_parser[info1123]",
      "tests/test_well_formed.py::test_loose_parser[info309]",
      "tests/test_well_formed.py::test_loose_parser[info656]",
      "tests/test_well_formed.py::test_http_conditions[info14]",
      "tests/test_well_formed.py::test_strict_parser[info322]",
      "tests/test_well_formed.py::test_strict_parser[info1174]",
      "tests/test_well_formed.py::test_loose_parser[info1464]",
      "tests/test_well_formed.py::test_strict_parser[info1191]",
      "tests/test_well_formed.py::test_loose_parser[info1182]",
      "tests/test_well_formed.py::test_http_conditions[info84]",
      "tests/test_well_formed.py::test_loose_parser[info1128]",
      "tests/test_well_formed.py::test_strict_parser[info1368]",
      "tests/test_well_formed.py::test_loose_parser[info1459]",
      "tests/test_well_formed.py::test_loose_parser[info1321]",
      "tests/test_well_formed.py::test_strict_parser[info738]",
      "tests/test_well_formed.py::test_loose_parser[info457]",
      "tests/test_well_formed.py::test_loose_parser[info901]",
      "tests/test_well_formed.py::test_strict_parser[info1480]",
      "tests/test_well_formed.py::test_strict_parser[info1335]",
      "tests/test_well_formed.py::test_strict_parser[info641]",
      "tests/test_well_formed.py::test_loose_parser[info1534]",
      "tests/test_well_formed.py::test_strict_parser[info821]",
      "tests/test_well_formed.py::test_strict_parser[info1474]",
      "tests/test_well_formed.py::test_loose_parser[info1240]",
      "tests/test_well_formed.py::test_loose_parser[info1522]",
      "tests/test_well_formed.py::test_loose_parser[info1120]",
      "tests/test_well_formed.py::test_loose_parser[info1038]",
      "tests/test_well_formed.py::test_strict_parser[info1580]",
      "tests/test_well_formed.py::test_strict_parser[info1126]",
      "tests/test_well_formed.py::test_loose_parser[info812]",
      "tests/test_well_formed.py::test_loose_parser[info1622]",
      "tests/test_well_formed.py::test_loose_parser[info585]",
      "tests/test_well_formed.py::test_loose_parser[info1094]",
      "tests/test_well_formed.py::test_loose_parser[info1125]",
      "tests/test_well_formed.py::test_loose_parser[info338]",
      "tests/test_well_formed.py::test_strict_parser[info45]",
      "tests/test_well_formed.py::test_strict_parser[info1468]",
      "tests/test_well_formed.py::test_loose_parser[info216]",
      "tests/test_well_formed.py::test_strict_parser[info319]",
      "tests/test_well_formed.py::test_strict_parser[info273]",
      "tests/test_well_formed.py::test_strict_parser[info1204]",
      "tests/test_well_formed.py::test_loose_parser[info269]",
      "tests/test_well_formed.py::test_loose_parser[info1152]",
      "tests/test_well_formed.py::test_loose_parser[info69]",
      "tests/test_well_formed.py::test_loose_parser[info396]",
      "tests/test_well_formed.py::test_loose_parser[info1581]",
      "tests/test_well_formed.py::test_loose_parser[info907]",
      "tests/test_well_formed.py::test_strict_parser[info1146]",
      "tests/test_well_formed.py::test_strict_parser[info562]",
      "tests/test_well_formed.py::test_strict_parser[info831]",
      "tests/test_well_formed.py::test_strict_parser[info497]",
      "tests/test_well_formed.py::test_loose_parser[info13]",
      "tests/test_well_formed.py::test_loose_parser[info598]",
      "tests/test_well_formed.py::test_strict_parser[info1040]",
      "tests/test_well_formed.py::test_strict_parser[info1088]",
      "tests/test_well_formed.py::test_loose_parser[info574]",
      "tests/test_well_formed.py::test_strict_parser[info428]",
      "tests/test_well_formed.py::test_strict_parser[info711]",
      "tests/test_well_formed.py::test_strict_parser[info9]",
      "tests/test_well_formed.py::test_strict_parser[info1577]",
      "tests/test_well_formed.py::test_loose_parser[info72]",
      "tests/test_well_formed.py::test_strict_parser[info172]",
      "tests/test_well_formed.py::test_loose_parser[info781]",
      "tests/test_well_formed.py::test_loose_parser[info1519]",
      "tests/test_well_formed.py::test_loose_parser[info1233]",
      "tests/test_well_formed.py::test_strict_parser[info1355]",
      "tests/test_well_formed.py::test_strict_parser[info1345]",
      "tests/test_well_formed.py::test_loose_parser[info377]",
      "tests/test_well_formed.py::test_strict_parser[info785]",
      "tests/test_well_formed.py::test_strict_parser[info253]",
      "tests/test_well_formed.py::test_loose_parser[info1177]",
      "tests/test_well_formed.py::test_strict_parser[info826]",
      "tests/test_well_formed.py::test_loose_parser[info1222]",
      "tests/test_well_formed.py::test_strict_parser[info1430]",
      "tests/test_well_formed.py::test_loose_parser[info932]",
      "tests/test_well_formed.py::test_loose_parser[info1457]",
      "tests/test_well_formed.py::test_loose_parser[info1556]",
      "tests/test_well_formed.py::test_strict_parser[info254]",
      "tests/test_well_formed.py::test_strict_parser[info665]",
      "tests/test_well_formed.py::test_loose_parser[info657]",
      "tests/test_well_formed.py::test_strict_parser[info171]",
      "tests/test_well_formed.py::test_strict_parser[info1424]",
      "tests/test_well_formed.py::test_loose_parser[info664]",
      "tests/test_well_formed.py::test_strict_parser[info750]",
      "tests/test_well_formed.py::test_loose_parser[info772]",
      "tests/test_well_formed.py::test_loose_parser[info1154]",
      "tests/test_well_formed.py::test_loose_parser[info621]",
      "tests/test_well_formed.py::test_loose_parser[info1260]",
      "tests/test_well_formed.py::test_http_conditions[info10]",
      "tests/test_well_formed.py::test_strict_parser[info1279]",
      "tests/test_well_formed.py::test_loose_parser[info636]",
      "tests/test_well_formed.py::test_loose_parser[info857]",
      "tests/test_well_formed.py::test_loose_parser[info1300]",
      "tests/test_well_formed.py::test_loose_parser[info1480]",
      "tests/test_well_formed.py::test_loose_parser[info806]",
      "tests/test_well_formed.py::test_strict_parser[info42]",
      "tests/test_well_formed.py::test_strict_parser[info655]",
      "tests/test_well_formed.py::test_loose_parser[info385]",
      "tests/test_well_formed.py::test_strict_parser[info1199]",
      "tests/test_well_formed.py::test_strict_parser[info1534]",
      "tests/test_well_formed.py::test_http_conditions[info12]",
      "tests/test_well_formed.py::test_strict_parser[info569]",
      "tests/test_well_formed.py::test_strict_parser[info979]",
      "tests/test_well_formed.py::test_strict_parser[info306]",
      "tests/test_well_formed.py::test_strict_parser[info959]",
      "tests/test_well_formed.py::test_loose_parser[info286]",
      "tests/test_well_formed.py::test_loose_parser[info182]",
      "tests/test_well_formed.py::test_loose_parser[info339]",
      "tests/test_well_formed.py::test_loose_parser[info266]",
      "tests/test_well_formed.py::test_strict_parser[info1413]",
      "tests/test_well_formed.py::test_strict_parser[info1159]",
      "tests/test_well_formed.py::test_strict_parser[info844]",
      "tests/test_well_formed.py::test_loose_parser[info1424]",
      "tests/test_well_formed.py::test_strict_parser[info27]",
      "tests/test_well_formed.py::test_loose_parser[info465]",
      "tests/test_well_formed.py::test_loose_parser[info1571]",
      "tests/test_well_formed.py::test_loose_parser[info1379]",
      "tests/test_well_formed.py::test_loose_parser[info454]",
      "tests/test_well_formed.py::test_strict_parser[info1518]",
      "tests/test_well_formed.py::test_loose_parser[info1238]",
      "tests/test_well_formed.py::test_loose_parser[info1221]",
      "tests/test_well_formed.py::test_loose_parser[info532]",
      "tests/test_well_formed.py::test_strict_parser[info1114]",
      "tests/test_well_formed.py::test_strict_parser[info734]",
      "tests/test_well_formed.py::test_loose_parser[info991]",
      "tests/test_well_formed.py::test_strict_parser[info861]",
      "tests/test_well_formed.py::test_loose_parser[info573]",
      "tests/test_well_formed.py::test_strict_parser[info491]",
      "tests/test_well_formed.py::test_loose_parser[info1550]",
      "tests/test_well_formed.py::test_strict_parser[info100]",
      "tests/test_well_formed.py::test_strict_parser[info789]",
      "tests/test_well_formed.py::test_loose_parser[info493]",
      "tests/test_well_formed.py::test_loose_parser[info489]",
      "tests/test_well_formed.py::test_strict_parser[info769]",
      "tests/test_well_formed.py::test_loose_parser[info540]",
      "tests/test_well_formed.py::test_loose_parser[info580]",
      "tests/test_well_formed.py::test_strict_parser[info816]",
      "tests/test_well_formed.py::test_loose_parser[info723]",
      "tests/test_well_formed.py::test_loose_parser[info1521]",
      "tests/test_well_formed.py::test_loose_parser[info262]",
      "tests/test_well_formed.py::test_loose_parser[info299]",
      "tests/test_well_formed.py::test_loose_parser[info268]",
      "tests/test_well_formed.py::test_loose_parser[info135]",
      "tests/test_well_formed.py::test_strict_parser[info962]",
      "tests/test_well_formed.py::test_strict_parser[info858]",
      "tests/test_well_formed.py::test_loose_parser[info1288]",
      "tests/test_well_formed.py::test_loose_parser[info985]",
      "tests/test_well_formed.py::test_strict_parser[info355]",
      "tests/test_well_formed.py::test_strict_parser[info507]",
      "tests/test_well_formed.py::test_loose_parser[info191]",
      "tests/test_well_formed.py::test_strict_parser[info1524]",
      "tests/test_well_formed.py::test_strict_parser[info1463]",
      "tests/test_well_formed.py::test_loose_parser[info1473]",
      "tests/test_well_formed.py::test_strict_parser[info607]",
      "tests/test_well_formed.py::test_loose_parser[info387]",
      "tests/test_well_formed.py::test_loose_parser[info1356]",
      "tests/test_well_formed.py::test_strict_parser[info1118]",
      "tests/test_well_formed.py::test_strict_parser[info537]",
      "tests/test_well_formed.py::test_loose_parser[info1081]",
      "tests/test_well_formed.py::test_strict_parser[info11]",
      "tests/test_well_formed.py::test_loose_parser[info740]",
      "tests/test_well_formed.py::test_strict_parser[info153]",
      "tests/test_well_formed.py::test_strict_parser[info1431]",
      "tests/test_well_formed.py::test_strict_parser[info722]",
      "tests/test_well_formed.py::test_strict_parser[info728]",
      "tests/test_well_formed.py::test_loose_parser[info177]",
      "tests/test_well_formed.py::test_strict_parser[info1178]",
      "tests/test_well_formed.py::test_loose_parser[info1289]",
      "tests/test_well_formed.py::test_loose_parser[info1091]",
      "tests/test_well_formed.py::test_loose_parser[info1566]",
      "tests/test_well_formed.py::test_strict_parser[info480]",
      "tests/test_well_formed.py::test_loose_parser[info1634]",
      "tests/test_well_formed.py::test_loose_parser[info989]",
      "tests/test_well_formed.py::test_strict_parser[info1057]",
      "tests/test_well_formed.py::test_strict_parser[info1481]",
      "tests/test_well_formed.py::test_loose_parser[info864]",
      "tests/test_well_formed.py::test_loose_parser[info1173]",
      "tests/test_well_formed.py::test_strict_parser[info1060]",
      "tests/test_well_formed.py::test_strict_parser[info52]",
      "tests/test_well_formed.py::test_strict_parser[info640]",
      "tests/test_well_formed.py::test_loose_parser[info148]",
      "tests/test_well_formed.py::test_strict_parser[info1546]",
      "tests/test_well_formed.py::test_loose_parser[info674]",
      "tests/test_well_formed.py::test_loose_parser[info220]",
      "tests/test_well_formed.py::test_strict_parser[info788]",
      "tests/test_well_formed.py::test_loose_parser[info1467]",
      "tests/test_well_formed.py::test_loose_parser[info359]",
      "tests/test_well_formed.py::test_strict_parser[info1458]",
      "tests/test_well_formed.py::test_strict_parser[info498]",
      "tests/test_well_formed.py::test_loose_parser[info1396]",
      "tests/test_well_formed.py::test_strict_parser[info698]",
      "tests/test_well_formed.py::test_strict_parser[info855]",
      "tests/test_well_formed.py::test_strict_parser[info1584]",
      "tests/test_well_formed.py::test_strict_parser[info662]",
      "tests/test_well_formed.py::test_strict_parser[info759]",
      "tests/test_well_formed.py::test_loose_parser[info1012]",
      "tests/test_well_formed.py::test_loose_parser[info1594]",
      "tests/test_well_formed.py::test_loose_parser[info586]",
      "tests/test_well_formed.py::test_loose_parser[info1554]",
      "tests/test_well_formed.py::test_loose_parser[info1526]",
      "tests/test_well_formed.py::test_strict_parser[info703]",
      "tests/test_well_formed.py::test_loose_parser[info898]",
      "tests/test_well_formed.py::test_strict_parser[info1502]",
      "tests/test_well_formed.py::test_strict_parser[info1050]",
      "tests/test_well_formed.py::test_http_conditions[info6]",
      "tests/test_well_formed.py::test_http_conditions[info9]",
      "tests/test_well_formed.py::test_loose_parser[info1135]",
      "tests/test_well_formed.py::test_loose_parser[info75]",
      "tests/test_well_formed.py::test_strict_parser[info1525]",
      "tests/test_well_formed.py::test_strict_parser[info417]",
      "tests/test_well_formed.py::test_strict_parser[info37]",
      "tests/test_well_formed.py::test_strict_parser[info553]",
      "tests/test_well_formed.py::test_strict_parser[info570]",
      "tests/test_well_formed.py::test_loose_parser[info1251]",
      "tests/test_well_formed.py::test_loose_parser[info1588]",
      "tests/test_well_formed.py::test_loose_parser[info1333]",
      "tests/test_well_formed.py::test_loose_parser[info713]",
      "tests/test_well_formed.py::test_loose_parser[info1524]",
      "tests/test_well_formed.py::test_loose_parser[info681]",
      "tests/test_well_formed.py::test_loose_parser[info39]",
      "tests/test_well_formed.py::test_loose_parser[info92]",
      "tests/test_well_formed.py::test_strict_parser[info918]",
      "tests/test_well_formed.py::test_loose_parser[info800]",
      "tests/test_well_formed.py::test_loose_parser[info159]",
      "tests/test_well_formed.py::test_strict_parser[info834]",
      "tests/test_well_formed.py::test_loose_parser[info1263]",
      "tests/test_well_formed.py::test_strict_parser[info297]",
      "tests/test_well_formed.py::test_loose_parser[info809]",
      "tests/test_well_formed.py::test_loose_parser[info1294]",
      "tests/test_well_formed.py::test_strict_parser[info690]",
      "tests/test_well_formed.py::test_loose_parser[info480]",
      "tests/test_well_formed.py::test_strict_parser[info581]",
      "tests/test_well_formed.py::test_loose_parser[info571]",
      "tests/test_well_formed.py::test_strict_parser[info898]",
      "tests/test_well_formed.py::test_loose_parser[info1527]",
      "tests/test_well_formed.py::test_strict_parser[info1569]",
      "tests/test_well_formed.py::test_strict_parser[info635]",
      "tests/test_well_formed.py::test_loose_parser[info702]",
      "tests/test_well_formed.py::test_loose_parser[info1592]",
      "tests/test_well_formed.py::test_loose_parser[info1413]",
      "tests/test_well_formed.py::test_loose_parser[info819]",
      "tests/test_well_formed.py::test_strict_parser[info726]",
      "tests/test_well_formed.py::test_strict_parser[info1063]",
      "tests/test_well_formed.py::test_strict_parser[info647]",
      "tests/test_well_formed.py::test_strict_parser[info467]",
      "tests/test_well_formed.py::test_loose_parser[info596]",
      "tests/test_well_formed.py::test_strict_parser[info1241]",
      "tests/test_well_formed.py::test_strict_parser[info805]",
      "tests/test_well_formed.py::test_loose_parser[info653]",
      "tests/test_well_formed.py::test_strict_parser[info340]",
      "tests/test_well_formed.py::test_loose_parser[info665]",
      "tests/test_well_formed.py::test_loose_parser[info993]",
      "tests/test_well_formed.py::test_loose_parser[info1166]",
      "tests/test_well_formed.py::test_loose_parser[info513]",
      "tests/test_well_formed.py::test_strict_parser[info123]",
      "tests/test_well_formed.py::test_strict_parser[info1648]",
      "tests/test_well_formed.py::test_http_conditions[info72]",
      "tests/test_well_formed.py::test_strict_parser[info490]",
      "tests/test_well_formed.py::test_strict_parser[info1021]",
      "tests/test_well_formed.py::test_loose_parser[info200]",
      "tests/test_well_formed.py::test_loose_parser[info201]",
      "tests/test_well_formed.py::test_strict_parser[info10]",
      "tests/test_well_formed.py::test_strict_parser[info1294]",
      "tests/test_well_formed.py::test_strict_parser[info92]",
      "tests/test_well_formed.py::test_strict_parser[info810]",
      "tests/test_well_formed.py::test_strict_parser[info1337]",
      "tests/test_well_formed.py::test_loose_parser[info878]",
      "tests/test_well_formed.py::test_strict_parser[info1265]",
      "tests/test_well_formed.py::test_loose_parser[info132]",
      "tests/test_well_formed.py::test_loose_parser[info762]",
      "tests/test_well_formed.py::test_loose_parser[info1022]",
      "tests/test_well_formed.py::test_strict_parser[info1074]",
      "tests/test_well_formed.py::test_strict_parser[info356]",
      "tests/test_well_formed.py::test_strict_parser[info1269]",
      "tests/test_well_formed.py::test_loose_parser[info281]",
      "tests/test_well_formed.py::test_loose_parser[info54]",
      "tests/test_well_formed.py::test_strict_parser[info561]",
      "tests/test_well_formed.py::test_strict_parser[info195]",
      "tests/test_well_formed.py::test_loose_parser[info12]",
      "tests/test_well_formed.py::test_loose_parser[info1475]",
      "tests/test_well_formed.py::test_strict_parser[info773]",
      "tests/test_well_formed.py::test_loose_parser[info1613]",
      "tests/test_well_formed.py::test_strict_parser[info501]",
      "tests/test_well_formed.py::test_loose_parser[info1197]",
      "tests/test_well_formed.py::test_loose_parser[info936]",
      "tests/test_well_formed.py::test_strict_parser[info912]",
      "tests/test_well_formed.py::test_strict_parser[info325]",
      "tests/test_well_formed.py::test_loose_parser[info65]",
      "tests/test_well_formed.py::test_loose_parser[info1626]",
      "tests/test_well_formed.py::test_strict_parser[info664]",
      "tests/test_well_formed.py::test_loose_parser[info605]",
      "tests/test_well_formed.py::test_loose_parser[info541]",
      "tests/test_well_formed.py::test_loose_parser[info1597]",
      "tests/test_well_formed.py::test_loose_parser[info1518]",
      "tests/test_well_formed.py::test_loose_parser[info60]",
      "tests/test_well_formed.py::test_strict_parser[info1323]",
      "tests/test_well_formed.py::test_strict_parser[info413]",
      "tests/test_well_formed.py::test_strict_parser[info1014]",
      "tests/test_well_formed.py::test_loose_parser[info40]",
      "tests/test_well_formed.py::test_strict_parser[info719]",
      "tests/test_well_formed.py::test_strict_parser[info453]",
      "tests/test_well_formed.py::test_strict_parser[info1356]",
      "tests/test_well_formed.py::test_loose_parser[info820]",
      "tests/test_well_formed.py::test_loose_parser[info856]",
      "tests/test_well_formed.py::test_strict_parser[info536]",
      "tests/test_well_formed.py::test_strict_parser[info627]",
      "tests/test_well_formed.py::test_loose_parser[info660]",
      "tests/test_well_formed.py::test_strict_parser[info1093]",
      "tests/test_well_formed.py::test_strict_parser[info1128]",
      "tests/test_well_formed.py::test_loose_parser[info983]",
      "tests/test_well_formed.py::test_strict_parser[info55]",
      "tests/test_well_formed.py::test_strict_parser[info1301]",
      "tests/test_well_formed.py::test_loose_parser[info607]",
      "tests/test_well_formed.py::test_loose_parser[info1481]",
      "tests/test_well_formed.py::test_strict_parser[info102]",
      "tests/test_well_formed.py::test_loose_parser[info1620]",
      "tests/test_well_formed.py::test_strict_parser[info636]",
      "tests/test_well_formed.py::test_strict_parser[info1459]",
      "tests/test_well_formed.py::test_loose_parser[info1563]",
      "tests/test_well_formed.py::test_strict_parser[info522]",
      "tests/test_well_formed.py::test_strict_parser[info737]",
      "tests/test_well_formed.py::test_strict_parser[info1564]",
      "tests/test_well_formed.py::test_loose_parser[info352]",
      "tests/test_well_formed.py::test_loose_parser[info717]",
      "tests/test_well_formed.py::test_strict_parser[info1042]",
      "tests/test_well_formed.py::test_strict_parser[info793]",
      "tests/test_well_formed.py::test_strict_parser[info1411]",
      "tests/test_well_formed.py::test_loose_parser[info111]",
      "tests/test_well_formed.py::test_strict_parser[info862]",
      "tests/test_well_formed.py::test_strict_parser[info577]",
      "tests/test_well_formed.py::test_strict_parser[info681]",
      "tests/test_well_formed.py::test_loose_parser[info1436]",
      "tests/test_well_formed.py::test_loose_parser[info1142]",
      "tests/test_well_formed.py::test_strict_parser[info350]",
      "tests/test_well_formed.py::test_loose_parser[info1278]",
      "tests/test_well_formed.py::test_strict_parser[info1030]",
      "tests/test_well_formed.py::test_loose_parser[info1625]",
      "tests/test_well_formed.py::test_strict_parser[info430]",
      "tests/test_well_formed.py::test_loose_parser[info452]",
      "tests/test_well_formed.py::test_loose_parser[info690]",
      "tests/test_well_formed.py::test_loose_parser[info970]",
      "tests/test_well_formed.py::test_strict_parser[info1225]",
      "tests/test_well_formed.py::test_strict_parser[info532]",
      "tests/test_well_formed.py::test_strict_parser[info1017]",
      "tests/test_well_formed.py::test_strict_parser[info1555]",
      "tests/test_well_formed.py::test_loose_parser[info1555]",
      "tests/test_well_formed.py::test_strict_parser[info1594]",
      "tests/test_well_formed.py::test_loose_parser[info518]",
      "tests/test_well_formed.py::test_loose_parser[info275]",
      "tests/test_well_formed.py::test_strict_parser[info1083]",
      "tests/test_well_formed.py::test_loose_parser[info516]",
      "tests/test_well_formed.py::test_strict_parser[info1576]",
      "tests/test_well_formed.py::test_loose_parser[info1453]",
      "tests/test_well_formed.py::test_loose_parser[info1394]",
      "tests/test_well_formed.py::test_http_conditions[info49]",
      "tests/test_well_formed.py::test_loose_parser[info1026]",
      "tests/test_well_formed.py::test_loose_parser[info632]",
      "tests/test_well_formed.py::test_loose_parser[info743]",
      "tests/test_well_formed.py::test_loose_parser[info306]",
      "tests/test_well_formed.py::test_strict_parser[info1572]",
      "tests/test_well_formed.py::test_strict_parser[info1332]",
      "tests/test_well_formed.py::test_loose_parser[info775]",
      "tests/test_well_formed.py::test_strict_parser[info783]",
      "tests/test_well_formed.py::test_strict_parser[info1044]",
      "tests/test_well_formed.py::test_loose_parser[info1102]",
      "tests/test_well_formed.py::test_strict_parser[info258]",
      "tests/test_well_formed.py::test_loose_parser[info121]",
      "tests/test_well_formed.py::test_loose_parser[info21]",
      "tests/test_well_formed.py::test_strict_parser[info1230]",
      "tests/test_well_formed.py::test_strict_parser[info808]",
      "tests/test_well_formed.py::test_loose_parser[info892]",
      "tests/test_well_formed.py::test_strict_parser[info345]",
      "tests/test_well_formed.py::test_strict_parser[info408]",
      "tests/test_well_formed.py::test_loose_parser[info49]",
      "tests/test_well_formed.py::test_strict_parser[info1448]",
      "tests/test_well_formed.py::test_loose_parser[info1115]",
      "tests/test_well_formed.py::test_loose_parser[info862]",
      "tests/test_well_formed.py::test_http_conditions[info22]",
      "tests/test_well_formed.py::test_strict_parser[info642]",
      "tests/test_well_formed.py::test_strict_parser[info1591]",
      "tests/test_well_formed.py::test_strict_parser[info552]",
      "tests/test_well_formed.py::test_strict_parser[info87]",
      "tests/test_well_formed.py::test_strict_parser[info604]",
      "tests/test_well_formed.py::test_loose_parser[info382]",
      "tests/test_well_formed.py::test_loose_parser[info358]",
      "tests/test_well_formed.py::test_loose_parser[info498]",
      "tests/test_well_formed.py::test_loose_parser[info234]",
      "tests/test_well_formed.py::test_loose_parser[info1541]",
      "tests/test_well_formed.py::test_loose_parser[info1072]",
      "tests/test_well_formed.py::test_strict_parser[info704]",
      "tests/test_well_formed.py::test_loose_parser[info87]",
      "tests/test_well_formed.py::test_strict_parser[info1179]",
      "tests/test_well_formed.py::test_strict_parser[info486]",
      "tests/test_well_formed.py::test_loose_parser[info568]",
      "tests/test_well_formed.py::test_strict_parser[info1563]",
      "tests/test_well_formed.py::test_loose_parser[info1021]",
      "tests/test_well_formed.py::test_strict_parser[info1510]",
      "tests/test_well_formed.py::test_strict_parser[info547]",
      "tests/test_well_formed.py::test_strict_parser[info758]",
      "tests/test_well_formed.py::test_strict_parser[info1135]",
      "tests/test_well_formed.py::test_loose_parser[info425]",
      "tests/test_well_formed.py::test_strict_parser[info857]",
      "tests/test_well_formed.py::test_strict_parser[info406]",
      "tests/test_well_formed.py::test_loose_parser[info1454]",
      "tests/test_well_formed.py::test_strict_parser[info841]",
      "tests/test_well_formed.py::test_strict_parser[info894]",
      "tests/test_well_formed.py::test_strict_parser[info1329]",
      "tests/test_well_formed.py::test_loose_parser[info189]",
      "tests/test_well_formed.py::test_strict_parser[info168]",
      "tests/test_well_formed.py::test_loose_parser[info935]",
      "tests/test_well_formed.py::test_strict_parser[info987]",
      "tests/test_well_formed.py::test_strict_parser[info448]",
      "tests/test_well_formed.py::test_strict_parser[info269]",
      "tests/test_well_formed.py::test_strict_parser[info1558]",
      "tests/test_well_formed.py::test_strict_parser[info1522]",
      "tests/test_well_formed.py::test_loose_parser[info1572]",
      "tests/test_well_formed.py::test_loose_parser[info383]",
      "tests/test_well_formed.py::test_strict_parser[info870]",
      "tests/test_well_formed.py::test_strict_parser[info1150]",
      "tests/test_well_formed.py::test_strict_parser[info638]",
      "tests/test_well_formed.py::test_strict_parser[info357]",
      "tests/test_well_formed.py::test_loose_parser[info160]",
      "tests/test_well_formed.py::test_strict_parser[info398]",
      "tests/test_well_formed.py::test_loose_parser[info435]",
      "tests/test_well_formed.py::test_strict_parser[info513]",
      "tests/test_well_formed.py::test_strict_parser[info116]",
      "tests/test_well_formed.py::test_strict_parser[info1242]",
      "tests/test_well_formed.py::test_strict_parser[info1423]",
      "tests/test_well_formed.py::test_loose_parser[info979]",
      "tests/test_well_formed.py::test_strict_parser[info925]",
      "tests/test_well_formed.py::test_strict_parser[info554]",
      "tests/test_well_formed.py::test_strict_parser[info1339]",
      "tests/test_well_formed.py::test_loose_parser[info703]",
      "tests/test_well_formed.py::test_loose_parser[info731]",
      "tests/test_well_formed.py::test_strict_parser[info397]",
      "tests/test_well_formed.py::test_loose_parser[info1313]",
      "tests/test_well_formed.py::test_loose_parser[info258]",
      "tests/test_well_formed.py::test_loose_parser[info0]",
      "tests/test_well_formed.py::test_loose_parser[info1061]",
      "tests/test_well_formed.py::test_strict_parser[info1019]",
      "tests/test_well_formed.py::test_loose_parser[info1314]",
      "tests/test_well_formed.py::test_strict_parser[info19]",
      "tests/test_well_formed.py::test_http_conditions[info59]",
      "tests/test_well_formed.py::test_strict_parser[info612]",
      "tests/test_well_formed.py::test_strict_parser[info1143]",
      "tests/test_well_formed.py::test_strict_parser[info286]",
      "tests/test_well_formed.py::test_strict_parser[info1133]",
      "tests/test_well_formed.py::test_loose_parser[info963]",
      "tests/test_well_formed.py::test_strict_parser[info1300]",
      "tests/test_well_formed.py::test_loose_parser[info840]",
      "tests/test_well_formed.py::test_strict_parser[info268]",
      "tests/test_well_formed.py::test_loose_parser[info1449]",
      "tests/test_well_formed.py::test_loose_parser[info939]",
      "tests/test_well_formed.py::test_strict_parser[info1220]",
      "tests/test_well_formed.py::test_loose_parser[info1484]",
      "tests/test_well_formed.py::test_strict_parser[info1090]",
      "tests/test_well_formed.py::test_strict_parser[info1243]",
      "tests/test_well_formed.py::test_loose_parser[info1122]",
      "tests/test_well_formed.py::test_loose_parser[info1213]",
      "tests/test_well_formed.py::test_loose_parser[info1644]",
      "tests/test_well_formed.py::test_strict_parser[info1369]",
      "tests/test_well_formed.py::test_strict_parser[info462]",
      "tests/test_well_formed.py::test_strict_parser[info17]",
      "tests/test_well_formed.py::test_strict_parser[info389]",
      "tests/test_well_formed.py::test_loose_parser[info670]",
      "tests/test_well_formed.py::test_loose_parser[info1649]",
      "tests/test_well_formed.py::test_loose_parser[info1259]",
      "tests/test_well_formed.py::test_strict_parser[info1257]",
      "tests/test_well_formed.py::test_strict_parser[info1223]",
      "tests/test_well_formed.py::test_strict_parser[info879]",
      "tests/test_well_formed.py::test_loose_parser[info475]",
      "tests/test_well_formed.py::test_loose_parser[info827]",
      "tests/test_well_formed.py::test_strict_parser[info163]",
      "tests/test_well_formed.py::test_strict_parser[info115]",
      "tests/test_well_formed.py::test_loose_parser[info697]",
      "tests/test_well_formed.py::test_strict_parser[info1007]",
      "tests/test_well_formed.py::test_strict_parser[info1501]",
      "tests/test_well_formed.py::test_strict_parser[info97]",
      "tests/test_well_formed.py::test_loose_parser[info1641]",
      "tests/test_well_formed.py::test_loose_parser[info730]",
      "tests/test_well_formed.py::test_strict_parser[info1290]",
      "tests/test_well_formed.py::test_strict_parser[info218]",
      "tests/test_well_formed.py::test_strict_parser[info1598]",
      "tests/test_well_formed.py::test_loose_parser[info472]",
      "tests/test_well_formed.py::test_strict_parser[info969]",
      "tests/test_well_formed.py::test_loose_parser[info1279]",
      "tests/test_well_formed.py::test_loose_parser[info1155]",
      "tests/test_well_formed.py::test_loose_parser[info895]",
      "tests/test_well_formed.py::test_loose_parser[info1258]",
      "tests/test_well_formed.py::test_strict_parser[info98]",
      "tests/test_well_formed.py::test_loose_parser[info329]",
      "tests/test_well_formed.py::test_loose_parser[info1126]",
      "tests/test_well_formed.py::test_strict_parser[info1324]",
      "tests/test_well_formed.py::test_strict_parser[info1436]",
      "tests/test_well_formed.py::test_loose_parser[info608]",
      "tests/test_well_formed.py::test_strict_parser[info445]",
      "tests/test_well_formed.py::test_loose_parser[info4]",
      "tests/test_well_formed.py::test_loose_parser[info73]",
      "tests/test_well_formed.py::test_loose_parser[info1215]",
      "tests/test_well_formed.py::test_loose_parser[info325]",
      "tests/test_well_formed.py::test_loose_parser[info120]",
      "tests/test_well_formed.py::test_loose_parser[info1567]",
      "tests/test_well_formed.py::test_strict_parser[info272]",
      "tests/test_well_formed.py::test_strict_parser[info1152]",
      "tests/test_well_formed.py::test_strict_parser[info208]",
      "tests/test_well_formed.py::test_loose_parser[info1036]",
      "tests/test_well_formed.py::test_loose_parser[info162]",
      "tests/test_well_formed.py::test_http_conditions[info96]",
      "tests/test_well_formed.py::test_strict_parser[info555]",
      "tests/test_well_formed.py::test_strict_parser[info492]",
      "tests/test_well_formed.py::test_loose_parser[info635]",
      "tests/test_well_formed.py::test_loose_parser[info284]",
      "tests/test_well_formed.py::test_loose_parser[info1370]",
      "tests/test_well_formed.py::test_loose_parser[info70]",
      "tests/test_well_formed.py::test_strict_parser[info285]",
      "tests/test_well_formed.py::test_loose_parser[info965]",
      "tests/test_well_formed.py::test_strict_parser[info1153]",
      "tests/test_well_formed.py::test_strict_parser[info502]",
      "tests/test_well_formed.py::test_loose_parser[info763]",
      "tests/test_well_formed.py::test_strict_parser[info724]",
      "tests/test_well_formed.py::test_strict_parser[info1224]",
      "tests/test_well_formed.py::test_strict_parser[info1340]",
      "tests/test_well_formed.py::test_strict_parser[info674]",
      "tests/test_well_formed.py::test_strict_parser[info1402]",
      "tests/test_well_formed.py::test_loose_parser[info1267]",
      "tests/test_well_formed.py::test_loose_parser[info1495]",
      "tests/test_well_formed.py::test_strict_parser[info895]",
      "tests/test_well_formed.py::test_loose_parser[info96]",
      "tests/test_well_formed.py::test_strict_parser[info927]",
      "tests/test_well_formed.py::test_loose_parser[info1561]",
      "tests/test_well_formed.py::test_loose_parser[info718]",
      "tests/test_well_formed.py::test_strict_parser[info1434]",
      "tests/test_well_formed.py::test_loose_parser[info1054]",
      "tests/test_well_formed.py::test_loose_parser[info1161]",
      "tests/test_well_formed.py::test_strict_parser[info234]",
      "tests/test_well_formed.py::test_loose_parser[info1149]",
      "tests/test_well_formed.py::test_strict_parser[info416]",
      "tests/test_well_formed.py::test_strict_parser[info1573]",
      "tests/test_well_formed.py::test_strict_parser[info575]",
      "tests/test_well_formed.py::test_strict_parser[info457]",
      "tests/test_well_formed.py::test_loose_parser[info1325]",
      "tests/test_well_formed.py::test_strict_parser[info4]",
      "tests/test_well_formed.py::test_loose_parser[info1045]",
      "tests/test_well_formed.py::test_loose_parser[info606]",
      "tests/test_well_formed.py::test_strict_parser[info72]",
      "tests/test_well_formed.py::test_strict_parser[info1357]",
      "tests/test_well_formed.py::test_strict_parser[info764]",
      "tests/test_well_formed.py::test_loose_parser[info128]",
      "tests/test_well_formed.py::test_strict_parser[info1085]",
      "tests/test_well_formed.py::test_strict_parser[info1306]",
      "tests/test_well_formed.py::test_strict_parser[info1125]",
      "tests/test_well_formed.py::test_strict_parser[info1495]",
      "tests/test_well_formed.py::test_strict_parser[info1537]",
      "tests/test_well_formed.py::test_strict_parser[info672]",
      "tests/test_well_formed.py::test_loose_parser[info1164]",
      "tests/test_well_formed.py::test_strict_parser[info761]",
      "tests/test_well_formed.py::test_loose_parser[info265]",
      "tests/test_well_formed.py::test_loose_parser[info782]",
      "tests/test_well_formed.py::test_strict_parser[info1173]",
      "tests/test_well_formed.py::test_strict_parser[info436]",
      "tests/test_well_formed.py::test_loose_parser[info440]",
      "tests/test_well_formed.py::test_loose_parser[info1642]",
      "tests/test_well_formed.py::test_loose_parser[info876]",
      "tests/test_well_formed.py::test_strict_parser[info967]",
      "tests/test_well_formed.py::test_loose_parser[info415]",
      "tests/test_well_formed.py::test_strict_parser[info291]",
      "tests/test_well_formed.py::test_loose_parser[info807]",
      "tests/test_well_formed.py::test_strict_parser[info107]",
      "tests/test_well_formed.py::test_strict_parser[info1491]",
      "tests/test_well_formed.py::test_loose_parser[info245]",
      "tests/test_well_formed.py::test_loose_parser[info37]",
      "tests/test_well_formed.py::test_strict_parser[info266]",
      "tests/test_well_formed.py::test_strict_parser[info1387]",
      "tests/test_well_formed.py::test_loose_parser[info414]",
      "tests/test_well_formed.py::test_loose_parser[info803]",
      "tests/test_well_formed.py::test_strict_parser[info953]",
      "tests/test_well_formed.py::test_strict_parser[info1149]",
      "tests/test_well_formed.py::test_strict_parser[info26]",
      "tests/test_well_formed.py::test_loose_parser[info914]",
      "tests/test_well_formed.py::test_loose_parser[info1384]",
      "tests/test_well_formed.py::test_loose_parser[info293]",
      "tests/test_well_formed.py::test_strict_parser[info193]",
      "tests/test_well_formed.py::test_loose_parser[info314]",
      "tests/test_well_formed.py::test_strict_parser[info29]",
      "tests/test_well_formed.py::test_loose_parser[info436]",
      "tests/test_well_formed.py::test_strict_parser[info346]",
      "tests/test_well_formed.py::test_strict_parser[info1566]",
      "tests/test_well_formed.py::test_loose_parser[info1339]",
      "tests/test_well_formed.py::test_loose_parser[info882]",
      "tests/test_well_formed.py::test_strict_parser[info939]",
      "tests/test_well_formed.py::test_strict_parser[info250]",
      "tests/test_well_formed.py::test_strict_parser[info909]",
      "tests/test_well_formed.py::test_loose_parser[info536]",
      "tests/test_well_formed.py::test_loose_parser[info1426]",
      "tests/test_well_formed.py::test_loose_parser[info1389]",
      "tests/test_well_formed.py::test_loose_parser[info1640]",
      "tests/test_well_formed.py::test_loose_parser[info870]",
      "tests/test_well_formed.py::test_loose_parser[info750]",
      "tests/test_well_formed.py::test_strict_parser[info883]",
      "tests/test_well_formed.py::test_loose_parser[info1060]",
      "tests/test_well_formed.py::test_loose_parser[info1500]",
      "tests/test_well_formed.py::test_loose_parser[info107]",
      "tests/test_well_formed.py::test_strict_parser[info934]",
      "tests/test_well_formed.py::test_loose_parser[info1505]",
      "tests/test_well_formed.py::test_strict_parser[info900]",
      "tests/test_well_formed.py::test_loose_parser[info362]",
      "tests/test_well_formed.py::test_loose_parser[info885]",
      "tests/test_well_formed.py::test_loose_parser[info894]",
      "tests/test_well_formed.py::test_loose_parser[info1494]",
      "tests/test_well_formed.py::test_strict_parser[info1059]",
      "tests/test_well_formed.py::test_loose_parser[info171]",
      "tests/test_well_formed.py::test_strict_parser[info557]",
      "tests/test_well_formed.py::test_strict_parser[info1606]",
      "tests/test_well_formed.py::test_loose_parser[info448]",
      "tests/test_well_formed.py::test_strict_parser[info152]",
      "tests/test_well_formed.py::test_strict_parser[info106]",
      "tests/test_well_formed.py::test_strict_parser[info980]",
      "tests/test_well_formed.py::test_loose_parser[info1372]",
      "tests/test_well_formed.py::test_loose_parser[info1349]",
      "tests/test_well_formed.py::test_loose_parser[info164]",
      "tests/test_well_formed.py::test_loose_parser[info1159]",
      "tests/test_well_formed.py::test_strict_parser[info1261]",
      "tests/test_well_formed.py::test_loose_parser[info1509]",
      "tests/test_well_formed.py::test_strict_parser[info944]",
      "tests/test_well_formed.py::test_loose_parser[info1403]",
      "tests/test_well_formed.py::test_loose_parser[info211]",
      "tests/test_well_formed.py::test_strict_parser[info1054]",
      "tests/test_well_formed.py::test_strict_parser[info1506]",
      "tests/test_well_formed.py::test_loose_parser[info1608]",
      "tests/test_well_formed.py::test_strict_parser[info1610]",
      "tests/test_well_formed.py::test_strict_parser[info135]",
      "tests/test_well_formed.py::test_strict_parser[info113]",
      "tests/test_well_formed.py::test_strict_parser[info1018]",
      "tests/test_well_formed.py::test_loose_parser[info1343]",
      "tests/test_well_formed.py::test_strict_parser[info1433]",
      "tests/test_well_formed.py::test_loose_parser[info659]",
      "tests/test_well_formed.py::test_strict_parser[info859]",
      "tests/test_well_formed.py::test_loose_parser[info321]",
      "tests/test_well_formed.py::test_loose_parser[info841]",
      "tests/test_well_formed.py::test_http_conditions[info69]",
      "tests/test_well_formed.py::test_strict_parser[info599]",
      "tests/test_well_formed.py::test_loose_parser[info673]",
      "tests/test_well_formed.py::test_loose_parser[info1322]",
      "tests/test_well_formed.py::test_strict_parser[info771]",
      "tests/test_well_formed.py::test_loose_parser[info106]",
      "tests/test_well_formed.py::test_loose_parser[info405]",
      "tests/test_well_formed.py::test_strict_parser[info1112]",
      "tests/test_well_formed.py::test_loose_parser[info906]",
      "tests/test_well_formed.py::test_loose_parser[info319]",
      "tests/test_well_formed.py::test_http_conditions[info43]",
      "tests/test_well_formed.py::test_strict_parser[info349]",
      "tests/test_well_formed.py::test_strict_parser[info1310]",
      "tests/test_well_formed.py::test_strict_parser[info8]",
      "tests/test_well_formed.py::test_loose_parser[info209]",
      "tests/test_well_formed.py::test_loose_parser[info817]",
      "tests/test_well_formed.py::test_strict_parser[info1254]",
      "tests/test_well_formed.py::test_strict_parser[info407]",
      "tests/test_well_formed.py::test_strict_parser[info1034]",
      "tests/test_well_formed.py::test_strict_parser[info1487]",
      "tests/test_well_formed.py::test_strict_parser[info226]",
      "tests/test_well_formed.py::test_strict_parser[info1056]",
      "tests/test_well_formed.py::test_loose_parser[info1268]",
      "tests/test_well_formed.py::test_strict_parser[info705]",
      "tests/test_well_formed.py::test_loose_parser[info733]",
      "tests/test_well_formed.py::test_loose_parser[info389]",
      "tests/test_well_formed.py::test_strict_parser[info96]",
      "tests/test_well_formed.py::test_loose_parser[info777]",
      "tests/test_well_formed.py::test_loose_parser[info501]",
      "tests/test_well_formed.py::test_strict_parser[info863]",
      "tests/test_well_formed.py::test_strict_parser[info1105]",
      "tests/test_well_formed.py::test_strict_parser[info270]",
      "tests/test_well_formed.py::test_strict_parser[info1052]",
      "tests/test_well_formed.py::test_loose_parser[info1243]",
      "tests/test_well_formed.py::test_strict_parser[info464]",
      "tests/test_well_formed.py::test_strict_parser[info217]",
      "tests/test_well_formed.py::test_loose_parser[info386]",
      "tests/test_well_formed.py::test_strict_parser[info960]",
      "tests/test_well_formed.py::test_strict_parser[info1247]",
      "tests/test_well_formed.py::test_strict_parser[info1024]",
      "tests/test_well_formed.py::test_loose_parser[info369]",
      "tests/test_well_formed.py::test_loose_parser[info1388]",
      "tests/test_well_formed.py::test_strict_parser[info320]",
      "tests/test_well_formed.py::test_strict_parser[info1647]",
      "tests/test_well_formed.py::test_loose_parser[info45]",
      "tests/test_well_formed.py::test_loose_parser[info237]",
      "tests/test_well_formed.py::test_strict_parser[info1531]",
      "tests/test_well_formed.py::test_strict_parser[info899]",
      "tests/test_well_formed.py::test_loose_parser[info53]",
      "tests/test_well_formed.py::test_strict_parser[info1544]",
      "tests/test_well_formed.py::test_loose_parser[info1565]",
      "tests/test_well_formed.py::test_loose_parser[info1070]",
      "tests/test_well_formed.py::test_loose_parser[info997]",
      "tests/test_well_formed.py::test_http_conditions[info19]",
      "tests/test_well_formed.py::test_strict_parser[info1425]",
      "tests/test_well_formed.py::test_strict_parser[info1393]",
      "tests/test_well_formed.py::test_loose_parser[info1392]",
      "tests/test_well_formed.py::test_loose_parser[info183]",
      "tests/test_well_formed.py::test_loose_parser[info787]",
      "tests/test_well_formed.py::test_http_conditions[info47]",
      "tests/test_well_formed.py::test_loose_parser[info699]",
      "tests/test_well_formed.py::test_strict_parser[info654]",
      "tests/test_well_formed.py::test_http_conditions[info24]",
      "tests/test_well_formed.py::test_loose_parser[info118]",
      "tests/test_well_formed.py::test_strict_parser[info603]",
      "tests/test_well_formed.py::test_strict_parser[info1422]",
      "tests/test_well_formed.py::test_strict_parser[info1291]",
      "tests/test_well_formed.py::test_strict_parser[info919]",
      "tests/test_well_formed.py::test_strict_parser[info1285]",
      "tests/test_well_formed.py::test_strict_parser[info660]",
      "tests/test_well_formed.py::test_loose_parser[info219]",
      "tests/test_well_formed.py::test_loose_parser[info678]",
      "tests/test_well_formed.py::test_strict_parser[info1303]",
      "tests/test_well_formed.py::test_strict_parser[info473]",
      "tests/test_well_formed.py::test_loose_parser[info466]",
      "tests/test_well_formed.py::test_strict_parser[info1233]",
      "tests/test_well_formed.py::test_loose_parser[info603]",
      "tests/test_well_formed.py::test_loose_parser[info223]",
      "tests/test_well_formed.py::test_loose_parser[info1199]",
      "tests/test_well_formed.py::test_loose_parser[info1611]",
      "tests/test_well_formed.py::test_strict_parser[info755]",
      "tests/test_well_formed.py::test_loose_parser[info687]",
      "tests/test_well_formed.py::test_strict_parser[info151]",
      "tests/test_well_formed.py::test_loose_parser[info458]",
      "tests/test_well_formed.py::test_loose_parser[info1537]",
      "tests/test_well_formed.py::test_strict_parser[info1486]",
      "tests/test_well_formed.py::test_strict_parser[info1305]",
      "tests/test_well_formed.py::test_strict_parser[info977]",
      "tests/test_well_formed.py::test_strict_parser[info1181]",
      "tests/test_well_formed.py::test_loose_parser[info1502]",
      "tests/test_well_formed.py::test_loose_parser[info760]",
      "tests/test_well_formed.py::test_strict_parser[info147]",
      "tests/test_well_formed.py::test_strict_parser[info7]",
      "tests/test_well_formed.py::test_loose_parser[info1525]",
      "tests/test_well_formed.py::test_loose_parser[info1327]",
      "tests/test_well_formed.py::test_strict_parser[info1260]",
      "tests/test_well_formed.py::test_strict_parser[info1407]",
      "tests/test_well_formed.py::test_strict_parser[info1499]",
      "tests/test_well_formed.py::test_loose_parser[info224]",
      "tests/test_well_formed.py::test_strict_parser[info215]",
      "tests/test_well_formed.py::test_strict_parser[info342]",
      "tests/test_well_formed.py::test_loose_parser[info297]",
      "tests/test_well_formed.py::test_loose_parser[info1383]",
      "tests/test_well_formed.py::test_strict_parser[info1532]",
      "tests/test_well_formed.py::test_loose_parser[info363]",
      "tests/test_well_formed.py::test_strict_parser[info602]",
      "tests/test_well_formed.py::test_loose_parser[info846]",
      "tests/test_well_formed.py::test_strict_parser[info256]",
      "tests/test_well_formed.py::test_strict_parser[info142]",
      "tests/test_well_formed.py::test_strict_parser[info1628]",
      "tests/test_well_formed.py::test_strict_parser[info1469]",
      "tests/test_well_formed.py::test_loose_parser[info1393]",
      "tests/test_well_formed.py::test_loose_parser[info953]",
      "tests/test_well_formed.py::test_strict_parser[info1292]",
      "tests/test_well_formed.py::test_strict_parser[info243]",
      "tests/test_well_formed.py::test_strict_parser[info140]",
      "tests/test_well_formed.py::test_strict_parser[info1215]",
      "tests/test_well_formed.py::test_loose_parser[info1470]",
      "tests/test_well_formed.py::test_loose_parser[info403]",
      "tests/test_well_formed.py::test_strict_parser[info175]",
      "tests/test_well_formed.py::test_strict_parser[info830]",
      "tests/test_well_formed.py::test_loose_parser[info1503]",
      "tests/test_well_formed.py::test_strict_parser[info545]",
      "tests/test_well_formed.py::test_strict_parser[info1406]",
      "tests/test_well_formed.py::test_loose_parser[info845]",
      "tests/test_well_formed.py::test_strict_parser[info1183]",
      "tests/test_well_formed.py::test_strict_parser[info1246]",
      "tests/test_well_formed.py::test_strict_parser[info587]",
      "tests/test_well_formed.py::test_strict_parser[info1140]",
      "tests/test_well_formed.py::test_strict_parser[info262]",
      "tests/test_well_formed.py::test_loose_parser[info1573]",
      "tests/test_well_formed.py::test_strict_parser[info745]",
      "tests/test_well_formed.py::test_http_conditions[info46]",
      "tests/test_well_formed.py::test_http_conditions[info64]",
      "tests/test_well_formed.py::test_strict_parser[info198]",
      "tests/test_well_formed.py::test_strict_parser[info721]",
      "tests/test_well_formed.py::test_strict_parser[info992]",
      "tests/test_well_formed.py::test_strict_parser[info14]",
      "tests/test_well_formed.py::test_strict_parser[info1553]",
      "tests/test_well_formed.py::test_strict_parser[info49]",
      "tests/test_well_formed.py::test_strict_parser[info534]",
      "tests/test_well_formed.py::test_loose_parser[info1076]",
      "tests/test_well_formed.py::test_strict_parser[info744]",
      "tests/test_well_formed.py::test_strict_parser[info382]",
      "tests/test_well_formed.py::test_strict_parser[info1295]",
      "tests/test_well_formed.py::test_loose_parser[info1326]",
      "tests/test_well_formed.py::test_strict_parser[info23]",
      "tests/test_well_formed.py::test_loose_parser[info816]",
      "tests/test_well_formed.py::test_loose_parser[info1124]",
      "tests/test_well_formed.py::test_strict_parser[info278]",
      "tests/test_well_formed.py::test_strict_parser[info335]",
      "tests/test_well_formed.py::test_loose_parser[info300]",
      "tests/test_well_formed.py::test_strict_parser[info1379]",
      "tests/test_well_formed.py::test_loose_parser[info1400]",
      "tests/test_well_formed.py::test_loose_parser[info1648]",
      "tests/test_well_formed.py::test_loose_parser[info38]",
      "tests/test_well_formed.py::test_loose_parser[info613]",
      "tests/test_well_formed.py::test_strict_parser[info176]",
      "tests/test_well_formed.py::test_loose_parser[info280]",
      "tests/test_well_formed.py::test_loose_parser[info154]",
      "tests/test_well_formed.py::test_strict_parser[info1194]",
      "tests/test_well_formed.py::test_loose_parser[info1295]",
      "tests/test_well_formed.py::test_loose_parser[info71]",
      "tests/test_well_formed.py::test_loose_parser[info282]",
      "tests/test_well_formed.py::test_strict_parser[info1371]",
      "tests/test_well_formed.py::test_strict_parser[info983]",
      "tests/test_well_formed.py::test_loose_parser[info517]",
      "tests/test_well_formed.py::test_strict_parser[info317]",
      "tests/test_well_formed.py::test_loose_parser[info640]",
      "tests/test_well_formed.py::test_loose_parser[info486]",
      "tests/test_well_formed.py::test_strict_parser[info323]",
      "tests/test_well_formed.py::test_http_conditions[info15]",
      "tests/test_well_formed.py::test_strict_parser[info293]",
      "tests/test_well_formed.py::test_strict_parser[info1315]",
      "tests/test_well_formed.py::test_loose_parser[info600]",
      "tests/test_well_formed.py::test_loose_parser[info537]",
      "tests/test_well_formed.py::test_loose_parser[info921]",
      "tests/test_well_formed.py::test_strict_parser[info1642]",
      "tests/test_well_formed.py::test_strict_parser[info75]",
      "tests/test_well_formed.py::test_strict_parser[info1280]",
      "tests/test_well_formed.py::test_loose_parser[info1340]",
      "tests/test_well_formed.py::test_loose_parser[info1487]",
      "tests/test_well_formed.py::test_loose_parser[info233]",
      "tests/test_well_formed.py::test_strict_parser[info974]",
      "tests/test_well_formed.py::test_strict_parser[info1592]",
      "tests/test_well_formed.py::test_strict_parser[info589]",
      "tests/test_well_formed.py::test_loose_parser[info601]",
      "tests/test_well_formed.py::test_strict_parser[info1278]",
      "tests/test_well_formed.py::test_loose_parser[info332]",
      "tests/test_well_formed.py::test_loose_parser[info490]",
      "tests/test_well_formed.py::test_strict_parser[info525]",
      "tests/test_well_formed.py::test_loose_parser[info683]",
      "tests/test_well_formed.py::test_loose_parser[info992]",
      "tests/test_well_formed.py::test_strict_parser[info24]",
      "tests/test_well_formed.py::test_loose_parser[info799]",
      "tests/test_well_formed.py::test_loose_parser[info1098]",
      "tests/test_well_formed.py::test_strict_parser[info206]",
      "tests/test_well_formed.py::test_strict_parser[info818]",
      "tests/test_well_formed.py::test_loose_parser[info1345]",
      "tests/test_well_formed.py::test_loose_parser[info222]",
      "tests/test_well_formed.py::test_strict_parser[info965]",
      "tests/test_well_formed.py::test_loose_parser[info1623]",
      "tests/test_well_formed.py::test_strict_parser[info288]",
      "tests/test_well_formed.py::test_strict_parser[info1426]",
      "tests/test_well_formed.py::test_loose_parser[info1096]",
      "tests/test_well_formed.py::test_strict_parser[info910]",
      "tests/test_well_formed.py::test_loose_parser[info242]",
      "tests/test_well_formed.py::test_loose_parser[info644]",
      "tests/test_well_formed.py::test_loose_parser[info1169]",
      "tests/test_well_formed.py::test_loose_parser[info140]",
      "tests/test_well_formed.py::test_strict_parser[info847]",
      "tests/test_well_formed.py::test_strict_parser[info800]",
      "tests/test_well_formed.py::test_strict_parser[info1409]",
      "tests/test_well_formed.py::test_loose_parser[info1034]",
      "tests/test_well_formed.py::test_loose_parser[info768]",
      "tests/test_well_formed.py::test_strict_parser[info1162]",
      "tests/test_well_formed.py::test_strict_parser[info614]",
      "tests/test_well_formed.py::test_loose_parser[info900]",
      "tests/test_well_formed.py::test_strict_parser[info628]",
      "tests/test_well_formed.py::test_loose_parser[info533]",
      "tests/test_well_formed.py::test_strict_parser[info1526]",
      "tests/test_well_formed.py::test_loose_parser[info1195]",
      "tests/test_well_formed.py::test_loose_parser[info212]",
      "tests/test_well_formed.py::test_http_conditions[info40]",
      "tests/test_well_formed.py::test_loose_parser[info1395]",
      "tests/test_well_formed.py::test_loose_parser[info1386]",
      "tests/test_well_formed.py::test_loose_parser[info1635]",
      "tests/test_well_formed.py::test_loose_parser[info1624]",
      "tests/test_well_formed.py::test_strict_parser[info47]",
      "tests/test_well_formed.py::test_strict_parser[info720]",
      "tests/test_well_formed.py::test_loose_parser[info651]",
      "tests/test_well_formed.py::test_loose_parser[info1046]",
      "tests/test_well_formed.py::test_loose_parser[info407]",
      "tests/test_well_formed.py::test_loose_parser[info315]",
      "tests/test_well_formed.py::test_loose_parser[info823]",
      "tests/test_well_formed.py::test_strict_parser[info1643]",
      "tests/test_well_formed.py::test_strict_parser[info680]",
      "tests/test_well_formed.py::test_loose_parser[info357]",
      "tests/test_well_formed.py::test_strict_parser[info774]",
      "tests/test_well_formed.py::test_strict_parser[info639]",
      "tests/test_well_formed.py::test_loose_parser[info1217]",
      "tests/test_well_formed.py::test_loose_parser[info495]",
      "tests/test_well_formed.py::test_loose_parser[info507]",
      "tests/test_well_formed.py::test_loose_parser[info744]",
      "tests/test_well_formed.py::test_strict_parser[info658]",
      "tests/test_well_formed.py::test_loose_parser[info1000]",
      "tests/test_well_formed.py::test_strict_parser[info446]",
      "tests/test_well_formed.py::test_loose_parser[info650]",
      "tests/test_well_formed.py::test_strict_parser[info93]",
      "tests/test_well_formed.py::test_strict_parser[info173]",
      "tests/test_well_formed.py::test_loose_parser[info967]",
      "tests/test_well_formed.py::test_loose_parser[info394]",
      "tests/test_well_formed.py::test_loose_parser[info1002]",
      "tests/test_well_formed.py::test_loose_parser[info972]",
      "tests/test_well_formed.py::test_loose_parser[info1468]",
      "tests/test_well_formed.py::test_loose_parser[info528]",
      "tests/test_well_formed.py::test_loose_parser[info497]",
      "tests/test_well_formed.py::test_strict_parser[info797]",
      "tests/test_well_formed.py::test_loose_parser[info246]",
      "tests/test_well_formed.py::test_strict_parser[info676]",
      "tests/test_well_formed.py::test_loose_parser[info889]",
      "tests/test_well_formed.py::test_strict_parser[info44]",
      "tests/test_well_formed.py::test_loose_parser[info77]",
      "tests/test_well_formed.py::test_loose_parser[info444]",
      "tests/test_well_formed.py::test_strict_parser[info754]",
      "tests/test_well_formed.py::test_strict_parser[info326]",
      "tests/test_well_formed.py::test_strict_parser[info741]",
      "tests/test_well_formed.py::test_http_conditions[info37]",
      "tests/test_well_formed.py::test_loose_parser[info272]",
      "tests/test_well_formed.py::test_http_conditions[info65]",
      "tests/test_well_formed.py::test_strict_parser[info1022]",
      "tests/test_well_formed.py::test_strict_parser[info779]",
      "tests/test_well_formed.py::test_loose_parser[info1317]",
      "tests/test_well_formed.py::test_loose_parser[info688]",
      "tests/test_well_formed.py::test_strict_parser[info328]",
      "tests/test_well_formed.py::test_loose_parser[info850]",
      "tests/test_well_formed.py::test_strict_parser[info1101]",
      "tests/test_well_formed.py::test_strict_parser[info1130]",
      "tests/test_well_formed.py::test_loose_parser[info1272]",
      "tests/test_well_formed.py::test_loose_parser[info1585]",
      "tests/test_well_formed.py::test_loose_parser[info318]",
      "tests/test_well_formed.py::test_loose_parser[info514]",
      "tests/test_well_formed.py::test_strict_parser[info824]",
      "tests/test_well_formed.py::test_loose_parser[info1380]",
      "tests/test_well_formed.py::test_loose_parser[info1437]",
      "tests/test_well_formed.py::test_strict_parser[info523]",
      "tests/test_well_formed.py::test_strict_parser[info938]",
      "tests/test_well_formed.py::test_strict_parser[info679]",
      "tests/test_well_formed.py::test_strict_parser[info158]",
      "tests/test_well_formed.py::test_loose_parser[info1440]",
      "tests/test_well_formed.py::test_strict_parser[info1497]",
      "tests/test_well_formed.py::test_loose_parser[info1011]",
      "tests/test_well_formed.py::test_strict_parser[info359]",
      "tests/test_well_formed.py::test_strict_parser[info948]",
      "tests/test_well_formed.py::test_strict_parser[info1275]",
      "tests/test_well_formed.py::test_strict_parser[info1212]",
      "tests/test_well_formed.py::test_loose_parser[info469]",
      "tests/test_well_formed.py::test_strict_parser[info610]",
      "tests/test_well_formed.py::test_loose_parser[info899]",
      "tests/test_well_formed.py::test_loose_parser[info1616]",
      "tests/test_well_formed.py::test_loose_parser[info1073]",
      "tests/test_well_formed.py::test_strict_parser[info222]",
      "tests/test_well_formed.py::test_loose_parser[info1425]",
      "tests/test_well_formed.py::test_strict_parser[info353]",
      "tests/test_well_formed.py::test_loose_parser[info1237]",
      "tests/test_well_formed.py::test_loose_parser[info404]",
      "tests/test_well_formed.py::test_strict_parser[info1142]",
      "tests/test_well_formed.py::test_strict_parser[info231]",
      "tests/test_well_formed.py::test_strict_parser[info1442]",
      "tests/test_well_formed.py::test_strict_parser[info1479]",
      "tests/test_well_formed.py::test_loose_parser[info364]",
      "tests/test_well_formed.py::test_strict_parser[info749]",
      "tests/test_well_formed.py::test_loose_parser[info637]",
      "tests/test_well_formed.py::test_loose_parser[info1016]",
      "tests/test_well_formed.py::test_loose_parser[info648]",
      "tests/test_well_formed.py::test_strict_parser[info32]",
      "tests/test_well_formed.py::test_loose_parser[info1042]",
      "tests/test_well_formed.py::test_loose_parser[info1214]",
      "tests/test_well_formed.py::test_strict_parser[info1354]",
      "tests/test_well_formed.py::test_strict_parser[info1271]",
      "tests/test_well_formed.py::test_loose_parser[info1144]",
      "tests/test_well_formed.py::test_strict_parser[info549]",
      "tests/test_well_formed.py::test_strict_parser[info1284]",
      "tests/test_well_formed.py::test_loose_parser[info561]",
      "tests/test_well_formed.py::test_strict_parser[info221]",
      "tests/test_well_formed.py::test_loose_parser[info631]",
      "tests/test_well_formed.py::test_loose_parser[info1180]",
      "tests/test_well_formed.py::test_loose_parser[info576]",
      "tests/test_well_formed.py::test_loose_parser[info167]",
      "tests/test_well_formed.py::test_strict_parser[info986]",
      "tests/test_well_formed.py::test_strict_parser[info1268]",
      "tests/test_well_formed.py::test_loose_parser[info333]",
      "tests/test_well_formed.py::test_loose_parser[info1186]",
      "tests/test_well_formed.py::test_strict_parser[info653]",
      "tests/test_well_formed.py::test_loose_parser[info1530]",
      "tests/test_well_formed.py::test_loose_parser[info43]",
      "tests/test_well_formed.py::test_strict_parser[info259]",
      "tests/test_well_formed.py::test_loose_parser[info1274]",
      "tests/test_well_formed.py::test_strict_parser[info1397]",
      "tests/test_well_formed.py::test_strict_parser[info1289]",
      "tests/test_well_formed.py::test_strict_parser[info363]",
      "tests/test_well_formed.py::test_loose_parser[info1205]",
      "tests/test_well_formed.py::test_loose_parser[info616]",
      "tests/test_well_formed.py::test_loose_parser[info838]",
      "tests/test_well_formed.py::test_strict_parser[info1168]",
      "tests/test_well_formed.py::test_loose_parser[info1187]",
      "tests/test_well_formed.py::test_strict_parser[info795]",
      "tests/test_well_formed.py::test_strict_parser[info1180]",
      "tests/test_well_formed.py::test_loose_parser[info186]",
      "tests/test_well_formed.py::test_loose_parser[info1381]",
      "tests/test_well_formed.py::test_loose_parser[info165]",
      "tests/test_well_formed.py::test_loose_parser[info551]",
      "tests/test_well_formed.py::test_strict_parser[info1490]",
      "tests/test_well_formed.py::test_strict_parser[info183]",
      "tests/test_well_formed.py::test_loose_parser[info95]",
      "tests/test_well_formed.py::test_strict_parser[info996]",
      "tests/test_well_formed.py::test_loose_parser[info1110]",
      "tests/test_well_formed.py::test_loose_parser[info590]",
      "tests/test_well_formed.py::test_loose_parser[info667]",
      "tests/test_well_formed.py::test_loose_parser[info82]",
      "tests/test_well_formed.py::test_loose_parser[info1513]",
      "tests/test_well_formed.py::test_loose_parser[info100]",
      "tests/test_well_formed.py::test_strict_parser[info1622]",
      "tests/test_well_formed.py::test_strict_parser[info438]",
      "tests/test_well_formed.py::test_strict_parser[info1507]",
      "tests/test_well_formed.py::test_strict_parser[info1307]",
      "tests/test_well_formed.py::test_strict_parser[info1415]",
      "tests/test_well_formed.py::test_loose_parser[info295]",
      "tests/test_well_formed.py::test_loose_parser[info1053]",
      "tests/test_well_formed.py::test_strict_parser[info5]",
      "tests/test_well_formed.py::test_loose_parser[info839]",
      "tests/test_well_formed.py::test_loose_parser[info1399]",
      "tests/test_well_formed.py::test_strict_parser[info583]",
      "tests/test_well_formed.py::test_strict_parser[info1365]",
      "tests/test_well_formed.py::test_strict_parser[info780]",
      "tests/test_well_formed.py::test_strict_parser[info1002]",
      "tests/test_well_formed.py::test_strict_parser[info484]",
      "tests/test_well_formed.py::test_strict_parser[info708]",
      "tests/test_well_formed.py::test_loose_parser[info1246]",
      "tests/test_well_formed.py::test_loose_parser[info1067]",
      "tests/test_well_formed.py::test_strict_parser[info556]",
      "tests/test_well_formed.py::test_loose_parser[info485]",
      "tests/test_well_formed.py::test_loose_parser[info734]",
      "tests/test_well_formed.py::test_loose_parser[info1271]",
      "tests/test_well_formed.py::test_http_conditions[info42]",
      "tests/test_well_formed.py::test_loose_parser[info1334]",
      "tests/test_well_formed.py::test_loose_parser[info1631]",
      "tests/test_well_formed.py::test_strict_parser[info248]",
      "tests/test_well_formed.py::test_strict_parser[info1388]",
      "tests/test_well_formed.py::test_loose_parser[info1189]",
      "tests/test_well_formed.py::test_strict_parser[info1171]",
      "tests/test_well_formed.py::test_strict_parser[info257]",
      "tests/test_well_formed.py::test_strict_parser[info528]",
      "tests/test_well_formed.py::test_loose_parser[info524]",
      "tests/test_well_formed.py::test_http_conditions[info76]",
      "tests/test_well_formed.py::test_loose_parser[info1112]",
      "tests/test_well_formed.py::test_loose_parser[info175]",
      "tests/test_well_formed.py::test_loose_parser[info1605]",
      "tests/test_well_formed.py::test_loose_parser[info178]",
      "tests/test_well_formed.py::test_loose_parser[info391]",
      "tests/test_well_formed.py::test_strict_parser[info701]",
      "tests/test_well_formed.py::test_strict_parser[info1003]",
      "tests/test_well_formed.py::test_strict_parser[info338]",
      "tests/test_well_formed.py::test_loose_parser[info945]",
      "tests/test_well_formed.py::test_loose_parser[info1423]",
      "tests/test_well_formed.py::test_strict_parser[info1456]",
      "tests/test_well_formed.py::test_strict_parser[info1496]",
      "tests/test_well_formed.py::test_loose_parser[info1133]",
      "tests/test_well_formed.py::test_http_conditions[info91]",
      "tests/test_well_formed.py::test_strict_parser[info479]",
      "tests/test_well_formed.py::test_strict_parser[info1392]",
      "tests/test_well_formed.py::test_strict_parser[info188]",
      "tests/test_well_formed.py::test_strict_parser[info982]",
      "tests/test_well_formed.py::test_loose_parser[info134]",
      "tests/test_well_formed.py::test_loose_parser[info1167]",
      "tests/test_well_formed.py::test_strict_parser[info1374]",
      "tests/test_well_formed.py::test_loose_parser[info1150]",
      "tests/test_well_formed.py::test_strict_parser[info1110]",
      "tests/test_well_formed.py::test_strict_parser[info1478]",
      "tests/test_well_formed.py::test_strict_parser[info56]",
      "tests/test_well_formed.py::test_loose_parser[info583]",
      "tests/test_well_formed.py::test_loose_parser[info1020]",
      "tests/test_well_formed.py::test_http_conditions[info66]",
      "tests/test_well_formed.py::test_strict_parser[info1095]",
      "tests/test_well_formed.py::test_strict_parser[info1488]",
      "tests/test_well_formed.py::test_strict_parser[info1349]",
      "tests/test_well_formed.py::test_loose_parser[info546]",
      "tests/test_well_formed.py::test_loose_parser[info1456]",
      "tests/test_well_formed.py::test_loose_parser[info1609]",
      "tests/test_well_formed.py::test_loose_parser[info61]",
      "tests/test_well_formed.py::test_strict_parser[info1314]",
      "tests/test_well_formed.py::test_loose_parser[info961]",
      "tests/test_well_formed.py::test_loose_parser[info1183]",
      "tests/test_well_formed.py::test_strict_parser[info964]",
      "tests/test_well_formed.py::test_loose_parser[info1539]",
      "tests/test_well_formed.py::test_loose_parser[info23]",
      "tests/test_well_formed.py::test_strict_parser[info1075]",
      "tests/test_well_formed.py::test_strict_parser[info539]",
      "tests/test_well_formed.py::test_strict_parser[info1445]",
      "tests/test_well_formed.py::test_strict_parser[info1418]",
      "tests/test_well_formed.py::test_strict_parser[info851]",
      "tests/test_well_formed.py::test_strict_parser[info1106]",
      "tests/test_well_formed.py::test_loose_parser[info310]",
      "tests/test_well_formed.py::test_loose_parser[info172]",
      "tests/test_well_formed.py::test_strict_parser[info875]",
      "tests/test_well_formed.py::test_loose_parser[info1419]",
      "tests/test_well_formed.py::test_loose_parser[info587]",
      "tests/test_well_formed.py::test_loose_parser[info340]",
      "tests/test_well_formed.py::test_loose_parser[info150]",
      "tests/test_well_formed.py::test_loose_parser[info797]",
      "tests/test_well_formed.py::test_loose_parser[info745]",
      "tests/test_well_formed.py::test_loose_parser[info155]",
      "tests/test_well_formed.py::test_loose_parser[info1083]",
      "tests/test_well_formed.py::test_loose_parser[info1553]",
      "tests/test_well_formed.py::test_strict_parser[info729]",
      "tests/test_well_formed.py::test_loose_parser[info330]",
      "tests/test_well_formed.py::test_strict_parser[info579]",
      "tests/test_well_formed.py::test_loose_parser[info477]",
      "tests/test_well_formed.py::test_loose_parser[info462]",
      "tests/test_well_formed.py::test_loose_parser[info946]",
      "tests/test_well_formed.py::test_loose_parser[info810]",
      "tests/test_well_formed.py::test_strict_parser[info58]",
      "tests/test_well_formed.py::test_strict_parser[info1064]",
      "tests/test_well_formed.py::test_loose_parser[info1209]",
      "tests/test_well_formed.py::test_strict_parser[info76]",
      "tests/test_well_formed.py::test_loose_parser[info1031]",
      "tests/test_well_formed.py::test_loose_parser[info147]",
      "tests/test_well_formed.py::test_strict_parser[info70]",
      "tests/test_well_formed.py::test_loose_parser[info239]",
      "tests/test_well_formed.py::test_loose_parser[info1261]",
      "tests/test_well_formed.py::test_loose_parser[info350]",
      "tests/test_well_formed.py::test_strict_parser[info1574]",
      "tests/test_well_formed.py::test_strict_parser[info668]",
      "tests/test_well_formed.py::test_loose_parser[info569]",
      "tests/test_well_formed.py::test_strict_parser[info1256]",
      "tests/test_well_formed.py::test_strict_parser[info81]",
      "tests/test_well_formed.py::test_loose_parser[info1431]",
      "tests/test_well_formed.py::test_strict_parser[info931]",
      "tests/test_well_formed.py::test_strict_parser[info1372]",
      "tests/test_well_formed.py::test_loose_parser[info317]",
      "tests/test_well_formed.py::test_strict_parser[info230]",
      "tests/test_well_formed.py::test_loose_parser[info16]",
      "tests/test_well_formed.py::test_loose_parser[info1331]",
      "tests/test_well_formed.py::test_loose_parser[info1103]",
      "tests/test_well_formed.py::test_strict_parser[info1565]",
      "tests/test_well_formed.py::test_loose_parser[info122]",
      "tests/test_well_formed.py::test_loose_parser[info1445]",
      "tests/test_well_formed.py::test_loose_parser[info68]",
      "tests/test_well_formed.py::test_strict_parser[info1239]",
      "tests/test_well_formed.py::test_loose_parser[info813]",
      "tests/test_well_formed.py::test_strict_parser[info1274]",
      "tests/test_well_formed.py::test_loose_parser[info1409]",
      "tests/test_well_formed.py::test_strict_parser[info1394]",
      "tests/test_well_formed.py::test_strict_parser[info585]",
      "tests/test_well_formed.py::test_strict_parser[info91]",
      "tests/test_well_formed.py::test_strict_parser[info242]",
      "tests/test_well_formed.py::test_loose_parser[info610]",
      "tests/test_well_formed.py::test_strict_parser[info463]",
      "tests/test_well_formed.py::test_loose_parser[info1643]",
      "tests/test_well_formed.py::test_loose_parser[info1614]",
      "tests/test_well_formed.py::test_loose_parser[info662]",
      "tests/test_well_formed.py::test_strict_parser[info753]",
      "tests/test_well_formed.py::test_loose_parser[info1532]",
      "tests/test_well_formed.py::test_strict_parser[info1461]",
      "tests/test_well_formed.py::test_loose_parser[info1092]",
      "tests/test_well_formed.py::test_loose_parser[info909]",
      "tests/test_well_formed.py::test_loose_parser[info179]",
      "tests/test_well_formed.py::test_strict_parser[info211]",
      "tests/test_well_formed.py::test_strict_parser[info618]",
      "tests/test_well_formed.py::test_strict_parser[info455]",
      "tests/test_well_formed.py::test_http_conditions[info16]",
      "tests/test_well_formed.py::test_loose_parser[info1433]",
      "tests/test_well_formed.py::test_loose_parser[info958]",
      "tests/test_well_formed.py::test_loose_parser[info30]",
      "tests/test_well_formed.py::test_loose_parser[info316]",
      "tests/test_well_formed.py::test_loose_parser[info1156]",
      "tests/test_well_formed.py::test_strict_parser[info73]",
      "tests/test_well_formed.py::test_loose_parser[info261]",
      "tests/test_well_formed.py::test_strict_parser[info1328]",
      "tests/test_well_formed.py::test_loose_parser[info1264]",
      "tests/test_well_formed.py::test_strict_parser[info187]",
      "tests/test_well_formed.py::test_strict_parser[info1571]",
      "tests/test_well_formed.py::test_strict_parser[info239]",
      "tests/test_well_formed.py::test_http_conditions[info13]",
      "tests/test_well_formed.py::test_loose_parser[info1277]",
      "tests/test_well_formed.py::test_strict_parser[info1533]",
      "tests/test_well_formed.py::test_loose_parser[info1491]",
      "tests/test_well_formed.py::test_loose_parser[info1647]",
      "tests/test_well_formed.py::test_strict_parser[info582]",
      "tests/test_well_formed.py::test_http_conditions[info17]",
      "tests/test_well_formed.py::test_strict_parser[info646]",
      "tests/test_well_formed.py::test_strict_parser[info791]",
      "tests/test_well_formed.py::test_strict_parser[info425]",
      "tests/test_well_formed.py::test_loose_parser[info877]",
      "tests/test_well_formed.py::test_loose_parser[info655]",
      "tests/test_well_formed.py::test_loose_parser[info1402]",
      "tests/test_well_formed.py::test_loose_parser[info990]",
      "tests/test_well_formed.py::test_loose_parser[info1360]",
      "tests/test_well_formed.py::test_strict_parser[info260]",
      "tests/test_well_formed.py::test_loose_parser[info522]",
      "tests/test_well_formed.py::test_loose_parser[info312]",
      "tests/test_well_formed.py::test_loose_parser[info6]",
      "tests/test_well_formed.py::test_loose_parser[info1064]",
      "tests/test_well_formed.py::test_strict_parser[info352]",
      "tests/test_well_formed.py::test_strict_parser[info207]",
      "tests/test_well_formed.py::test_strict_parser[info1124]",
      "tests/test_well_formed.py::test_loose_parser[info1004]",
      "tests/test_well_formed.py::test_loose_parser[info1546]",
      "tests/test_well_formed.py::test_loose_parser[info682]",
      "tests/test_well_formed.py::test_strict_parser[info200]",
      "tests/test_well_formed.py::test_strict_parser[info1077]",
      "tests/test_well_formed.py::test_loose_parser[info1391]",
      "tests/test_well_formed.py::test_loose_parser[info1118]",
      "tests/test_well_formed.py::test_strict_parser[info667]",
      "tests/test_well_formed.py::test_loose_parser[info1005]",
      "tests/test_well_formed.py::test_strict_parser[info1157]",
      "tests/test_well_formed.py::test_strict_parser[info1550]",
      "tests/test_well_formed.py::test_strict_parser[info952]",
      "tests/test_well_formed.py::test_strict_parser[info1629]",
      "tests/test_well_formed.py::test_strict_parser[info371]",
      "tests/test_well_formed.py::test_strict_parser[info606]",
      "tests/test_well_formed.py::test_strict_parser[info162]",
      "tests/test_well_formed.py::test_strict_parser[info105]",
      "tests/test_well_formed.py::test_loose_parser[info133]",
      "tests/test_well_formed.py::test_loose_parser[info912]",
      "tests/test_well_formed.py::test_loose_parser[info1158]",
      "tests/test_well_formed.py::test_loose_parser[info1551]",
      "tests/test_well_formed.py::test_loose_parser[info1063]",
      "tests/test_well_formed.py::test_strict_parser[info1283]",
      "tests/test_well_formed.py::test_strict_parser[info493]",
      "tests/test_well_formed.py::test_strict_parser[info240]",
      "tests/test_well_formed.py::test_strict_parser[info331]",
      "tests/test_well_formed.py::test_loose_parser[info439]",
      "tests/test_well_formed.py::test_strict_parser[info1625]",
      "tests/test_well_formed.py::test_http_conditions[info74]",
      "tests/test_well_formed.py::test_loose_parser[info732]",
      "tests/test_well_formed.py::test_strict_parser[info1211]",
      "tests/test_well_formed.py::test_strict_parser[info1041]",
      "tests/test_well_formed.py::test_strict_parser[info1129]",
      "tests/test_well_formed.py::test_http_conditions[info51]",
      "tests/test_well_formed.py::test_strict_parser[info954]",
      "tests/test_well_formed.py::test_strict_parser[info1508]",
      "tests/test_well_formed.py::test_loose_parser[info996]",
      "tests/test_well_formed.py::test_loose_parser[info89]",
      "tests/test_well_formed.py::test_loose_parser[info1006]",
      "tests/test_well_formed.py::test_loose_parser[info1490]",
      "tests/test_well_formed.py::test_strict_parser[info401]",
      "tests/test_well_formed.py::test_strict_parser[info1543]",
      "tests/test_well_formed.py::test_strict_parser[info1644]",
      "tests/test_well_formed.py::test_loose_parser[info1256]",
      "tests/test_well_formed.py::test_strict_parser[info39]",
      "tests/test_well_formed.py::test_strict_parser[info807]",
      "tests/test_well_formed.py::test_strict_parser[info1281]",
      "tests/test_well_formed.py::test_loose_parser[info728]",
      "tests/test_well_formed.py::test_loose_parser[info443]",
      "tests/test_well_formed.py::test_loose_parser[info1207]",
      "tests/test_well_formed.py::test_loose_parser[info24]",
      "tests/test_well_formed.py::test_loose_parser[info1027]",
      "tests/test_well_formed.py::test_loose_parser[info422]",
      "tests/test_well_formed.py::test_http_conditions[info80]",
      "tests/test_well_formed.py::test_strict_parser[info978]",
      "tests/test_well_formed.py::test_strict_parser[info1175]",
      "tests/test_well_formed.py::test_loose_parser[info303]",
      "tests/test_well_formed.py::test_loose_parser[info986]",
      "tests/test_well_formed.py::test_strict_parser[info391]",
      "tests/test_well_formed.py::test_loose_parser[info1306]",
      "tests/test_well_formed.py::test_loose_parser[info1401]",
      "tests/test_well_formed.py::test_strict_parser[info1325]",
      "tests/test_well_formed.py::test_strict_parser[info531]",
      "tests/test_well_formed.py::test_strict_parser[info1391]",
      "tests/test_well_formed.py::test_loose_parser[info947]",
      "tests/test_well_formed.py::test_loose_parser[info1411]",
      "tests/test_well_formed.py::test_http_conditions[info50]",
      "tests/test_well_formed.py::test_strict_parser[info1593]",
      "tests/test_well_formed.py::test_strict_parser[info790]",
      "tests/test_well_formed.py::test_loose_parser[info320]",
      "tests/test_well_formed.py::test_strict_parser[info746]",
      "tests/test_well_formed.py::test_loose_parser[info1357]",
      "tests/test_well_formed.py::test_strict_parser[info1154]",
      "tests/test_well_formed.py::test_strict_parser[info649]",
      "tests/test_well_formed.py::test_strict_parser[info873]",
      "tests/test_well_formed.py::test_loose_parser[info741]",
      "tests/test_well_formed.py::test_loose_parser[info634]",
      "tests/test_well_formed.py::test_loose_parser[info1429]",
      "tests/test_well_formed.py::test_loose_parser[info795]",
      "tests/test_well_formed.py::test_strict_parser[info697]",
      "tests/test_well_formed.py::test_loose_parser[info496]",
      "tests/test_well_formed.py::test_loose_parser[info1068]",
      "tests/test_well_formed.py::test_loose_parser[info1479]",
      "tests/test_well_formed.py::test_strict_parser[info205]",
      "tests/test_well_formed.py::test_loose_parser[info1432]",
      "tests/test_well_formed.py::test_strict_parser[info946]",
      "tests/test_well_formed.py::test_loose_parser[info966]",
      "tests/test_well_formed.py::test_strict_parser[info937]",
      "tests/test_well_formed.py::test_http_conditions[info97]",
      "tests/test_well_formed.py::test_strict_parser[info1188]",
      "tests/test_well_formed.py::test_loose_parser[info1610]",
      "tests/test_well_formed.py::test_strict_parser[info196]",
      "tests/test_well_formed.py::test_loose_parser[info447]",
      "tests/test_well_formed.py::test_loose_parser[info1632]",
      "tests/test_well_formed.py::test_strict_parser[info1010]",
      "tests/test_well_formed.py::test_strict_parser[info185]",
      "tests/test_well_formed.py::test_strict_parser[info468]",
      "tests/test_well_formed.py::test_loose_parser[info1514]",
      "tests/test_well_formed.py::test_loose_parser[info931]",
      "tests/test_well_formed.py::test_strict_parser[info225]",
      "tests/test_well_formed.py::test_strict_parser[info832]",
      "tests/test_well_formed.py::test_strict_parser[info1016]",
      "tests/test_well_formed.py::test_strict_parser[info682]",
      "tests/test_well_formed.py::test_strict_parser[info360]",
      "tests/test_well_formed.py::test_loose_parser[info1014]",
      "tests/test_well_formed.py::test_loose_parser[info1168]",
      "tests/test_well_formed.py::test_loose_parser[info119]",
      "tests/test_well_formed.py::test_strict_parser[info1253]",
      "tests/test_well_formed.py::test_strict_parser[info856]",
      "tests/test_well_formed.py::test_strict_parser[info279]",
      "tests/test_well_formed.py::test_loose_parser[info305]",
      "tests/test_well_formed.py::test_strict_parser[info1184]",
      "tests/test_well_formed.py::test_strict_parser[info933]",
      "tests/test_well_formed.py::test_loose_parser[info814]",
      "tests/test_well_formed.py::test_strict_parser[info732]",
      "tests/test_well_formed.py::test_loose_parser[info753]",
      "tests/test_well_formed.py::test_loose_parser[info1007]",
      "tests/test_well_formed.py::test_loose_parser[info152]",
      "tests/test_well_formed.py::test_strict_parser[info471]",
      "tests/test_well_formed.py::test_loose_parser[info790]",
      "tests/test_well_formed.py::test_loose_parser[info1208]",
      "tests/test_well_formed.py::test_loose_parser[info1366]",
      "tests/test_well_formed.py::test_strict_parser[info439]",
      "tests/test_well_formed.py::test_loose_parser[info450]",
      "tests/test_well_formed.py::test_loose_parser[info757]",
      "tests/test_well_formed.py::test_strict_parser[info891]",
      "tests/test_well_formed.py::test_loose_parser[info692]",
      "tests/test_well_formed.py::test_strict_parser[info778]",
      "tests/test_well_formed.py::test_loose_parser[info277]",
      "tests/test_well_formed.py::test_strict_parser[info935]",
      "tests/test_well_formed.py::test_strict_parser[info505]",
      "tests/test_well_formed.py::test_loose_parser[info981]",
      "tests/test_well_formed.py::test_strict_parser[info429]",
      "tests/test_well_formed.py::test_strict_parser[info998]",
      "tests/test_well_formed.py::test_strict_parser[info432]",
      "tests/test_well_formed.py::test_loose_parser[info804]",
      "tests/test_well_formed.py::test_strict_parser[info15]",
      "tests/test_well_formed.py::test_loose_parser[info778]",
      "tests/test_well_formed.py::test_strict_parser[info970]",
      "tests/test_well_formed.py::test_loose_parser[info1227]",
      "tests/test_well_formed.py::test_loose_parser[info830]",
      "tests/test_well_formed.py::test_http_conditions[info26]",
      "tests/test_well_formed.py::test_loose_parser[info833]",
      "tests/test_well_formed.py::test_loose_parser[info581]",
      "tests/test_well_formed.py::test_strict_parser[info427]",
      "tests/test_well_formed.py::test_loose_parser[info560]",
      "tests/test_well_formed.py::test_loose_parser[info1477]",
      "tests/test_well_formed.py::test_strict_parser[info274]",
      "tests/test_well_formed.py::test_strict_parser[info1370]",
      "tests/test_well_formed.py::test_strict_parser[info1432]",
      "tests/test_well_formed.py::test_loose_parser[info622]",
      "tests/test_well_formed.py::test_loose_parser[info611]",
      "tests/test_well_formed.py::test_strict_parser[info1517]",
      "tests/test_well_formed.py::test_loose_parser[info432]",
      "tests/test_well_formed.py::test_loose_parser[info130]",
      "tests/test_well_formed.py::test_loose_parser[info764]",
      "tests/test_well_formed.py::test_strict_parser[info777]",
      "tests/test_well_formed.py::test_loose_parser[info761]",
      "tests/test_well_formed.py::test_loose_parser[info1117]",
      "tests/test_well_formed.py::test_strict_parser[info890]",
      "tests/test_well_formed.py::test_strict_parser[info414]",
      "tests/test_well_formed.py::test_loose_parser[info1108]",
      "tests/test_well_formed.py::test_strict_parser[info1440]",
      "tests/test_well_formed.py::test_loose_parser[info481]",
      "tests/test_well_formed.py::test_loose_parser[info153]",
      "tests/test_well_formed.py::test_http_conditions[info35]",
      "tests/test_well_formed.py::test_strict_parser[info499]",
      "tests/test_well_formed.py::test_strict_parser[info1608]",
      "tests/test_well_formed.py::test_strict_parser[info1202]",
      "tests/test_well_formed.py::test_loose_parser[info198]",
      "tests/test_well_formed.py::test_loose_parser[info467]",
      "tests/test_well_formed.py::test_strict_parser[info809]",
      "tests/test_well_formed.py::test_strict_parser[info1116]",
      "tests/test_well_formed.py::test_strict_parser[info598]",
      "tests/test_well_formed.py::test_strict_parser[info167]",
      "tests/test_well_formed.py::test_loose_parser[info548]",
      "tests/test_well_formed.py::test_strict_parser[info212]",
      "tests/test_well_formed.py::test_loose_parser[info539]",
      "tests/test_well_formed.py::test_strict_parser[info1092]",
      "tests/test_well_formed.py::test_loose_parser[info1536]",
      "tests/test_well_formed.py::test_loose_parser[info1113]",
      "tests/test_well_formed.py::test_strict_parser[info675]"
    ],
    "created_at": "2025-06-19T18:37:27.466314",
    "image_name": "swesmith.x86_64.kurtmckee__feedparser.cad965a3",
    "base_commit": "main",
    "problem_statement": "FeedParserDict silently \u201ceats\u201d keys when you use a list  \n--------------------------------------------------------\n\nRan into a pretty alarming situation while experimenting with `FeedParserDict`.  \nShort version: if you set a value with a *list* of key aliases, subsequent look-ups may raise `KeyError` as if the primary key never existed.\n\nMinimal snippet (copy-paste into a fresh interpreter):\n\n```python\n>>> from feedparser.util import FeedParserDict\n>>> aliases = ['url', 'href']       # common pair inside <link> objects\n\n>>> d = FeedParserDict()\n\n>>> d[aliases] = 'https://example.com'\n>>> d\n{'url': 'https://example.com'}\n\n# So far so good \u2026 but:\n\n>>> d['url']\nTraceback (most recent call last):\n  ...\nKeyError: 'url'\n\n# and the alias list is now empty!\n>>> aliases\n[]\n```\n\nWhat I expected\n---------------\n\nAfter the assignment, `d['url']` (and ideally `d['href']`) should return the stored value, and the original `aliases` list should stay intact.\n\nWhy this matters\n----------------\n\nWhen parsing real feeds the library automatically builds lots of these\n`FeedParserDict` objects internally.  Losing the canonical key causes higher-level\ncode to explode with `KeyError: 'url'` (or `'title'`, `'id'`, etc.) even though the\ndata was clearly present a moment before.\n\nEnvironment\n-----------\n\n* feedparser 6.x (current `main` as of today)\n* Python 3.10.15\n* macOS / Linux \u2013 reproducible on both\n\nNo special extensions, just vanilla interpreter.\n\nAdditional notes\n----------------\n\nRolling back to the previous commit (pre-update to `FeedParserDict.__setitem__`)\neliminates the issue, so something changed very recently.\n\nLet me know if you need any more details!"
  },
  {
    "instance_id": "oauthlib__oauthlib.1fd52536.sweagent_buggen__aad548dc",
    "repo": "swesmith/oauthlib__oauthlib.1fd52536",
    "patch": "diff --git a/oauthlib/oauth2/rfc6749/utils.py b/oauthlib/oauth2/rfc6749/utils.py\nindex 7dc27b3..3b8c1e7 100644\n--- a/oauthlib/oauth2/rfc6749/utils.py\n+++ b/oauthlib/oauth2/rfc6749/utils.py\n@@ -76,8 +76,8 @@ def generate_age(issue_time):\n     return str(age)\n \n \n-def is_secure_transport(uri):\n+def is_secure_transport(uri, _cached_insecure=os.environ.get('OAUTHLIB_INSECURE_TRANSPORT')):\n     \"\"\"Check if the uri is over ssl.\"\"\"\n-    if os.environ.get('OAUTHLIB_INSECURE_TRANSPORT'):\n+    if _cached_insecure:\n         return True\n     return uri.lower().startswith('https://')\n",
    "FAIL_TO_PASS": [
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_is_secure_transport"
    ],
    "PASS_TO_PASS": [
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_verifier",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_verifier",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response_oob",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_get_realms_and_credentials",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_realms",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_token",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_client_key_check",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_duplicate_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_enforce_ssl",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_expired_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_invalid_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_mandated_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_multiple_source_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_noncecheck",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_method_validation",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_methods",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_ssl_enforcement",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_hmac_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_plaintext_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_rsa_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_signature_too_short",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_uri_provided_realm",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_check_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_no_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_additional_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_default_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_convert_to_unicode_resource_owner",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_decoding",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_nonce",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_timestamp",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha1",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha256",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_rsa",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha1_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha256_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_invalid_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_plaintext_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_register_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_no_key",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_invalid_signature_type",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_body",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_query",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_get_with_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_no_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_unicode",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_append_params",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_form_encoded_body",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers_ignore_data",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_request_uri_query",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_length",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_realms",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_not_implemented",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_base_string_uri",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_collect_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_hmac_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_normalize_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_plaintext_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_bad_keys",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_jwt_algorithm_cache",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_plaintext_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_signature_base_string",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_escape",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_oauth_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_parse_authorization_header",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_unescape",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_bearer_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_mac_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_plain",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_s256",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_max_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_min_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_generated_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_invalid_expires_at",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_authorization_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_refresh_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_revocation_request",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_implicit_token_uri",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body_no_initial_private_key",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_auth_grant_uri",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_grant_uri_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_authorization_requeset",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_default_config",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_error_catching",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_unavailability",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_wrapper",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_backend",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_introspect",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_legacy",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_revoke",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_web",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_client_id_authentication",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_custom_authentication",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri_in_token",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_redirect_uri_preservation",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_state_preservation",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied_no_default_redirecturi",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_parameter",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_default_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_grant",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_post_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_duplicate_params",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_missing_response_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_mismatching_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_server_error",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_temporarily_unavailable",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthorized_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_grant_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_response_type",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_post_authorization_request",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_token_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims_spoof_active",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_false",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_nohint",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_create_metadata_response",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_mandatory_fields",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_metadata_validate_issuer",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_openid_oauth2_preconfigured",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_server_metadata",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint_overridden",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_backend_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_legacy_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_mobile_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_web_application",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_with_callback",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_changed",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_extraction",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_preservation",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_validate_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_missing_params",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_user",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_scopes",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_custom_json_error",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_grant_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_implicit_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_notype",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_grant_uri",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_url_encoded_token_response",
      "tests/oauth2/rfc6749/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_scopes_and_user_id_stored_in_access_token",
      "tests/oauth2/rfc6749/test_server.py::ResourceEndpointTest::test_defaults",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type_with_fake_header_returns_type_0",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_fake_bearer_is_not_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_header_with_multispaces_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_lowercase_bearer_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_bearer_request",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_mac_header",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_valid_bearer_is_validated",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_escape",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_generate_age",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_host_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_list_to_scope",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_params_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_scope_to_list",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_body",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_uri",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_scope_parameter",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_confidential_client",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_public_client",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval_with_zero",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_user_gode_generator",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_callable",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_string",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_claims_stored_on_code_creation",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_invalid_claims",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_authorization_endpoint_handles_prompt",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_oidc_params_preservation",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_prompt_none_exclusiveness",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_no_openid",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_with_openid",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_json_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_jwt_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_no_auth",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_expired",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_no_openid_scope",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_wrong_auth",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_and_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token_no_openid",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_id_token_hash",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdTest::test_create_token_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdWithoutCodeTest::test_create_token_response_openid_without_code",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOAuthTest::test_create_token_response_oauth",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_id_token_contains_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token_false",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_token_without_openid_scope",
      "tests/openid/connect/core/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_calls_get_id_token",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_non_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_estimate_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers_basic",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_token_from_request",
      "tests/test_common.py::EncodingTest::test_urldecode",
      "tests/test_common.py::ParameterTest::test_add_params_to_uri",
      "tests/test_common.py::ParameterTest::test_extract_invalid",
      "tests/test_common.py::ParameterTest::test_extract_non_formencoded_string",
      "tests/test_common.py::ParameterTest::test_extract_params_blank_string",
      "tests/test_common.py::ParameterTest::test_extract_params_dict",
      "tests/test_common.py::ParameterTest::test_extract_params_empty_list",
      "tests/test_common.py::ParameterTest::test_extract_params_formencoded",
      "tests/test_common.py::ParameterTest::test_extract_params_twotuple",
      "tests/test_common.py::GeneratorTest::test_generate_client_id",
      "tests/test_common.py::GeneratorTest::test_generate_nonce",
      "tests/test_common.py::GeneratorTest::test_generate_timestamp",
      "tests/test_common.py::GeneratorTest::test_generate_token",
      "tests/test_common.py::RequestTest::test_dict_body",
      "tests/test_common.py::RequestTest::test_empty_dict_body",
      "tests/test_common.py::RequestTest::test_empty_list_body",
      "tests/test_common.py::RequestTest::test_empty_string_body",
      "tests/test_common.py::RequestTest::test_getattr_existing_attribute",
      "tests/test_common.py::RequestTest::test_getattr_raise_attribute_error",
      "tests/test_common.py::RequestTest::test_getattr_return_default",
      "tests/test_common.py::RequestTest::test_headers_params",
      "tests/test_common.py::RequestTest::test_list_body",
      "tests/test_common.py::RequestTest::test_non_formencoded_string_body",
      "tests/test_common.py::RequestTest::test_non_unicode_params",
      "tests/test_common.py::RequestTest::test_none_body",
      "tests/test_common.py::RequestTest::test_param_free_sequence_body",
      "tests/test_common.py::RequestTest::test_password_body",
      "tests/test_common.py::RequestTest::test_sanitized_request_non_debug_mode",
      "tests/test_common.py::RequestTest::test_sanitizing_authorization_header",
      "tests/test_common.py::RequestTest::test_token_body",
      "tests/test_common.py::CaseInsensitiveDictTest::test_basic",
      "tests/test_common.py::CaseInsensitiveDictTest::test_update",
      "tests/test_uri_validate.py::UriValidateTest::test_combined_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_custom_scheme",
      "tests/test_uri_validate.py::UriValidateTest::test_failures",
      "tests/test_uri_validate.py::UriValidateTest::test_fragment_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv4",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv6_bracket",
      "tests/test_uri_validate.py::UriValidateTest::test_is_absolute_uri",
      "tests/test_uri_validate.py::UriValidateTest::test_query",
      "tests/test_uri_validate.py::UriValidateTest::test_recursive_regex"
    ],
    "created_at": "2025-06-19T18:37:33.391514",
    "image_name": "swesmith.x86_64.oauthlib__oauthlib.1fd52536",
    "base_commit": "main",
    "problem_statement": "`is_secure_transport()` stops reacting to `OAUTHLIB_INSECURE_TRANSPORT` once it is first imported\n------------------------------------------------------------------\n\nSince the latest commit, `oauthlib.oauth2.rfc6749.utils.is_secure_transport` appears to read the\n`OAUTHLIB_INSECURE_TRANSPORT` environment variable only once, at import-time.  \nIf the variable is changed later in the process (for instance in a test suite or in a CLI tool\nthat wants to relax TLS checks for a single command) the function keeps returning the result that\nwas valid when Python first imported the module.\n\nWhy this is a problem\n---------------------\n\nSeveral projects (and plenty of quick-and-dirty scripts) rely on enabling\n`OAUTHLIB_INSECURE_TRANSPORT=1` *after* import \u2013 e.g. right before talking to a development OAuth\nserver over plain HTTP.  \nWith the current behaviour that switch has no effect, leading to confusing \u201cnon-secure transport\nforbidden\u201d errors.\n\nHow to reproduce\n----------------\n\nStart a fresh interpreter and run the following snippet:\n\n```python\nimport os\nfrom oauthlib.oauth2.rfc6749.utils import is_secure_transport\n\n# Make sure the variable is NOT set at import-time\nos.environ.pop(\"OAUTHLIB_INSECURE_TRANSPORT\", None)\n\nprint(is_secure_transport(\"http://example.com\"))\n# expected: False\n# actual  : False   (so far so good)\n\n# Enable insecure transport *after* the import\nos.environ[\"OAUTHLIB_INSECURE_TRANSPORT\"] = \"1\"\n\nprint(is_secure_transport(\"http://example.com\"))\n# expected: True\n# actual  : False   <-- keeps the old decision\n```\n\nIf you repeat the same experiment but set the environment variable **before** importing\n`is_secure_transport`, both calls return `True`, confirming that the flag is now cached at import\ntime.\n\nEnvironment\n-----------\n\n- oauthlib master @ `<current commit>`\n- Python 3.10 (also seen on 3.9)\n- macOS 14.0 and Ubuntu 22.04\n\nLet me know if you need any additional details!"
  },
  {
    "instance_id": "oauthlib__oauthlib.1fd52536.sweagent_buggen__7015924c",
    "repo": "swesmith/oauthlib__oauthlib.1fd52536",
    "patch": "diff --git a/oauthlib/oauth2/rfc6749/endpoints/metadata.py b/oauthlib/oauth2/rfc6749/endpoints/metadata.py\nindex 34274cb..f05b304 100644\n--- a/oauthlib/oauth2/rfc6749/endpoints/metadata.py\n+++ b/oauthlib/oauth2/rfc6749/endpoints/metadata.py\n@@ -21,6 +21,8 @@ log = logging.getLogger(__name__)\n \n \n class MetadataEndpoint(BaseEndpoint):\n+    _grant_types = []\n+\n \n     \"\"\"OAuth2.0 Authorization Server Metadata endpoint.\n \n@@ -220,7 +222,7 @@ class MetadataEndpoint(BaseEndpoint):\n         self.validate_metadata(claims, \"op_policy_uri\", is_url=True)\n         self.validate_metadata(claims, \"op_tos_uri\", is_url=True)\n \n-        self._grant_types = []\n+        \n         for endpoint in self.endpoints:\n             if isinstance(endpoint, TokenEndpoint):\n                 self.validate_metadata_token(claims, endpoint)\n@@ -233,6 +235,6 @@ class MetadataEndpoint(BaseEndpoint):\n \n         # \"grant_types_supported\" is a combination of all OAuth2 grant types\n         # allowed in the current provider implementation.\n-        claims.setdefault(\"grant_types_supported\", self._grant_types)\n+        claims.setdefault(\"grant_types_supported\", list(self._grant_types))\n         self.validate_metadata(claims, \"grant_types_supported\", is_list=True)\n         return claims\ndiff --git a/patch_plan.txt b/patch_plan.txt\nnew file mode 100644\nindex 0000000..8b13789\n--- /dev/null\n+++ b/patch_plan.txt\n@@ -0,0 +1 @@\n+\n",
    "FAIL_TO_PASS": [
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_openid_oauth2_preconfigured",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_server_metadata",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint"
    ],
    "PASS_TO_PASS": [
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_verifier",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_verifier",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response_oob",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_get_realms_and_credentials",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_realms",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_token",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_client_key_check",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_duplicate_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_enforce_ssl",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_expired_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_invalid_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_mandated_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_multiple_source_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_noncecheck",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_method_validation",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_methods",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_ssl_enforcement",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_hmac_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_plaintext_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_rsa_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_signature_too_short",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_uri_provided_realm",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_check_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_no_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_additional_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_default_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_convert_to_unicode_resource_owner",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_decoding",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_nonce",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_timestamp",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha1",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha256",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_rsa",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha1_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha256_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_invalid_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_plaintext_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_register_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_no_key",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_invalid_signature_type",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_body",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_query",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_get_with_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_no_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_unicode",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_append_params",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_form_encoded_body",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers_ignore_data",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_request_uri_query",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_length",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_realms",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_not_implemented",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_base_string_uri",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_collect_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_hmac_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_normalize_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_plaintext_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_bad_keys",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_jwt_algorithm_cache",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_plaintext_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_signature_base_string",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_escape",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_oauth_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_parse_authorization_header",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_unescape",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_bearer_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_mac_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_plain",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_s256",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_max_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_min_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_generated_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_invalid_expires_at",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_authorization_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_refresh_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_revocation_request",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_implicit_token_uri",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body_no_initial_private_key",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_auth_grant_uri",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_grant_uri_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_authorization_requeset",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_default_config",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_error_catching",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_unavailability",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_wrapper",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_backend",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_introspect",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_legacy",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_revoke",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_web",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_client_id_authentication",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_custom_authentication",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri_in_token",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_redirect_uri_preservation",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_state_preservation",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied_no_default_redirecturi",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_parameter",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_default_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_grant",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_post_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_duplicate_params",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_missing_response_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_mismatching_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_server_error",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_temporarily_unavailable",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthorized_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_grant_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_response_type",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_post_authorization_request",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_token_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims_spoof_active",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_false",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_nohint",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_create_metadata_response",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_mandatory_fields",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_metadata_validate_issuer",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint_overridden",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_backend_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_legacy_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_mobile_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_web_application",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_with_callback",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_changed",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_extraction",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_preservation",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_validate_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_missing_params",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_user",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_scopes",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_custom_json_error",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_grant_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_implicit_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_notype",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_grant_uri",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_url_encoded_token_response",
      "tests/oauth2/rfc6749/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_scopes_and_user_id_stored_in_access_token",
      "tests/oauth2/rfc6749/test_server.py::ResourceEndpointTest::test_defaults",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type_with_fake_header_returns_type_0",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_fake_bearer_is_not_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_header_with_multispaces_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_lowercase_bearer_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_bearer_request",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_mac_header",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_valid_bearer_is_validated",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_escape",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_generate_age",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_host_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_is_secure_transport",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_list_to_scope",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_params_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_scope_to_list",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_body",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_uri",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_scope_parameter",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_confidential_client",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_public_client",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval_with_zero",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_user_gode_generator",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_callable",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_string",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_claims_stored_on_code_creation",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_invalid_claims",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_authorization_endpoint_handles_prompt",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_oidc_params_preservation",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_prompt_none_exclusiveness",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_no_openid",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_with_openid",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_json_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_jwt_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_no_auth",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_expired",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_no_openid_scope",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_wrong_auth",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_and_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token_no_openid",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_id_token_hash",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdTest::test_create_token_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdWithoutCodeTest::test_create_token_response_openid_without_code",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOAuthTest::test_create_token_response_oauth",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_id_token_contains_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token_false",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_token_without_openid_scope",
      "tests/openid/connect/core/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_calls_get_id_token",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_non_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_estimate_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers_basic",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_token_from_request",
      "tests/test_common.py::EncodingTest::test_urldecode",
      "tests/test_common.py::ParameterTest::test_add_params_to_uri",
      "tests/test_common.py::ParameterTest::test_extract_invalid",
      "tests/test_common.py::ParameterTest::test_extract_non_formencoded_string",
      "tests/test_common.py::ParameterTest::test_extract_params_blank_string",
      "tests/test_common.py::ParameterTest::test_extract_params_dict",
      "tests/test_common.py::ParameterTest::test_extract_params_empty_list",
      "tests/test_common.py::ParameterTest::test_extract_params_formencoded",
      "tests/test_common.py::ParameterTest::test_extract_params_twotuple",
      "tests/test_common.py::GeneratorTest::test_generate_client_id",
      "tests/test_common.py::GeneratorTest::test_generate_nonce",
      "tests/test_common.py::GeneratorTest::test_generate_timestamp",
      "tests/test_common.py::GeneratorTest::test_generate_token",
      "tests/test_common.py::RequestTest::test_dict_body",
      "tests/test_common.py::RequestTest::test_empty_dict_body",
      "tests/test_common.py::RequestTest::test_empty_list_body",
      "tests/test_common.py::RequestTest::test_empty_string_body",
      "tests/test_common.py::RequestTest::test_getattr_existing_attribute",
      "tests/test_common.py::RequestTest::test_getattr_raise_attribute_error",
      "tests/test_common.py::RequestTest::test_getattr_return_default",
      "tests/test_common.py::RequestTest::test_headers_params",
      "tests/test_common.py::RequestTest::test_list_body",
      "tests/test_common.py::RequestTest::test_non_formencoded_string_body",
      "tests/test_common.py::RequestTest::test_non_unicode_params",
      "tests/test_common.py::RequestTest::test_none_body",
      "tests/test_common.py::RequestTest::test_param_free_sequence_body",
      "tests/test_common.py::RequestTest::test_password_body",
      "tests/test_common.py::RequestTest::test_sanitized_request_non_debug_mode",
      "tests/test_common.py::RequestTest::test_sanitizing_authorization_header",
      "tests/test_common.py::RequestTest::test_token_body",
      "tests/test_common.py::CaseInsensitiveDictTest::test_basic",
      "tests/test_common.py::CaseInsensitiveDictTest::test_update",
      "tests/test_uri_validate.py::UriValidateTest::test_combined_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_custom_scheme",
      "tests/test_uri_validate.py::UriValidateTest::test_failures",
      "tests/test_uri_validate.py::UriValidateTest::test_fragment_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv4",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv6_bracket",
      "tests/test_uri_validate.py::UriValidateTest::test_is_absolute_uri",
      "tests/test_uri_validate.py::UriValidateTest::test_query",
      "tests/test_uri_validate.py::UriValidateTest::test_recursive_regex"
    ],
    "created_at": "2025-06-19T18:37:33.102402",
    "image_name": "swesmith.x86_64.oauthlib__oauthlib.1fd52536",
    "base_commit": "main",
    "problem_statement": "MetadataEndpoint shares state between instances and returns mixed\u2010up grant_types_supported  \nDescription\n\nObserved after upgrading to the current main branch.\n\nCalling MetadataEndpoint more than once in the same process produces a cumulative\n`grant_types_supported` list \u2013 the second (and every subsequent) instance\ninherits grant types that were only relevant to the first one.\n\nTiny reproduction you can paste in a Python shell:\n\n```python\nfrom oauthlib.oauth2.rfc6749.endpoints import MetadataEndpoint\nfrom oauthlib.oauth2 import TokenEndpoint\n\ndef show(grant_type):\n    token_ep = TokenEndpoint(None, None, grant_types={grant_type: None})\n    meta_ep = MetadataEndpoint([token_ep],\n        {\"issuer\": \"https://foo.bar\", \"token_endpoint\": \"https://foo.bar/token\"})\n    print(grant_type, \"\u2192\", meta_ep.claims[\"grant_types_supported\"])\n\nshow(\"password\")            # ok \u2192 ['password']\nshow(\"client_credentials\")  # expected ['client_credentials']\n                             # got      ['password', 'client_credentials']\nshow(\"refresh_token\")       # keeps growing\u2026\n```\n\nEvery call after the first one contains all previously requested grant types,\nwhich makes the metadata endpoint advertise capabilities the server may not\nactually support.\n\nThis is especially visible in test suites that create several `Server`\nobjects with different grant configurations or when an application runs\nmultiple OAuth/OIDC providers side by side.\n\nThanks for taking a look!"
  },
  {
    "instance_id": "lepture__mistune.bf54ef67.sweagent_buggen__3eff3b58",
    "repo": "swesmith/lepture__mistune.bf54ef67",
    "patch": "diff --git a/src/mistune/directives/toc.py b/src/mistune/directives/toc.py\nindex 45a13d7..7bc5fd8 100644\n--- a/src/mistune/directives/toc.py\n+++ b/src/mistune/directives/toc.py\n@@ -29,8 +29,9 @@ class TableOfContents(DirectivePlugin):\n         self.min_level = min_level\n         self.max_level = max_level\n \n-    def generate_heading_id(self, token: Dict[str, Any], index: int) -> str:\n-        return 'toc_' + str(index + 1)\n+    def generate_heading_id(self, token: Dict[str, Any], index: int, _counter: list = [0]) -> str:\n+        _counter[0] += 1\n+        return 'toc_' + str(_counter[0])\n \n     def parse(\n         self, block: \"BlockParser\", m: Match[str], state: \"BlockState\"\n",
    "FAIL_TO_PASS": [
      "tests/test_directives.py::TestDirective_rst_toc::test_complex_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_html_in_heading_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_insane_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_insane_002",
      "tests/test_directives.py::TestDirective_rst_toc::test_link_in_heading_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_simple_toc_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_collapse_toc_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_complex_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_html_in_heading_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_insane_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_insane_002",
      "tests/test_directives.py::TestDirective_fenced_toc::test_link_in_heading_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_simple_toc_001"
    ],
    "PASS_TO_PASS": [
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_062",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_063",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_064",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_065",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_066",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_067",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_068",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_069",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_070",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_071",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_072",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_073",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_074",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_075",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_076",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_077",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_078",
      "tests/test_commonmark.py::TestCommonMark::test_atx_headings_079",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_593",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_594",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_595",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_596",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_597",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_598",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_599",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_600",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_601",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_602",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_603",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_604",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_605",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_606",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_607",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_608",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_609",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_610",
      "tests/test_commonmark.py::TestCommonMark::test_autolinks_611",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_012",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_013",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_014",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_015",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_016",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_017",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_018",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_019",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_020",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_021",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_022",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_023",
      "tests/test_commonmark.py::TestCommonMark::test_backslash_escapes_024",
      "tests/test_commonmark.py::TestCommonMark::test_blank_lines_227",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_228",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_229",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_230",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_231",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_232",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_233",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_234",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_235",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_236",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_237",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_238",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_239",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_240",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_241",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_242",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_243",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_244",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_245",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_246",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_247",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_248",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_249",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_250",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_251",
      "tests/test_commonmark.py::TestCommonMark::test_block_quotes_252",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_328",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_329",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_330",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_331",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_332",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_333",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_334",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_335",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_336",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_337",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_338",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_339",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_340",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_341",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_342",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_343",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_344",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_345",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_346",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_347",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_348",
      "tests/test_commonmark.py::TestCommonMark::test_code_spans_349",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_350",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_351",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_353",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_354",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_355",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_356",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_357",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_358",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_359",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_360",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_361",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_362",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_363",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_364",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_365",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_366",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_369",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_370",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_371",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_373",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_374",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_375",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_376",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_377",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_378",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_380",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_381",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_382",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_383",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_384",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_385",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_386",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_387",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_389",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_390",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_392",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_393",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_394",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_395",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_396",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_397",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_398",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_399",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_400",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_401",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_402",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_403",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_404",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_405",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_409",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_410",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_411",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_415",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_419",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_420",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_421",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_422",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_423",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_427",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_428",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_432",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_433",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_434",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_435",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_436",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_437",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_438",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_439",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_440",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_447",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_448",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_449",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_450",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_451",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_452",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_459",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_461",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_466",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_468",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_469",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_472",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_473",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_474",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_475",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_476",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_479",
      "tests/test_commonmark.py::TestCommonMark::test_emphasis_and_strong_emphasis_480",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_025",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_026",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_027",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_028",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_029",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_030",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_031",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_032",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_033",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_034",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_035",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_036",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_037",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_038",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_039",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_040",
      "tests/test_commonmark.py::TestCommonMark::test_entity_and_numeric_character_references_041",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_119",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_120",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_121",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_122",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_123",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_124",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_125",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_126",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_127",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_128",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_129",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_130",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_131",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_132",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_133",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_134",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_135",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_136",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_137",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_138",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_139",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_140",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_141",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_142",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_143",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_144",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_145",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_146",
      "tests/test_commonmark.py::TestCommonMark::test_fenced_code_blocks_147",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_633",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_634",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_635",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_636",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_637",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_638",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_639",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_640",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_641",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_642",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_643",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_644",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_645",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_646",
      "tests/test_commonmark.py::TestCommonMark::test_hard_line_breaks_647",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_148",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_149",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_150",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_151",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_152",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_153",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_154",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_155",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_156",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_157",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_158",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_159",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_160",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_161",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_162",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_163",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_164",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_165",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_166",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_167",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_168",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_169",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_170",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_171",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_172",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_173",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_174",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_175",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_176",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_177",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_178",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_179",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_180",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_181",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_182",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_183",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_184",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_185",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_186",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_187",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_188",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_189",
      "tests/test_commonmark.py::TestCommonMark::test_html_blocks_190",
      "tests/test_commonmark.py::TestCommonMark::test_images_571",
      "tests/test_commonmark.py::TestCommonMark::test_images_572",
      "tests/test_commonmark.py::TestCommonMark::test_images_574",
      "tests/test_commonmark.py::TestCommonMark::test_images_575",
      "tests/test_commonmark.py::TestCommonMark::test_images_576",
      "tests/test_commonmark.py::TestCommonMark::test_images_577",
      "tests/test_commonmark.py::TestCommonMark::test_images_578",
      "tests/test_commonmark.py::TestCommonMark::test_images_579",
      "tests/test_commonmark.py::TestCommonMark::test_images_580",
      "tests/test_commonmark.py::TestCommonMark::test_images_581",
      "tests/test_commonmark.py::TestCommonMark::test_images_582",
      "tests/test_commonmark.py::TestCommonMark::test_images_583",
      "tests/test_commonmark.py::TestCommonMark::test_images_584",
      "tests/test_commonmark.py::TestCommonMark::test_images_585",
      "tests/test_commonmark.py::TestCommonMark::test_images_586",
      "tests/test_commonmark.py::TestCommonMark::test_images_587",
      "tests/test_commonmark.py::TestCommonMark::test_images_588",
      "tests/test_commonmark.py::TestCommonMark::test_images_589",
      "tests/test_commonmark.py::TestCommonMark::test_images_590",
      "tests/test_commonmark.py::TestCommonMark::test_images_591",
      "tests/test_commonmark.py::TestCommonMark::test_images_592",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_107",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_108",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_109",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_110",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_111",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_112",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_113",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_114",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_115",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_116",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_117",
      "tests/test_commonmark.py::TestCommonMark::test_indented_code_blocks_118",
      "tests/test_commonmark.py::TestCommonMark::test_inlines_327",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_192",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_193",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_194",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_195",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_196",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_197",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_198",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_199",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_200",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_201",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_202",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_203",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_204",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_205",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_206",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_207",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_208",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_209",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_210",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_211",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_212",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_213",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_214",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_215",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_216",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_217",
      "tests/test_commonmark.py::TestCommonMark::test_link_reference_definitions_218",
      "tests/test_commonmark.py::TestCommonMark::test_links_481",
      "tests/test_commonmark.py::TestCommonMark::test_links_482",
      "tests/test_commonmark.py::TestCommonMark::test_links_483",
      "tests/test_commonmark.py::TestCommonMark::test_links_484",
      "tests/test_commonmark.py::TestCommonMark::test_links_485",
      "tests/test_commonmark.py::TestCommonMark::test_links_486",
      "tests/test_commonmark.py::TestCommonMark::test_links_487",
      "tests/test_commonmark.py::TestCommonMark::test_links_488",
      "tests/test_commonmark.py::TestCommonMark::test_links_489",
      "tests/test_commonmark.py::TestCommonMark::test_links_490",
      "tests/test_commonmark.py::TestCommonMark::test_links_491",
      "tests/test_commonmark.py::TestCommonMark::test_links_492",
      "tests/test_commonmark.py::TestCommonMark::test_links_493",
      "tests/test_commonmark.py::TestCommonMark::test_links_494",
      "tests/test_commonmark.py::TestCommonMark::test_links_497",
      "tests/test_commonmark.py::TestCommonMark::test_links_498",
      "tests/test_commonmark.py::TestCommonMark::test_links_499",
      "tests/test_commonmark.py::TestCommonMark::test_links_500",
      "tests/test_commonmark.py::TestCommonMark::test_links_501",
      "tests/test_commonmark.py::TestCommonMark::test_links_502",
      "tests/test_commonmark.py::TestCommonMark::test_links_503",
      "tests/test_commonmark.py::TestCommonMark::test_links_505",
      "tests/test_commonmark.py::TestCommonMark::test_links_506",
      "tests/test_commonmark.py::TestCommonMark::test_links_507",
      "tests/test_commonmark.py::TestCommonMark::test_links_508",
      "tests/test_commonmark.py::TestCommonMark::test_links_509",
      "tests/test_commonmark.py::TestCommonMark::test_links_510",
      "tests/test_commonmark.py::TestCommonMark::test_links_511",
      "tests/test_commonmark.py::TestCommonMark::test_links_512",
      "tests/test_commonmark.py::TestCommonMark::test_links_513",
      "tests/test_commonmark.py::TestCommonMark::test_links_514",
      "tests/test_commonmark.py::TestCommonMark::test_links_515",
      "tests/test_commonmark.py::TestCommonMark::test_links_516",
      "tests/test_commonmark.py::TestCommonMark::test_links_520",
      "tests/test_commonmark.py::TestCommonMark::test_links_521",
      "tests/test_commonmark.py::TestCommonMark::test_links_522",
      "tests/test_commonmark.py::TestCommonMark::test_links_523",
      "tests/test_commonmark.py::TestCommonMark::test_links_524",
      "tests/test_commonmark.py::TestCommonMark::test_links_525",
      "tests/test_commonmark.py::TestCommonMark::test_links_526",
      "tests/test_commonmark.py::TestCommonMark::test_links_527",
      "tests/test_commonmark.py::TestCommonMark::test_links_528",
      "tests/test_commonmark.py::TestCommonMark::test_links_529",
      "tests/test_commonmark.py::TestCommonMark::test_links_530",
      "tests/test_commonmark.py::TestCommonMark::test_links_533",
      "tests/test_commonmark.py::TestCommonMark::test_links_534",
      "tests/test_commonmark.py::TestCommonMark::test_links_535",
      "tests/test_commonmark.py::TestCommonMark::test_links_536",
      "tests/test_commonmark.py::TestCommonMark::test_links_537",
      "tests/test_commonmark.py::TestCommonMark::test_links_538",
      "tests/test_commonmark.py::TestCommonMark::test_links_539",
      "tests/test_commonmark.py::TestCommonMark::test_links_540",
      "tests/test_commonmark.py::TestCommonMark::test_links_541",
      "tests/test_commonmark.py::TestCommonMark::test_links_542",
      "tests/test_commonmark.py::TestCommonMark::test_links_543",
      "tests/test_commonmark.py::TestCommonMark::test_links_544",
      "tests/test_commonmark.py::TestCommonMark::test_links_545",
      "tests/test_commonmark.py::TestCommonMark::test_links_546",
      "tests/test_commonmark.py::TestCommonMark::test_links_547",
      "tests/test_commonmark.py::TestCommonMark::test_links_548",
      "tests/test_commonmark.py::TestCommonMark::test_links_549",
      "tests/test_commonmark.py::TestCommonMark::test_links_550",
      "tests/test_commonmark.py::TestCommonMark::test_links_551",
      "tests/test_commonmark.py::TestCommonMark::test_links_552",
      "tests/test_commonmark.py::TestCommonMark::test_links_553",
      "tests/test_commonmark.py::TestCommonMark::test_links_554",
      "tests/test_commonmark.py::TestCommonMark::test_links_555",
      "tests/test_commonmark.py::TestCommonMark::test_links_556",
      "tests/test_commonmark.py::TestCommonMark::test_links_557",
      "tests/test_commonmark.py::TestCommonMark::test_links_558",
      "tests/test_commonmark.py::TestCommonMark::test_links_559",
      "tests/test_commonmark.py::TestCommonMark::test_links_560",
      "tests/test_commonmark.py::TestCommonMark::test_links_561",
      "tests/test_commonmark.py::TestCommonMark::test_links_562",
      "tests/test_commonmark.py::TestCommonMark::test_links_563",
      "tests/test_commonmark.py::TestCommonMark::test_links_564",
      "tests/test_commonmark.py::TestCommonMark::test_links_565",
      "tests/test_commonmark.py::TestCommonMark::test_links_566",
      "tests/test_commonmark.py::TestCommonMark::test_links_567",
      "tests/test_commonmark.py::TestCommonMark::test_links_568",
      "tests/test_commonmark.py::TestCommonMark::test_links_569",
      "tests/test_commonmark.py::TestCommonMark::test_links_570",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_253",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_254",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_255",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_256",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_257",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_258",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_259",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_260",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_261",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_262",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_263",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_264",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_265",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_266",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_267",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_268",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_269",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_270",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_271",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_272",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_273",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_274",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_275",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_276",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_277",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_278",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_279",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_280",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_281",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_282",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_283",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_284",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_285",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_286",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_287",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_288",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_289",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_290",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_291",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_292",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_293",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_294",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_295",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_296",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_297",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_298",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_299",
      "tests/test_commonmark.py::TestCommonMark::test_list_items_300",
      "tests/test_commonmark.py::TestCommonMark::test_lists_301",
      "tests/test_commonmark.py::TestCommonMark::test_lists_302",
      "tests/test_commonmark.py::TestCommonMark::test_lists_303",
      "tests/test_commonmark.py::TestCommonMark::test_lists_304",
      "tests/test_commonmark.py::TestCommonMark::test_lists_305",
      "tests/test_commonmark.py::TestCommonMark::test_lists_306",
      "tests/test_commonmark.py::TestCommonMark::test_lists_307",
      "tests/test_commonmark.py::TestCommonMark::test_lists_308",
      "tests/test_commonmark.py::TestCommonMark::test_lists_309",
      "tests/test_commonmark.py::TestCommonMark::test_lists_310",
      "tests/test_commonmark.py::TestCommonMark::test_lists_311",
      "tests/test_commonmark.py::TestCommonMark::test_lists_312",
      "tests/test_commonmark.py::TestCommonMark::test_lists_313",
      "tests/test_commonmark.py::TestCommonMark::test_lists_314",
      "tests/test_commonmark.py::TestCommonMark::test_lists_315",
      "tests/test_commonmark.py::TestCommonMark::test_lists_316",
      "tests/test_commonmark.py::TestCommonMark::test_lists_317",
      "tests/test_commonmark.py::TestCommonMark::test_lists_318",
      "tests/test_commonmark.py::TestCommonMark::test_lists_319",
      "tests/test_commonmark.py::TestCommonMark::test_lists_320",
      "tests/test_commonmark.py::TestCommonMark::test_lists_321",
      "tests/test_commonmark.py::TestCommonMark::test_lists_322",
      "tests/test_commonmark.py::TestCommonMark::test_lists_323",
      "tests/test_commonmark.py::TestCommonMark::test_lists_324",
      "tests/test_commonmark.py::TestCommonMark::test_lists_325",
      "tests/test_commonmark.py::TestCommonMark::test_lists_326",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_219",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_220",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_221",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_222",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_223",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_224",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_225",
      "tests/test_commonmark.py::TestCommonMark::test_paragraphs_226",
      "tests/test_commonmark.py::TestCommonMark::test_precedence_042",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_612",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_613",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_614",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_615",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_616",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_617",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_618",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_619",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_620",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_621",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_622",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_623",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_624",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_625",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_626",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_627",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_628",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_629",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_630",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_631",
      "tests/test_commonmark.py::TestCommonMark::test_raw_html_632",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_080",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_081",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_082",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_083",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_084",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_085",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_086",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_087",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_088",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_089",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_090",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_091",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_092",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_094",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_095",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_096",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_097",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_098",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_099",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_100",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_101",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_102",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_103",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_104",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_105",
      "tests/test_commonmark.py::TestCommonMark::test_setext_headings_106",
      "tests/test_commonmark.py::TestCommonMark::test_soft_line_breaks_648",
      "tests/test_commonmark.py::TestCommonMark::test_soft_line_breaks_649",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_001",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_002",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_003",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_004",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_005",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_006",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_007",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_008",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_009",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_010",
      "tests/test_commonmark.py::TestCommonMark::test_tabs_011",
      "tests/test_commonmark.py::TestCommonMark::test_textual_content_650",
      "tests/test_commonmark.py::TestCommonMark::test_textual_content_651",
      "tests/test_commonmark.py::TestCommonMark::test_textual_content_652",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_043",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_044",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_045",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_046",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_047",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_048",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_049",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_050",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_051",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_052",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_053",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_054",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_055",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_056",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_057",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_058",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_059",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_060",
      "tests/test_commonmark.py::TestCommonMark::test_thematic_breaks_061",
      "tests/test_directives.py::TestDirective_rst_admonition::test_admonition_001",
      "tests/test_directives.py::TestDirective_rst_admonition::test_admonition_002",
      "tests/test_directives.py::TestDirective_rst_admonition::test_admonition_003",
      "tests/test_directives.py::TestDirective_rst_admonition::test_admonition_004",
      "tests/test_directives.py::TestDirective_rst_toc::test_collapse_toc_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_invalid_option_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_invalid_option_002",
      "tests/test_directives.py::TestDirective_rst_toc::test_invalid_option_003",
      "tests/test_directives.py::TestDirective_rst_toc::test_no_toc_001",
      "tests/test_directives.py::TestDirective_rst_toc::test_no_toc_002",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_001",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_002",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_003",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_004",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_005",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_006",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_007",
      "tests/test_directives.py::TestDirective_fenced_admonition::test_admonition_008",
      "tests/test_directives.py::TestDirective_fenced_toc::test_invalid_option_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_invalid_option_002",
      "tests/test_directives.py::TestDirective_fenced_toc::test_invalid_option_003",
      "tests/test_directives.py::TestDirective_fenced_toc::test_no_toc_001",
      "tests/test_directives.py::TestDirective_fenced_toc::test_no_toc_002",
      "tests/test_directives.py::TestDirective_fenced_image::test_align_options_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_align_options_002",
      "tests/test_directives.py::TestDirective_fenced_image::test_all_options_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_alt_option_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_ampersand_in_source_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_ampersand_in_target_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_no_options_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_target_option_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_width_and_height_001",
      "tests/test_directives.py::TestDirective_fenced_image::test_width_and_height_002",
      "tests/test_directives.py::TestDirective_fenced_figure::test_align_options_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_align_options_002",
      "tests/test_directives.py::TestDirective_fenced_figure::test_all_options_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_alt_option_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_caption_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_legend_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_legend_002",
      "tests/test_directives.py::TestDirective_fenced_figure::test_no_options_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_target_option_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_width_and_height_001",
      "tests/test_directives.py::TestDirective_fenced_figure::test_width_and_height_002",
      "tests/test_directives.py::TestDirective_fenced_figure::test_width_and_height_003",
      "tests/test_directives.py::TestCustomizeToc::test_colon_fenced_toc",
      "tests/test_directives.py::TestCustomizeToc::test_fenced_toc",
      "tests/test_directives.py::TestCustomizeToc::test_rst_toc",
      "tests/test_directives.py::TestDirectiveInclude::test_html_include",
      "tests/test_directives.py::TestDirectiveInclude::test_include_missing_source",
      "tests/test_hooks.py::TestTocHook::test_complex_toc_001",
      "tests/test_hooks.py::TestTocHook::test_customize_heading_id_func",
      "tests/test_hooks.py::TestTocHook::test_html_in_heading_001",
      "tests/test_hooks.py::TestTocHook::test_insane_toc_001",
      "tests/test_hooks.py::TestTocHook::test_insane_toc_002",
      "tests/test_hooks.py::TestTocHook::test_link_in_heading_001",
      "tests/test_hooks.py::TestTocHook::test_simple_toc_001",
      "tests/test_misc.py::TestMiscCases::test_allow_data_protocols",
      "tests/test_misc.py::TestMiscCases::test_allow_harmful_protocols",
      "tests/test_misc.py::TestMiscCases::test_ast_output",
      "tests/test_misc.py::TestMiscCases::test_ast_url",
      "tests/test_misc.py::TestMiscCases::test_before_parse_hooks",
      "tests/test_misc.py::TestMiscCases::test_emsp",
      "tests/test_misc.py::TestMiscCases::test_escape_html",
      "tests/test_misc.py::TestMiscCases::test_hard_wrap",
      "tests/test_misc.py::TestMiscCases::test_harmful_links",
      "tests/test_misc.py::TestMiscCases::test_html_tag_text_following_list",
      "tests/test_misc.py::TestMiscCases::test_markdown_func",
      "tests/test_misc.py::TestMiscCases::test_none",
      "tests/test_misc.py::TestMiscCases::test_ref_link",
      "tests/test_misc.py::TestMiscCases::test_use_plugin",
      "tests/test_plugins.py::TestPlugin1_url::test_url_plugin_001",
      "tests/test_plugins.py::TestPlugin1_url::test_url_plugin_002",
      "tests/test_plugins.py::TestPlugin1_url::test_url_plugin_003",
      "tests/test_plugins.py::TestPlugin2_url::test_url_plugin_001",
      "tests/test_plugins.py::TestPlugin2_url::test_url_plugin_002",
      "tests/test_plugins.py::TestPlugin2_url::test_url_plugin_003",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_001",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_002",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_003",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_004",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_005",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_006",
      "tests/test_plugins.py::TestPlugin1_strikethrough::test_strikethrough_007",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_001",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_002",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_003",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_004",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_005",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_006",
      "tests/test_plugins.py::TestPlugin2_strikethrough::test_strikethrough_007",
      "tests/test_plugins.py::TestPlugin1_mark::test_escape_mark_001",
      "tests/test_plugins.py::TestPlugin1_mark::test_escape_mark_002",
      "tests/test_plugins.py::TestPlugin1_mark::test_mark_001",
      "tests/test_plugins.py::TestPlugin1_mark::test_mark_link_001",
      "tests/test_plugins.py::TestPlugin1_mark::test_mark_link_002",
      "tests/test_plugins.py::TestPlugin1_mark::test_normal_mark_001",
      "tests/test_plugins.py::TestPlugin1_mark::test_normal_mark_002",
      "tests/test_plugins.py::TestPlugin1_mark::test_normal_mark_003",
      "tests/test_plugins.py::TestPlugin1_mark::test_normal_mark_004",
      "tests/test_plugins.py::TestPlugin2_mark::test_escape_mark_001",
      "tests/test_plugins.py::TestPlugin2_mark::test_escape_mark_002",
      "tests/test_plugins.py::TestPlugin2_mark::test_mark_001",
      "tests/test_plugins.py::TestPlugin2_mark::test_mark_link_001",
      "tests/test_plugins.py::TestPlugin2_mark::test_mark_link_002",
      "tests/test_plugins.py::TestPlugin2_mark::test_normal_mark_001",
      "tests/test_plugins.py::TestPlugin2_mark::test_normal_mark_002",
      "tests/test_plugins.py::TestPlugin2_mark::test_normal_mark_003",
      "tests/test_plugins.py::TestPlugin2_mark::test_normal_mark_004",
      "tests/test_plugins.py::TestPlugin1_insert::test_escape_insert_001",
      "tests/test_plugins.py::TestPlugin1_insert::test_escape_insert_002",
      "tests/test_plugins.py::TestPlugin1_insert::test_insert_001",
      "tests/test_plugins.py::TestPlugin1_insert::test_insert_link_001",
      "tests/test_plugins.py::TestPlugin1_insert::test_insert_link_002",
      "tests/test_plugins.py::TestPlugin1_insert::test_normal_insert_001",
      "tests/test_plugins.py::TestPlugin1_insert::test_normal_insert_002",
      "tests/test_plugins.py::TestPlugin1_insert::test_normal_insert_003",
      "tests/test_plugins.py::TestPlugin1_insert::test_normal_insert_004",
      "tests/test_plugins.py::TestPlugin2_insert::test_escape_insert_001",
      "tests/test_plugins.py::TestPlugin2_insert::test_escape_insert_002",
      "tests/test_plugins.py::TestPlugin2_insert::test_insert_001",
      "tests/test_plugins.py::TestPlugin2_insert::test_insert_link_001",
      "tests/test_plugins.py::TestPlugin2_insert::test_insert_link_002",
      "tests/test_plugins.py::TestPlugin2_insert::test_normal_insert_001",
      "tests/test_plugins.py::TestPlugin2_insert::test_normal_insert_002",
      "tests/test_plugins.py::TestPlugin2_insert::test_normal_insert_003",
      "tests/test_plugins.py::TestPlugin2_insert::test_normal_insert_004",
      "tests/test_plugins.py::TestPlugin1_superscript::test_superscript_001",
      "tests/test_plugins.py::TestPlugin1_superscript::test_superscript_002",
      "tests/test_plugins.py::TestPlugin1_superscript::test_superscript_003",
      "tests/test_plugins.py::TestPlugin1_superscript::test_superscript_004",
      "tests/test_plugins.py::TestPlugin2_superscript::test_superscript_001",
      "tests/test_plugins.py::TestPlugin2_superscript::test_superscript_002",
      "tests/test_plugins.py::TestPlugin2_superscript::test_superscript_003",
      "tests/test_plugins.py::TestPlugin2_superscript::test_superscript_004",
      "tests/test_plugins.py::TestPlugin1_subscript::test_subscript_001",
      "tests/test_plugins.py::TestPlugin1_subscript::test_subscript_002",
      "tests/test_plugins.py::TestPlugin1_subscript::test_subscript_003",
      "tests/test_plugins.py::TestPlugin1_subscript::test_subscript_004",
      "tests/test_plugins.py::TestPlugin2_subscript::test_subscript_001",
      "tests/test_plugins.py::TestPlugin2_subscript::test_subscript_002",
      "tests/test_plugins.py::TestPlugin2_subscript::test_subscript_003",
      "tests/test_plugins.py::TestPlugin2_subscript::test_subscript_004",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_001",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_002",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_003",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_004",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_005",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_006",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_007",
      "tests/test_plugins.py::TestPlugin1_task_lists::test_task_lists_008",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_001",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_002",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_003",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_004",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_005",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_006",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_007",
      "tests/test_plugins.py::TestPlugin2_task_lists::test_task_lists_008",
      "tests/test_plugins.py::TestPlugin1_table::test_align_table_001",
      "tests/test_plugins.py::TestPlugin1_table::test_align_table_002",
      "tests/test_plugins.py::TestPlugin1_table::test_misc_table_001",
      "tests/test_plugins.py::TestPlugin1_table::test_misc_table_002",
      "tests/test_plugins.py::TestPlugin1_table::test_misc_table_003",
      "tests/test_plugins.py::TestPlugin1_table::test_mismatch_length_001",
      "tests/test_plugins.py::TestPlugin1_table::test_mismatch_length_002",
      "tests/test_plugins.py::TestPlugin1_table::test_mismatch_length_003",
      "tests/test_plugins.py::TestPlugin1_table::test_mismatch_length_004",
      "tests/test_plugins.py::TestPlugin1_table::test_nptable_001",
      "tests/test_plugins.py::TestPlugin1_table::test_table_001",
      "tests/test_plugins.py::TestPlugin1_table::test_table_002",
      "tests/test_plugins.py::TestPlugin2_table::test_align_table_001",
      "tests/test_plugins.py::TestPlugin2_table::test_align_table_002",
      "tests/test_plugins.py::TestPlugin2_table::test_misc_table_001",
      "tests/test_plugins.py::TestPlugin2_table::test_misc_table_002",
      "tests/test_plugins.py::TestPlugin2_table::test_misc_table_003",
      "tests/test_plugins.py::TestPlugin2_table::test_mismatch_length_001",
      "tests/test_plugins.py::TestPlugin2_table::test_mismatch_length_002",
      "tests/test_plugins.py::TestPlugin2_table::test_mismatch_length_003",
      "tests/test_plugins.py::TestPlugin2_table::test_mismatch_length_004",
      "tests/test_plugins.py::TestPlugin2_table::test_nptable_001",
      "tests/test_plugins.py::TestPlugin2_table::test_table_001",
      "tests/test_plugins.py::TestPlugin2_table::test_table_002",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_001",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_002",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_003",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_004",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_005",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_lists_006",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_with_multiple_lines_001",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_with_multiple_lines_002",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_with_multiple_lines_003",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_with_multiple_lines_004",
      "tests/test_plugins.py::TestPlugin1_def_list::test_definition_with_multiple_lines_005",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_001",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_002",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_003",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_004",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_005",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_lists_006",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_with_multiple_lines_001",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_with_multiple_lines_002",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_with_multiple_lines_003",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_with_multiple_lines_004",
      "tests/test_plugins.py::TestPlugin2_def_list::test_definition_with_multiple_lines_005",
      "tests/test_plugins.py::TestPlugin1_footnotes::test_footnotes_001",
      "tests/test_plugins.py::TestPlugin1_footnotes::test_footnotes_002",
      "tests/test_plugins.py::TestPlugin1_footnotes::test_footnotes_003",
      "tests/test_plugins.py::TestPlugin2_footnotes::test_footnotes_001",
      "tests/test_plugins.py::TestPlugin2_footnotes::test_footnotes_002",
      "tests/test_plugins.py::TestPlugin2_footnotes::test_footnotes_003",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_001",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_002",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_003",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_004",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_005",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_006",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_007",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_008",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_009",
      "tests/test_plugins.py::TestPlugin1_abbr::test_abbreviation_010",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_001",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_002",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_003",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_004",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_005",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_006",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_007",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_008",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_009",
      "tests/test_plugins.py::TestPlugin2_abbr::test_abbreviation_010",
      "tests/test_plugins.py::TestPlugin1_math::test_block_math_001",
      "tests/test_plugins.py::TestPlugin1_math::test_block_math_002",
      "tests/test_plugins.py::TestPlugin1_math::test_block_math_003",
      "tests/test_plugins.py::TestPlugin1_math::test_block_math_004",
      "tests/test_plugins.py::TestPlugin1_math::test_inline_math_001",
      "tests/test_plugins.py::TestPlugin2_math::test_block_math_001",
      "tests/test_plugins.py::TestPlugin2_math::test_block_math_002",
      "tests/test_plugins.py::TestPlugin2_math::test_block_math_003",
      "tests/test_plugins.py::TestPlugin2_math::test_block_math_004",
      "tests/test_plugins.py::TestPlugin2_math::test_inline_math_001",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_splits_001",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_splits_002",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_with_link_001",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_with_link_002",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_with_link_003",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_without_link_001",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_without_link_002",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_without_link_003",
      "tests/test_plugins.py::TestPlugin1_ruby::test_ruby_without_link_004",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_splits_001",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_splits_002",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_with_link_001",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_with_link_002",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_with_link_003",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_without_link_001",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_without_link_002",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_without_link_003",
      "tests/test_plugins.py::TestPlugin2_ruby::test_ruby_without_link_004",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_block_spoiler_001",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_block_spoiler_002",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_block_spoiler_003",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_block_spoiler_004",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_block_spoiler_005",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_inline_spoiler_001",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_inline_spoiler_002",
      "tests/test_plugins.py::TestPlugin1_spoiler::test_inline_spoiler_003",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_block_spoiler_001",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_block_spoiler_002",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_block_spoiler_003",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_block_spoiler_004",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_block_spoiler_005",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_inline_spoiler_001",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_inline_spoiler_002",
      "tests/test_plugins.py::TestPlugin2_spoiler::test_inline_spoiler_003",
      "tests/test_plugins.py::TestExtraPlugins::test_math_in_list",
      "tests/test_plugins.py::TestExtraPlugins::test_math_in_quote",
      "tests/test_plugins.py::TestExtraPlugins::test_table_in_list",
      "tests/test_plugins.py::TestExtraPlugins::test_table_in_quote",
      "tests/test_renderers.py::TestRendererRst::test_code_001",
      "tests/test_renderers.py::TestRendererRst::test_code_002",
      "tests/test_renderers.py::TestRendererRst::test_heading_001",
      "tests/test_renderers.py::TestRendererRst::test_html_001",
      "tests/test_renderers.py::TestRendererRst::test_images_001",
      "tests/test_renderers.py::TestRendererRst::test_images_002",
      "tests/test_renderers.py::TestRendererRst::test_images_003",
      "tests/test_renderers.py::TestRendererRst::test_inline_001",
      "tests/test_renderers.py::TestRendererRst::test_inline_002",
      "tests/test_renderers.py::TestRendererRst::test_line_break_001",
      "tests/test_renderers.py::TestRendererRst::test_links_001",
      "tests/test_renderers.py::TestRendererRst::test_list_001",
      "tests/test_renderers.py::TestRendererRst::test_list_002",
      "tests/test_renderers.py::TestRendererRst::test_list_003",
      "tests/test_renderers.py::TestRendererRst::test_list_004",
      "tests/test_renderers.py::TestRendererRst::test_list_005",
      "tests/test_renderers.py::TestRendererRst::test_quote_001",
      "tests/test_renderers.py::TestRendererRst::test_quote_002",
      "tests/test_renderers.py::TestRendererRst::test_quote_003",
      "tests/test_renderers.py::TestRendererRst::test_thematic_break_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_code_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_code_002",
      "tests/test_renderers.py::TestRendererMarkdown::test_code_003",
      "tests/test_renderers.py::TestRendererMarkdown::test_code_004",
      "tests/test_renderers.py::TestRendererMarkdown::test_code_005",
      "tests/test_renderers.py::TestRendererMarkdown::test_heading_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_html_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_images_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_inline_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_linebreak_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_links_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_links_002",
      "tests/test_renderers.py::TestRendererMarkdown::test_links_003",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_002",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_003",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_004",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_005",
      "tests/test_renderers.py::TestRendererMarkdown::test_list_006",
      "tests/test_renderers.py::TestRendererMarkdown::test_quote_001",
      "tests/test_renderers.py::TestRendererMarkdown::test_quote_002",
      "tests/test_renderers.py::TestRendererMarkdown::test_thematic_break_001",
      "tests/test_syntax.py::TestSyntax::test_emphasis_001",
      "tests/test_syntax.py::TestSyntax::test_image_001",
      "tests/test_syntax.py::TestSyntax::test_link_001",
      "tests/test_syntax.py::TestSyntax::test_link_002",
      "tests/test_syntax.py::TestSyntax::test_link_003",
      "tests/test_syntax.py::TestSyntax::test_links_001",
      "tests/test_syntax.py::TestSyntax::test_links_002",
      "tests/test_syntax.py::TestSyntax::test_max_depth_001",
      "tests/test_syntax.py::TestSyntax::test_max_depth_002",
      "tests/test_syntax.py::TestSyntax::test_non_aggressive_emphasis_001",
      "tests/test_syntax.py::TestSyntax::test_non_aggressive_emphasis_002",
      "tests/test_syntax.py::TestSyntax::test_non_aggressive_emphasis_003",
      "tests/test_syntax.py::TestSyntax::test_setext_headings_001",
      "tests/test_syntax.py::TestSyntax::test_setext_headings_002"
    ],
    "created_at": "2025-06-19T18:37:29.521140",
    "image_name": "swesmith.x86_64.lepture__mistune.bf54ef67",
    "base_commit": "main",
    "problem_statement": "Heading IDs keep growing across documents when using the `{toc}` directive\n--------------------------------------------------------------------------\n\nWhile wiring `mistune` into a little static-site generator I noticed that every time I render *another* markdown file in the **same Python process**, the anchor names produced by the TOC directive keep increasing instead of starting again at `toc_1`.\n\nMinimal reproduction\n--------------------\n\n```python\nfrom mistune import create_markdown\nfrom mistune.directives import DirectiveToc   # shipped helper\n\nmd = create_markdown(plugins=[DirectiveToc()])\n\ndoc_a = \"\"\"\n# Alpha\n\n```{toc}\n```\n\"\"\"\n\ndoc_b = \"\"\"\n# Beta\n\n```{toc}\n```\n\"\"\"\n\nprint(\"---- first render ----\")\nprint(md(doc_a))\nprint(\"---- second render ----\")\nprint(md(doc_b))\n```\n\nCurrent output (abridged):\n\n```\n---- first render ----\n<h1 id=\"toc_1\">Alpha</h1>\n<ul>\n<li><a href=\"#toc_1\">Alpha</a></li>\n</ul>\n\n---- second render ----\n<h1 id=\"toc_2\">Beta</h1>\n<ul>\n<li><a href=\"#toc_2\">Beta</a></li>\n</ul>\n```\n\nNotice how the second file starts at `toc_2` even though, inside that page, no heading with id `toc_1` exists.  \nBecause the links inside the TOC always point to the *first* occurrence, they are now broken (the browser jumps to the top of the page).\n\nWhy it matters\n--------------\n\n\u2022 Building multi-page documentation in one process (e.g. Sphinx, MkDocs, custom scripts) yields invalid internal links on every page after the first.  \n\u2022 Server-side rendering in a web app shows the same behaviour if multiple markdown strings are rendered over the lifetime of the process.\n\nThe regression seems to come from `mistune/directives/toc.py::TableOfContents.generate_heading_id` keeping a persistent counter.\n\nIt would be great if each `TableOfContents` instance \u2013 or at least each render \u2013 started counting from 1 again so every page is self-contained."
  },
  {
    "instance_id": "paramiko__paramiko.23f92003.sweagent_buggen__b9eb8cfc",
    "repo": "swesmith/paramiko__paramiko.23f92003",
    "patch": "diff --git a/paramiko/client.py b/paramiko/client.py\nindex d8be9108..74f490cd 100644\n--- a/paramiko/client.py\n+++ b/paramiko/client.py\n@@ -144,9 +144,13 @@ class SSHClient(ClosingContextManager):\n         with open(filename, \"w\") as f:\n             for hostname, keys in self._host_keys.items():\n                 for keytype, key in keys.items():\n+\n+                    clean_host = hostname\n+                    if hostname.startswith(\"[\") and \"]\" in hostname:\n+                        clean_host = hostname.strip(\"[]\")\n                     f.write(\n                         \"{} {} {}\\n\".format(\n-                            hostname, keytype, key.get_base64()\n+                            clean_host, keytype, key.get_base64()\n                         )\n                     )\n \n",
    "FAIL_TO_PASS": [
      "tests/test_client.py::SSHClientTest::test_save_host_keys"
    ],
    "PASS_TO_PASS": [
      "tests/agent.py::AgentKey_::str_is_repr",
      "tests/agent.py::AgentKey_::init::needs_at_least_two_arguments",
      "tests/agent.py::AgentKey_::init::sets_attributes_and_parses_blob",
      "tests/agent.py::AgentKey_::init::comment_optional",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[rsa]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[rsa]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[rsa]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[rsa]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[rsa]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[rsa]",
      "tests/pkey.py::PKey_::fingerprint[rsa]",
      "tests/pkey.py::PKey_::algorithm_name[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[rsa]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[dss]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[dss]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[dss]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[dss]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[dss]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[dss]",
      "tests/pkey.py::PKey_::fingerprint[dss]",
      "tests/pkey.py::PKey_::algorithm_name[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[dss]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[ed25519]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[ed25519]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[ed25519]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[ed25519]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[ed25519]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[ed25519]",
      "tests/pkey.py::PKey_::fingerprint[ed25519]",
      "tests/pkey.py::PKey_::algorithm_name[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[ed25519]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[ecdsa-256]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[ecdsa-256]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[ecdsa-256]",
      "tests/pkey.py::PKey_::fingerprint[ecdsa-256]",
      "tests/pkey.py::PKey_::algorithm_name[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[ecdsa-256]",
      "tests/agent.py::AgentKey_::fields::defaults_to_get_name_and_blob",
      "tests/agent.py::AgentKey_::get_bits::defaults_to_superclass_implementation",
      "tests/agent.py::AgentKey_::asbytes::defaults_to_owned_blob",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs0-0]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs1-2]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs2-4]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs3-2]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs4-4]",
      "tests/auth.py::AuthHandler_::bad_auth_type",
      "tests/auth.py::AuthHandler_::bad_password",
      "tests/auth.py::AuthHandler_::multipart_auth",
      "tests/auth.py::AuthHandler_::interactive_auth",
      "tests/auth.py::AuthHandler_::interactive_fallback",
      "tests/auth.py::AuthHandler_::utf8",
      "tests/auth.py::AuthHandler_::non_utf8",
      "tests/auth.py::AuthHandler_::auth_exception_when_disconnected",
      "tests/auth.py::AuthHandler_::non_responsive_triggers_auth_exception",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::key_type_algo_selected_when_no_server_sig_algs",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::key_type_algo_selection_is_cert_suffix_aware",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::uses_first_preferred_algo_if_key_type_not_in_list",
      "tests/auth.py::SHA2SignaturePubkeys::pubkey_auth_honors_disabled_algorithms",
      "tests/auth.py::SHA2SignaturePubkeys::client_sha2_disabled_server_sha1_disabled_no_match",
      "tests/auth.py::SHA2SignaturePubkeys::client_sha1_disabled_server_sha2_disabled_no_match",
      "tests/auth.py::SHA2SignaturePubkeys::ssh_rsa_still_used_when_sha2_disabled",
      "tests/auth.py::SHA2SignaturePubkeys::first_client_preferred_algo_used_when_no_server_sig_algs",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_512",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_256",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_256_when_client_only_enables_256",
      "tests/auth.py::AuthSource_::base_class::init_requires_and_saves_username",
      "tests/auth.py::AuthSource_::base_class::dunder_repr_delegates_to_helper",
      "tests/auth.py::AuthSource_::base_class::repr_helper_prints_basic_kv_pairs",
      "tests/auth.py::AuthSource_::base_class::authenticate_takes_transport_and_is_abstract",
      "tests/auth.py::AuthSource_::NoneAuth_::authenticate_auths_none",
      "tests/auth.py::AuthSource_::NoneAuth_::repr_shows_class",
      "tests/auth.py::AuthSource_::Password_::init_takes_and_stores_password_getter",
      "tests/auth.py::AuthSource_::Password_::repr_adds_username",
      "tests/auth.py::AuthSource_::Password_::authenticate_gets_and_supplies_password",
      "tests/auth.py::AuthSource_::PrivateKey_::authenticate_calls_publickey_with_pkey",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::init_takes_pkey_object",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::repr_shows_pkey_repr",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::repr_appends_agent_flag_when_AgentKey",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::init_takes_source_path_and_pkey",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::init_requires_specific_value_for_source",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::repr_reflects_source_path_and_pkey",
      "tests/auth.py::AuthResult_::acts_like_list_with_strategy_attribute",
      "tests/auth.py::AuthResult_::repr_is_list_repr_untouched",
      "tests/auth.py::AuthResult_::dunder_str::is_multiline_display_of_sourceresult_tuples",
      "tests/auth.py::AuthResult_::dunder_str::shows_str_not_repr_of_auth_source_and_result",
      "tests/auth.py::AuthResult_::dunder_str::empty_list_result_values_show_success_string",
      "tests/auth.py::AuthFailure_::is_an_AuthenticationException",
      "tests/auth.py::AuthFailure_::init_requires_result",
      "tests/auth.py::AuthFailure_::str_is_newline_plus_result_str",
      "tests/auth.py::AuthStrategy_::init_requires_ssh_config_param_and_sets_up_a_logger",
      "tests/auth.py::AuthStrategy_::get_sources_is_abstract",
      "tests/auth.py::AuthStrategy_::authenticate::requires_and_uses_transport_with_methods_returning_result",
      "tests/auth.py::AuthStrategy_::authenticate::logs_sources_attempted",
      "tests/auth.py::AuthStrategy_::authenticate::raises_AuthFailure_if_no_successes",
      "tests/auth.py::AuthStrategy_::authenticate::short_circuits_on_successful_auth",
      "tests/pkey.py::PKey_::from_path::loads_from_str",
      "tests/pkey.py::PKey_::from_path::expands_user",
      "tests/pkey.py::PKey_::from_path::raises_UnknownKeyType_for_unknown_types",
      "tests/pkey.py::PKey_::from_path::leaves_cryptography_exceptions_untouched",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::existing_cert_loaded_when_given_key_path",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::can_be_given_cert_path_instead",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::no_cert_load_if_no_cert",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::excepts_usefully_if_no_key_only_cert",
      "tests/pkey.py::PKey_::load_certificate::rsa_public_cert_blobs",
      "tests/pkey.py::PKey_::load_certificate::loading_cert_of_different_type_from_key_raises_ValueError",
      "tests/pkey.py::PKey_::identifiers_classmethods::default_is_class_name_attribute",
      "tests/pkey.py::PKey_::identifiers_classmethods::rsa_is_all_combos_of_cert_and_sha_type",
      "tests/pkey.py::PKey_::identifiers_classmethods::dss_is_protocol_name",
      "tests/pkey.py::PKey_::identifiers_classmethods::ed25519_is_protocol_name",
      "tests/pkey.py::PKey_::identifiers_classmethods::ecdsa_is_all_curve_names",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_buffered_pipe",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_close_while_reading",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_delay",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_or_pipe",
      "tests/test_channelfile.py::TestChannelFile::test_defaults_to_unbuffered_reading",
      "tests/test_channelfile.py::TestChannelFile::test_can_override_mode_and_bufsize",
      "tests/test_channelfile.py::TestChannelFile::test_read_recvs_from_channel",
      "tests/test_channelfile.py::TestChannelFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStderrFile::test_read_calls_channel_recv_stderr",
      "tests/test_channelfile.py::TestChannelStderrFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStdinFile::test_defaults_to_unbuffered_reading",
      "tests/test_channelfile.py::TestChannelStdinFile::test_can_override_mode_and_bufsize",
      "tests/test_channelfile.py::TestChannelStdinFile::test_read_recvs_from_channel",
      "tests/test_channelfile.py::TestChannelStdinFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStdinFile::test_close_calls_channel_shutdown_write",
      "tests/test_client.py::SSHClientTest::test_auth_timeout",
      "tests/test_client.py::SSHClientTest::test_auth_trickledown",
      "tests/test_client.py::SSHClientTest::test_auto_add_policy",
      "tests/test_client.py::SSHClientTest::test_banner_timeout",
      "tests/test_client.py::SSHClientTest::test_certs_allowed_as_key_filename_values",
      "tests/test_client.py::SSHClientTest::test_certs_implicitly_loaded_alongside_key_filename_keys",
      "tests/test_client.py::SSHClientTest::test_channel_timeout",
      "tests/test_client.py::SSHClientTest::test_cleanup",
      "tests/test_client.py::SSHClientTest::test_client",
      "tests/test_client.py::SSHClientTest::test_client_can_be_used_as_context_manager",
      "tests/test_client.py::SSHClientTest::test_client_dsa",
      "tests/test_client.py::SSHClientTest::test_client_ecdsa",
      "tests/test_client.py::SSHClientTest::test_client_ed25519",
      "tests/test_client.py::SSHClientTest::test_client_rsa",
      "tests/test_client.py::SSHClientTest::test_closes_socket_on_socket_errors",
      "tests/test_client.py::SSHClientTest::test_default_key_locations_trigger_cert_loads_if_found",
      "tests/test_client.py::SSHClientTest::test_disabled_algorithms_defaults_to_None",
      "tests/test_client.py::SSHClientTest::test_disabled_algorithms_passed_directly_if_given",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_1",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_2",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_3",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_4",
      "tests/test_client.py::SSHClientTest::test_missing_key_policy_accepts_classes_or_instances",
      "tests/test_client.py::SSHClientTest::test_multiple_key_files",
      "tests/test_client.py::SSHClientTest::test_multiple_key_files_failure",
      "tests/test_client.py::SSHClientTest::test_newer_openssh_uses_rsa_sha2_for_certs_not_ssh_rsa",
      "tests/test_client.py::SSHClientTest::test_old_openssh_needs_ssh_rsa_for_certs_not_rsa_sha2",
      "tests/test_client.py::SSHClientTest::test_reject_policy",
      "tests/test_client.py::SSHClientTest::test_transport_factory_defaults_to_Transport",
      "tests/test_client.py::SSHClientTest::test_transport_factory_may_be_specified",
      "tests/test_client.py::SSHClientTest::test_update_environment",
      "tests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_not_used_for_password_auth",
      "tests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_used_for_key_passphrase",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_not_used_for_passphrase_when_passphrase_kwarg_given",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_used_for_passphrase_when_no_passphrase_kwarg_given",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_works_for_password_auth",
      "tests/test_config.py::TestSSHConfig::test_init",
      "tests/test_config.py::TestSSHConfig::test_from_text",
      "tests/test_config.py::TestSSHConfig::test_from_file",
      "tests/test_config.py::TestSSHConfig::test_from_path",
      "tests/test_config.py::TestSSHConfig::test_parse_config",
      "tests/test_config.py::TestSSHConfig::test_host_config[irc.danger.com-values0]",
      "tests/test_config.py::TestSSHConfig::test_host_config[irc.example.com-values1]",
      "tests/test_config.py::TestSSHConfig::test_host_config[spoo.example.com-values2]",
      "tests/test_config.py::TestSSHConfig::test_fabric_issue_33",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_config_equals_parsing",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_interpolation",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_tilde_expansion",
      "tests/test_config.py::TestSSHConfig::test_proxyjump_token_expansion",
      "tests/test_config.py::TestSSHConfig::test_controlpath_token_expansion",
      "tests/test_config.py::TestSSHConfig::test_negation",
      "tests/test_config.py::TestSSHConfig::test_proxycommand",
      "tests/test_config.py::TestSSHConfig::test_identityfile",
      "tests/test_config.py::TestSSHConfig::test_config_addressfamily_and_lazy_fqdn",
      "tests/test_config.py::TestSSHConfig::test_config_dos_crlf_succeeds",
      "tests/test_config.py::TestSSHConfig::test_get_hostnames",
      "tests/test_config.py::TestSSHConfig::test_quoted_host_names",
      "tests/test_config.py::TestSSHConfig::test_quoted_params_in_config",
      "tests/test_config.py::TestSSHConfig::test_quoted_host_in_config",
      "tests/test_config.py::TestSSHConfig::test_invalid_line_format_excepts",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_none_issue_415",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_none_masking",
      "tests/test_config.py::TestSSHConfig::test_hostname_tokenization",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_empty",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_from_list",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_from_dict",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[yes]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[YES]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[Yes]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[True]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[no]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[NO]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[No]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[False]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int[42_0]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int[42_1]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[not",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[None]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[non_int2]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfig_host_dicts_are_SSHConfigDict_instances",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfig_wildcard_host_dicts_are_SSHConfigDict_instances",
      "tests/test_config.py::TestHostnameCanonicalization::test_off_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_explicit_no_same_as_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-always]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-local]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-local-always]",
      "tests/test_config.py::TestHostnameCanonicalization::test_uses_getaddrinfo_when_AddressFamily_given",
      "tests/test_config.py::TestHostnameCanonicalization::test_CanonicalDomains_may_be_set_to_space_separated_list",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_applies_to_single_dot_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_not_applied_to_two_dots_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_hostname_depth_controllable_with_max_dots_directive",
      "tests/test_config.py::TestHostnameCanonicalization::test_max_dots_may_be_zero",
      "tests/test_config.py::TestHostnameCanonicalization::test_fallback_yes_does_not_canonicalize_or_error",
      "tests/test_config.py::TestHostnameCanonicalization::test_fallback_no_causes_errors_for_unresolvable_names",
      "tests/test_config.py::TestHostnameCanonicalization::test_identityfile_continues_being_appended_to",
      "tests/test_config.py::TestMatchAll::test_always_matches",
      "tests/test_config.py::TestMatchAll::test_may_not_mix_with_non_canonical_keywords",
      "tests/test_config.py::TestMatchAll::test_may_come_after_canonical",
      "tests/test_config.py::TestMatchAll::test_may_not_come_before_canonical",
      "tests/test_config.py::TestMatchAll::test_after_canonical_not_loaded_when_non_canonicalized",
      "tests/test_config.py::TestMatchExec::test_raises_invoke_ImportErrors_at_runtime",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[unquoted-rando]",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[quoted-benjamin]",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[quoted",
      "tests/test_config.py::TestMatchExec::test_does_not_match_nonzero_exit_codes",
      "tests/test_config.py::TestMatchExec::test_tokenizes_argument",
      "tests/test_config.py::TestMatchExec::test_works_with_canonical",
      "tests/test_config.py::TestMatchExec::test_may_be_negated",
      "tests/test_config.py::TestMatchExec::test_requires_an_argument",
      "tests/test_config.py::TestMatchExec::test_works_with_tokenized_hostname",
      "tests/test_config.py::TestMatchHost::test_matches_target_name_when_no_hostname",
      "tests/test_config.py::TestMatchHost::test_matches_hostname_from_global_setting",
      "tests/test_config.py::TestMatchHost::test_matches_hostname_from_earlier_match",
      "tests/test_config.py::TestMatchHost::test_may_be_globbed",
      "tests/test_config.py::TestMatchHost::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchHost::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchHost::test_matches_canonicalized_name",
      "tests/test_config.py::TestMatchHost::test_works_with_canonical_keyword",
      "tests/test_config.py::TestMatchHost::test_may_be_negated",
      "tests/test_config.py::TestMatchHost::test_requires_an_argument",
      "tests/test_config.py::TestMatchOriginalHost::test_matches_target_host_not_hostname",
      "tests/test_config.py::TestMatchOriginalHost::test_matches_target_host_not_canonicalized_name",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_globbed",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchOriginalHost::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_negated",
      "tests/test_config.py::TestMatchOriginalHost::test_requires_an_argument",
      "tests/test_config.py::TestMatchUser::test_matches_configured_username",
      "tests/test_config.py::TestMatchUser::test_matches_local_username_by_default",
      "tests/test_config.py::TestMatchUser::test_may_be_globbed",
      "tests/test_config.py::TestMatchUser::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchUser::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchUser::test_may_be_negated",
      "tests/test_config.py::TestMatchUser::test_requires_an_argument",
      "tests/test_config.py::TestMatchLocalUser::test_matches_local_username",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_globbed",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchLocalUser::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_negated",
      "tests/test_config.py::TestMatchLocalUser::test_requires_an_argument",
      "tests/test_config.py::TestComplexMatching::test_originalhost_host",
      "tests/test_config.py::TestComplexMatching::test_originalhost_localuser",
      "tests/test_config.py::TestComplexMatching::test_everything_but_all",
      "tests/test_config.py::TestComplexMatching::test_everything_but_all_with_some_negated",
      "tests/test_config.py::TestComplexMatching::test_negated_canonical",
      "tests/test_config.py::TestFinalMatching::test_finally",
      "tests/test_config.py::TestFinalMatching::test_default_port",
      "tests/test_config.py::TestFinalMatching::test_negated",
      "tests/test_file.py::BufferedFileTest::test_buffering_flushes",
      "tests/test_file.py::BufferedFileTest::test_flush",
      "tests/test_file.py::BufferedFileTest::test_lf",
      "tests/test_file.py::BufferedFileTest::test_read_all",
      "tests/test_file.py::BufferedFileTest::test_readable",
      "tests/test_file.py::BufferedFileTest::test_readinto",
      "tests/test_file.py::BufferedFileTest::test_readline",
      "tests/test_file.py::BufferedFileTest::test_simple",
      "tests/test_file.py::BufferedFileTest::test_writable",
      "tests/test_file.py::BufferedFileTest::test_write",
      "tests/test_file.py::BufferedFileTest::test_write_bad_type",
      "tests/test_file.py::BufferedFileTest::test_write_bytearray",
      "tests/test_file.py::BufferedFileTest::test_write_memoryview",
      "tests/test_file.py::BufferedFileTest::test_write_unicode_as_binary",
      "tests/test_hostkeys.py::HostKeysTest::test_add",
      "tests/test_hostkeys.py::HostKeysTest::test_delitem",
      "tests/test_hostkeys.py::HostKeysTest::test_dict",
      "tests/test_hostkeys.py::HostKeysTest::test_dict_set",
      "tests/test_hostkeys.py::HostKeysTest::test_entry_delitem",
      "tests/test_hostkeys.py::HostKeysTest::test_load",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_add",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_delitem",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_dict",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_dict_set",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_entry_delitem",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_load",
      "tests/test_kex.py::KexTest::test_gex_client",
      "tests/test_kex.py::KexTest::test_gex_old_client",
      "tests/test_kex.py::KexTest::test_gex_server",
      "tests/test_kex.py::KexTest::test_gex_server_with_old_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_old_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_server",
      "tests/test_kex.py::KexTest::test_gex_sha256_server_with_old_client",
      "tests/test_kex.py::KexTest::test_group1_client",
      "tests/test_kex.py::KexTest::test_group1_server",
      "tests/test_kex.py::KexTest::test_kex_c25519_client",
      "tests/test_kex.py::KexTest::test_kex_c25519_server",
      "tests/test_kex.py::KexTest::test_kex_group14_sha256_client",
      "tests/test_kex.py::KexTest::test_kex_group14_sha256_server",
      "tests/test_kex.py::KexTest::test_kex_group16_sha512_client",
      "tests/test_kex.py::KexTest::test_kex_group16_sha512_server",
      "tests/test_kex.py::KexTest::test_kex_nistp256_client",
      "tests/test_kex.py::KexTest::test_kex_nistp256_server",
      "tests/test_message.py::MessageTest::test_add",
      "tests/test_message.py::MessageTest::test_bytes_str_and_repr",
      "tests/test_message.py::MessageTest::test_decode",
      "tests/test_message.py::MessageTest::test_encode",
      "tests/test_message.py::MessageTest::test_misc",
      "tests/test_packetizer.py::PacketizerTest::test_closed",
      "tests/test_packetizer.py::PacketizerTest::test_read",
      "tests/test_packetizer.py::PacketizerTest::test_write",
      "tests/test_pkey.py::KeyTest::test_compare_dss",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_compare_rsa",
      "tests/test_pkey.py::KeyTest::test_ed25519",
      "tests/test_pkey.py::KeyTest::test_ed25519_compare",
      "tests/test_pkey.py::KeyTest::test_ed25519_funky_padding",
      "tests/test_pkey.py::KeyTest::test_ed25519_funky_padding_with_passphrase",
      "tests/test_pkey.py::KeyTest::test_ed25519_load_from_file_obj",
      "tests/test_pkey.py::KeyTest::test_ed25519_nonbytes_password",
      "tests/test_pkey.py::KeyTest::test_existing_keyfiles_still_work_ok",
      "tests/test_pkey.py::KeyTest::test_generate_dss",
      "tests/test_pkey.py::KeyTest::test_generate_ecdsa",
      "tests/test_pkey.py::KeyTest::test_generate_key_bytes",
      "tests/test_pkey.py::KeyTest::test_generate_rsa",
      "tests/test_pkey.py::KeyTest::test_keyfile_is_actually_encrypted",
      "tests/test_pkey.py::KeyTest::test_load_dss",
      "tests/test_pkey.py::KeyTest::test_load_dss_password",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_256",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_384",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_521",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_transmutes_crypto_exceptions",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_DSS_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_EC_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_RSA_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_RSA_nopad",
      "tests/test_pkey.py::KeyTest::test_load_rsa",
      "tests/test_pkey.py::KeyTest::test_load_rsa_password",
      "tests/test_pkey.py::KeyTest::test_load_rsa_transmutes_crypto_exceptions",
      "tests/test_pkey.py::KeyTest::test_loading_empty_keys_errors_usefully",
      "tests/test_pkey.py::KeyTest::test_loading_openssh_RSA_keys_uses_correct_p_q",
      "tests/test_pkey.py::KeyTest::test_new_keyfiles_avoid_descriptor_race_integration",
      "tests/test_pkey.py::KeyTest::test_new_keyfiles_avoid_file_descriptor_race_on_chmod",
      "tests/test_pkey.py::KeyTest::test_salt_size",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_rsa_sha2_256",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_rsa_sha2_512",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_ssh_rsa",
      "tests/test_pkey.py::KeyTest::test_sign_dss",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_stringification",
      "tests/test_proxy.py::TestProxyCommand::test_init_takes_command_string",
      "tests/test_proxy.py::TestProxyCommand::test_send_writes_to_process_stdin_returning_length",
      "tests/test_proxy.py::TestProxyCommand::test_send_raises_ProxyCommandFailure_on_error",
      "tests/test_proxy.py::TestProxyCommand::test_recv_reads_from_process_stdout_returning_bytes",
      "tests/test_proxy.py::TestProxyCommand::test_recv_returns_buffer_on_timeout_if_any_read",
      "tests/test_proxy.py::TestProxyCommand::test_recv_raises_timeout_if_nothing_read",
      "tests/test_proxy.py::TestProxyCommand::test_recv_raises_ProxyCommandFailure_on_non_timeout_error",
      "tests/test_proxy.py::TestProxyCommand::test_close_kills_subprocess",
      "tests/test_proxy.py::TestProxyCommand::test_closed_exposes_whether_subprocess_has_exited",
      "tests/test_proxy.py::TestProxyCommand::test_timeout_affects_whether_timeout_is_raised",
      "tests/test_proxy.py::TestProxyCommand::test_raises_subprocess_ImportErrors_at_runtime",
      "tests/test_sftp.py::TestSFTP::test_file",
      "tests/test_sftp.py::TestSFTP::test_close",
      "tests/test_sftp.py::TestSFTP::test_sftp_can_be_used_as_context_manager",
      "tests/test_sftp.py::TestSFTP::test_write",
      "tests/test_sftp.py::TestSFTP::test_sftp_file_can_be_used_as_context_manager",
      "tests/test_sftp.py::TestSFTP::test_append",
      "tests/test_sftp.py::TestSFTP::test_rename",
      "tests/test_sftp.py::TestSFTP::testa_posix_rename",
      "tests/test_sftp.py::TestSFTP::test_folder",
      "tests/test_sftp.py::TestSFTP::test_listdir",
      "tests/test_sftp.py::TestSFTP::test_listdir_iter",
      "tests/test_sftp.py::TestSFTP::test_listdir_in_locale",
      "tests/test_sftp.py::TestSFTP::test_setstat",
      "tests/test_sftp.py::TestSFTP::test_fsetstat",
      "tests/test_sftp.py::TestSFTP::test_readline_seek",
      "tests/test_sftp.py::TestSFTP::test_write_seek",
      "tests/test_sftp.py::TestSFTP::test_symlink",
      "tests/test_sftp.py::TestSFTP::test_flush_seek",
      "tests/test_sftp.py::TestSFTP::test_realpath",
      "tests/test_sftp.py::TestSFTP::test_mkdir",
      "tests/test_sftp.py::TestSFTP::test_chdir",
      "tests/test_sftp.py::TestSFTP::test_get_put",
      "tests/test_sftp.py::TestSFTP::test_get_without_prefetch",
      "tests/test_sftp.py::TestSFTP::test_check",
      "tests/test_sftp.py::TestSFTP::test_x_flag",
      "tests/test_sftp.py::TestSFTP::test_utf8",
      "tests/test_sftp.py::TestSFTP::test_utf8_chdir",
      "tests/test_sftp.py::TestSFTP::test_bad_readv",
      "tests/test_sftp.py::TestSFTP::test_put_without_confirm",
      "tests/test_sftp.py::TestSFTP::test_getcwd",
      "tests/test_sftp.py::TestSFTP::test_seek_append",
      "tests/test_sftp.py::TestSFTP::test_putfo_empty_file",
      "tests/test_sftp.py::TestSFTP::test_non_utf8_data",
      "tests/test_sftp.py::TestSFTP::test_sftp_attributes_locale_time",
      "tests/test_sftp.py::TestSFTP::test_sftp_attributes_empty_str",
      "tests/test_sftp.py::TestSFTP::test_write_memoryview",
      "tests/test_sftp_big.py::TestBigSFTP::test_lots_of_files",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_pipelined",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_seek",
      "tests/test_sftp_big.py::TestBigSFTP::test_readv_seek",
      "tests/test_sftp_big.py::TestBigSFTP::test_lots_of_prefetching",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_readv",
      "tests/test_sftp_big.py::TestBigSFTP::test_large_readv",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_big_buffer",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_renegotiate",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_limit",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_multiple_hosts",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_single_host",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_two_hosts",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_pickling",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_BadAuthenticationType",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_BadHostKeyException",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_ChannelException",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_PartialAuthentication",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_ProxyCommandFailure",
      "tests/test_transport.py::TransportTest::test_can_override_packetizer_used",
      "tests/test_transport.py::TransportTest::test_channel_can_be_used_as_context_manager",
      "tests/test_transport.py::TransportTest::test_channel_exception",
      "tests/test_transport.py::TransportTest::test_channel_send_memoryview",
      "tests/test_transport.py::TransportTest::test_channel_send_misc",
      "tests/test_transport.py::TransportTest::test_client_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::TransportTest::test_compression",
      "tests/test_transport.py::TransportTest::test_compute_key",
      "tests/test_transport.py::TransportTest::test_exec_command",
      "tests/test_transport.py::TransportTest::test_exit_status",
      "tests/test_transport.py::TransportTest::test_handshake_timeout",
      "tests/test_transport.py::TransportTest::test_invoke_shell",
      "tests/test_transport.py::TransportTest::test_keepalive",
      "tests/test_transport.py::TransportTest::test_long_banner",
      "tests/test_transport.py::TransportTest::test_port_forwarding",
      "tests/test_transport.py::TransportTest::test_rekey_deadlock",
      "tests/test_transport.py::TransportTest::test_renegotiate",
      "tests/test_transport.py::TransportTest::test_reverse_port_forwarding",
      "tests/test_transport.py::TransportTest::test_sanitze_packet_size",
      "tests/test_transport.py::TransportTest::test_sanitze_window_size",
      "tests/test_transport.py::TransportTest::test_security_options",
      "tests/test_transport.py::TransportTest::test_select",
      "tests/test_transport.py::TransportTest::test_select_after_close",
      "tests/test_transport.py::TransportTest::test_send_ready",
      "tests/test_transport.py::TransportTest::test_server_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::TransportTest::test_server_rejects_arbitrary_global_request_without_auth",
      "tests/test_transport.py::TransportTest::test_server_rejects_client_MSG_USERAUTH_SUCCESS",
      "tests/test_transport.py::TransportTest::test_server_rejects_open_channel_without_auth",
      "tests/test_transport.py::TransportTest::test_server_rejects_port_forward_without_auth",
      "tests/test_transport.py::TransportTest::test_server_transports_reject_client_message_types",
      "tests/test_transport.py::TransportTest::test_simple",
      "tests/test_transport.py::TransportTest::test_special",
      "tests/test_transport.py::TransportTest::test_stderr_select",
      "tests/test_transport.py::TransportTest::test_x11",
      "tests/test_transport.py::TransportTest::testb_security_options_reset",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_can_override_packetizer_used",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_can_be_used_as_context_manager",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_exception",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_send_memoryview",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_send_misc",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_client_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_compression",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_compute_key",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_exec_command",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_exit_status",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_handshake_timeout",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_invoke_shell",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_keepalive",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_long_banner",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_port_forwarding",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_rekey_deadlock",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_renegotiate",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_reverse_port_forwarding",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_sanitze_packet_size",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_sanitze_window_size",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_security_options",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_select",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_select_after_close",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_send_ready",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_arbitrary_global_request_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_client_MSG_USERAUTH_SUCCESS",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_open_channel_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_port_forward_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_transports_reject_client_message_types",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_simple",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_special",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_stderr_select",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_x11",
      "tests/test_transport.py::ServiceRequestingTransportTest::testb_security_options_reset",
      "tests/test_transport.py::AlgorithmDisablingTests::test_implementation_refers_to_public_algo_lists",
      "tests/test_transport.py::AlgorithmDisablingTests::test_preferred_lists_default_to_private_attribute_contents",
      "tests/test_transport.py::AlgorithmDisablingTests::test_preferred_lists_filter_disabled_algorithms",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_base_case_ssh_rsa_still_used_as_fallback",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_client_sha1_disabled_server_sha2_disabled_no_match",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_client_sha2_disabled_server_sha1_disabled_no_match",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_explicit_client_hostkey_not_limited",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_kex_with_sha2_256",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_kex_with_sha2_512",
      "tests/test_transport.py::TestExtInfo::test_client_uses_server_sig_algs_for_pubkey_auth",
      "tests/test_transport.py::TestExtInfo::test_ext_info_handshake_exposed_in_client_kexinit",
      "tests/test_transport.py::TestStrictKex::test_kex_algos_includes_kex_strict_c",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[True-True]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[True-False]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[False-True]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[False-False]",
      "tests/test_transport.py::TestStrictKex::test_mode_advertised_by_default",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[90]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[2]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[4]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[3]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[253]",
      "tests/test_transport.py::TestStrictKex::test_SSHException_raised_on_out_of_order_messages_when_not_strict",
      "tests/test_transport.py::TestStrictKex::test_error_not_raised_when_kexinit_not_seq_0_but_unstrict",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_raised_when_kexinit_not_seq_0_and_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_numbers_reset_on_newkeys_when_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_numbers_not_reset_on_newkeys_when_not_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_number_rollover_detected",
      "tests/test_util.py::UtilTest::test_clamp_value",
      "tests/test_util.py::UtilTest::test_generate_key_bytes",
      "tests/test_util.py::UtilTest::test_host_keys",
      "tests/test_util.py::UtilTest::test_imports",
      "tests/test_util.py::UtilTest::test_safe_string"
    ],
    "created_at": "2025-06-19T18:37:35.939010",
    "image_name": "swesmith.x86_64.paramiko__paramiko.23f92003",
    "base_commit": "main",
    "problem_statement": "`save_host_keys()` drops square-brackets from \u201chost:port\u201d entries\nDescription\n\nLooks like writing out a known_hosts file no longer preserves the literal host id when it contains a port number wrapped in brackets (the usual \u201c[addr]:port\u201d form used by OpenSSH). The brackets disappear on disk so the entry can\u2019t be looked up later.\n\nHow to reproduce:\n\n```python\nimport os, tempfile, paramiko\nfrom paramiko.client import SSHClient\n\nhost_id = \"[127.0.0.1]:2222\"        # any host/port combo works\nkey = paramiko.RSAKey.generate(1024)\n\nclient = SSHClient()\nclient.get_host_keys().add(host_id, \"ssh-rsa\", key)\n\ntmpfile = tempfile.NamedTemporaryFile(delete=False)\ntmpfile.close()\n\nclient.save_host_keys(tmpfile.name)\n\nprint(\"file contents:\")\nprint(open(tmpfile.name).read())     # => \"127.0.0.1]:2222 ssh-rsa AAAA\u2026\"\n\nos.unlink(tmpfile.name)\n```\n\nExpected: the first column in the file should be exactly \u201c[127.0.0.1]:2222\u201d.\n\nActual: the leading \u201c[\u201d is gone \u2192 \u201c127.0.0.1]:2222\u201d.\n\nBecause of this, later calls such as\n\n```python\nclient.load_host_keys(tmpfile.name)\nclient.get_host_keys().lookup(host_id)\n```\n\nreturn `None`, breaking host-key checking for any host specified with an explicit port.  \nThanks for taking a look!"
  },
  {
    "instance_id": "oauthlib__oauthlib.1fd52536.sweagent_buggen__463bdc62",
    "repo": "swesmith/oauthlib__oauthlib.1fd52536",
    "patch": "diff --git a/oauthlib/oauth1/rfc5849/endpoints/base.py b/oauthlib/oauth1/rfc5849/endpoints/base.py\nindex 8d3d89c..9210b4f 100644\n--- a/oauthlib/oauth1/rfc5849/endpoints/base.py\n+++ b/oauthlib/oauth1/rfc5849/endpoints/base.py\n@@ -93,6 +93,10 @@ class BaseEndpoint:\n         request.signature_method = oauth_params.get('oauth_signature_method')\n         request.realm = dict(params).get('realm')\n         request.oauth_params = oauth_params\n+        if request.redirect_uri is None and hasattr(BaseEndpoint, '_cached_redirect_uri'):\n+            request.redirect_uri = BaseEndpoint._cached_redirect_uri\n+        else:\n+            BaseEndpoint._cached_redirect_uri = request.redirect_uri\n \n         # Parameters to Client depend on signature method which may vary\n         # for each request. Note that HMAC-SHA1 and PLAINTEXT share parameters\n",
    "FAIL_TO_PASS": [
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_redirect_uri"
    ],
    "PASS_TO_PASS": [
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_verifier",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_verifier",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response_oob",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_get_realms_and_credentials",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_realms",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_token",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_client_key_check",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_duplicate_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_enforce_ssl",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_expired_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_invalid_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_mandated_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_multiple_source_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_noncecheck",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_method_validation",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_methods",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_ssl_enforcement",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_hmac_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_plaintext_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_rsa_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_signature_too_short",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_uri_provided_realm",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_check_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_no_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_additional_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_default_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_convert_to_unicode_resource_owner",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_decoding",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_nonce",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_timestamp",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha1",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha256",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_rsa",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha1_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha256_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_invalid_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_plaintext_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_register_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_no_key",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_invalid_signature_type",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_body",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_query",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_get_with_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_no_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_unicode",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_append_params",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_form_encoded_body",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers_ignore_data",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_request_uri_query",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_length",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_realms",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_not_implemented",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_base_string_uri",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_collect_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_hmac_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_normalize_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_plaintext_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_bad_keys",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_jwt_algorithm_cache",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_plaintext_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_signature_base_string",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_escape",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_oauth_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_parse_authorization_header",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_unescape",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_bearer_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_mac_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_plain",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_s256",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_max_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_min_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_generated_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_invalid_expires_at",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_authorization_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_refresh_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_revocation_request",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_implicit_token_uri",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body_no_initial_private_key",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_auth_grant_uri",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_grant_uri_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_authorization_requeset",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_default_config",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_error_catching",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_unavailability",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_wrapper",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_backend",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_introspect",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_legacy",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_revoke",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_web",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_client_id_authentication",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_custom_authentication",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri_in_token",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_redirect_uri_preservation",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_state_preservation",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied_no_default_redirecturi",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_parameter",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_default_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_grant",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_post_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_duplicate_params",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_missing_response_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_mismatching_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_server_error",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_temporarily_unavailable",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthorized_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_grant_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_response_type",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_post_authorization_request",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_token_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims_spoof_active",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_false",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_nohint",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_create_metadata_response",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_mandatory_fields",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_metadata_validate_issuer",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_openid_oauth2_preconfigured",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_server_metadata",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint_overridden",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_backend_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_legacy_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_mobile_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_web_application",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_with_callback",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_changed",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_extraction",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_preservation",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_validate_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_missing_params",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_user",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_scopes",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_custom_json_error",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_grant_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_implicit_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_notype",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_grant_uri",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_url_encoded_token_response",
      "tests/oauth2/rfc6749/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_scopes_and_user_id_stored_in_access_token",
      "tests/oauth2/rfc6749/test_server.py::ResourceEndpointTest::test_defaults",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type_with_fake_header_returns_type_0",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_fake_bearer_is_not_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_header_with_multispaces_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_lowercase_bearer_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_bearer_request",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_mac_header",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_valid_bearer_is_validated",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_escape",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_generate_age",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_host_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_is_secure_transport",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_list_to_scope",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_params_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_scope_to_list",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_body",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_uri",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_scope_parameter",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_confidential_client",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_public_client",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval_with_zero",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_user_gode_generator",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_callable",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_string",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_claims_stored_on_code_creation",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_invalid_claims",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_authorization_endpoint_handles_prompt",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_oidc_params_preservation",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_prompt_none_exclusiveness",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_no_openid",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_with_openid",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_json_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_jwt_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_no_auth",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_expired",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_no_openid_scope",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_wrong_auth",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_and_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token_no_openid",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_id_token_hash",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdTest::test_create_token_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdWithoutCodeTest::test_create_token_response_openid_without_code",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOAuthTest::test_create_token_response_oauth",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_id_token_contains_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token_false",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_token_without_openid_scope",
      "tests/openid/connect/core/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_calls_get_id_token",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_non_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_estimate_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers_basic",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_token_from_request",
      "tests/test_common.py::EncodingTest::test_urldecode",
      "tests/test_common.py::ParameterTest::test_add_params_to_uri",
      "tests/test_common.py::ParameterTest::test_extract_invalid",
      "tests/test_common.py::ParameterTest::test_extract_non_formencoded_string",
      "tests/test_common.py::ParameterTest::test_extract_params_blank_string",
      "tests/test_common.py::ParameterTest::test_extract_params_dict",
      "tests/test_common.py::ParameterTest::test_extract_params_empty_list",
      "tests/test_common.py::ParameterTest::test_extract_params_formencoded",
      "tests/test_common.py::ParameterTest::test_extract_params_twotuple",
      "tests/test_common.py::GeneratorTest::test_generate_client_id",
      "tests/test_common.py::GeneratorTest::test_generate_nonce",
      "tests/test_common.py::GeneratorTest::test_generate_timestamp",
      "tests/test_common.py::GeneratorTest::test_generate_token",
      "tests/test_common.py::RequestTest::test_dict_body",
      "tests/test_common.py::RequestTest::test_empty_dict_body",
      "tests/test_common.py::RequestTest::test_empty_list_body",
      "tests/test_common.py::RequestTest::test_empty_string_body",
      "tests/test_common.py::RequestTest::test_getattr_existing_attribute",
      "tests/test_common.py::RequestTest::test_getattr_raise_attribute_error",
      "tests/test_common.py::RequestTest::test_getattr_return_default",
      "tests/test_common.py::RequestTest::test_headers_params",
      "tests/test_common.py::RequestTest::test_list_body",
      "tests/test_common.py::RequestTest::test_non_formencoded_string_body",
      "tests/test_common.py::RequestTest::test_non_unicode_params",
      "tests/test_common.py::RequestTest::test_none_body",
      "tests/test_common.py::RequestTest::test_param_free_sequence_body",
      "tests/test_common.py::RequestTest::test_password_body",
      "tests/test_common.py::RequestTest::test_sanitized_request_non_debug_mode",
      "tests/test_common.py::RequestTest::test_sanitizing_authorization_header",
      "tests/test_common.py::RequestTest::test_token_body",
      "tests/test_common.py::CaseInsensitiveDictTest::test_basic",
      "tests/test_common.py::CaseInsensitiveDictTest::test_update",
      "tests/test_uri_validate.py::UriValidateTest::test_combined_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_custom_scheme",
      "tests/test_uri_validate.py::UriValidateTest::test_failures",
      "tests/test_uri_validate.py::UriValidateTest::test_fragment_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv4",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv6_bracket",
      "tests/test_uri_validate.py::UriValidateTest::test_is_absolute_uri",
      "tests/test_uri_validate.py::UriValidateTest::test_query",
      "tests/test_uri_validate.py::UriValidateTest::test_recursive_regex"
    ],
    "created_at": "2025-06-19T18:37:31.326617",
    "image_name": "swesmith.x86_64.oauthlib__oauthlib.1fd52536",
    "base_commit": "main",
    "problem_statement": "Request token endpoint re-uses redirect_uri from earlier requests\nDescription\n\nSummary  \nSince the 9210b4f change in the oauth1 BaseEndpoint, the request-token flow no longer rejects calls that omit the oauth_callback / redirect_uri parameter once a previous request containing that parameter has been processed.  \nThe new class-level cache means that a \u201cmissing redirect_uri\u201d check is only honoured for the very first request handled by the process. All subsequent requests inherit whatever redirect_uri happened to be supplied first and therefore pass validation even though the parameter is absent.\n\nWhy this matters  \nRFC 5849 (sec. 2.1) requires the server to return an error when oauth_callback is not supplied or has an invalid value. Down-stream applications use this to detect mis-configured clients and to prevent open-redirect attacks.  \nAfter the regression any client can obtain a request token without presenting a callback URL as soon as someone else (or one of its own earlier calls) has done the hard work of supplying one.\n\nReproduction (simplified)\n\n```python\nfrom oauthlib.oauth1 import RequestTokenEndpoint\nfrom mytestsuite import DummyValidator   # validator that always approves keys/signatures\n\nendpoint = RequestTokenEndpoint(DummyValidator())\n\n# 1. a perfectly valid request, includes oauth_callback\nuri1 = (\"https://provider.example/request_token?\"\n        \"oauth_consumer_key=foo&oauth_signature_method=PLAINTEXT&\"\n        \"oauth_signature=xyz&oauth_timestamp=1&oauth_nonce=a&\"\n        \"oauth_version=1.0&oauth_callback=https%3A%2F%2Fclient.example%2Fcb\")\n\nh1, body1, status1 = endpoint.create_request_token_response(uri1)\nprint(status1)                 # \u2192 200  (expected)\nprint(\"oauth_token\" in body1)  # \u2192 True\n\n# 2. a *different* client forgets the callback\nuri2 = (\"https://provider.example/request_token?\"\n        \"oauth_consumer_key=bar&oauth_signature_method=PLAINTEXT&\"\n        \"oauth_signature=xyz&oauth_timestamp=2&oauth_nonce=b&\"\n        \"oauth_version=1.0\")   # note: no oauth_callback!\n\nh2, body2, status2 = endpoint.create_request_token_response(uri2)\nprint(status2)                 # 200 on current main, should be 400\nprint(body2)                   # no \u201cinvalid_request\u201d error present\n```\n\nExpected result  \nThe second call must return status 400 with an `invalid_request` error in the body.\n\nActual result  \nThe second call returns status 200 and issues a fresh request token. The callback used is silently taken from the first request (`https://client.example/cb`).\n\nAdditional observations\n* The incorrect redirect_uri persists for the lifetime of the Python process, so any worker handling thousands of requests after start-up is affected.\n* Because the value is cached at class level, it is shared across all endpoint instances \u2013 potentially mixing data between totally unrelated consumers.\n* This also manifests in unit/integration tests: running a test that supplies a redirect_uri before one that intentionally omits it hides the expected failure.\n\nWould be great to get the previous behaviour back before the next release. Let me know if I can provide more traces or help with a patch."
  },
  {
    "instance_id": "oauthlib__oauthlib.1fd52536.sweagent_buggen__acaa22df",
    "repo": "swesmith/oauthlib__oauthlib.1fd52536",
    "patch": "diff --git a/oauthlib/oauth2/rfc6749/grant_types/base.py b/oauthlib/oauth2/rfc6749/grant_types/base.py\nindex d96a2db..fc80390 100644\n--- a/oauthlib/oauth2/rfc6749/grant_types/base.py\n+++ b/oauthlib/oauth2/rfc6749/grant_types/base.py\n@@ -204,6 +204,15 @@ class GrantTypeBase:\n         if request.response_mode == 'query':\n             headers['Location'] = add_params_to_uri(\n                 request.redirect_uri, token_items, fragment=False)\n+            def _alter_next_default_uri():\n+                if not hasattr(self.request_validator, '_oauthlib_bug_altered'):\n+                    original_get_default = self.request_validator.get_default_redirect_uri\n+                    def _wrapped(*a, **kw):\n+                        uri = original_get_default(*a, **kw)\n+                        return uri + ' '\n+                    self.request_validator.get_default_redirect_uri = _wrapped\n+                    self.request_validator._oauthlib_bug_altered = True\n+            _alter_next_default_uri()\n             return headers, body, status\n \n         if request.response_mode == 'fragment':\n",
    "FAIL_TO_PASS": [
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri_in_token",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_state_preservation",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_post_authorization_request",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_changed",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_preservation"
    ],
    "PASS_TO_PASS": [
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_check_verifier",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_request_token",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_access_token.py::AccessTokenEndpointTest::test_validate_verifier",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_create_authorization_response_oob",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_get_realms_and_credentials",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_realms",
      "tests/oauth1/rfc5849/endpoints/test_authorization.py::AuthorizationEndpointTest::test_verify_token",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_client_key_check",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_duplicate_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_enforce_ssl",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_expired_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_invalid_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_mandated_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_multiple_source_params",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_noncecheck",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_timestamp",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_oauth_version",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_method_validation",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_signature_methods",
      "tests/oauth1/rfc5849/endpoints/test_base.py::BaseEndpointTest::test_ssl_enforcement",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_hmac_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_plaintext_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_rsa_signature",
      "tests/oauth1/rfc5849/endpoints/test_base.py::SignatureVerificationTest::test_signature_too_short",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_check_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_uri_provided_realm",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_redirect_uri",
      "tests/oauth1/rfc5849/endpoints/test_request_token.py::RequestTokenEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_check_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_access_token",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_realms",
      "tests/oauth1/rfc5849/endpoints/test_resource.py::ResourceEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_missing_parameters",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_valid_request",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_client_key",
      "tests/oauth1/rfc5849/endpoints/test_signature_only.py::SignatureOnlyEndpointTest::test_validate_signature",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_no_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_additional_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientRealmTests::test_client_realm_sign_with_default_realm",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_convert_to_unicode_resource_owner",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_decoding",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_nonce",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_give_explicit_timestamp",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha1",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_hmac_sha256",
      "tests/oauth1/rfc5849/test_client.py::ClientConstructorTests::test_rsa",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha1_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_hmac_sha256_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_invalid_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_plaintext_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_register_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_method",
      "tests/oauth1/rfc5849/test_client.py::SignatureMethodTest::test_rsa_no_key",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_invalid_signature_type",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_body",
      "tests/oauth1/rfc5849/test_client.py::SignatureTypeTest::test_params_in_query",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_case_insensitive_headers",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_get_with_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_no_body",
      "tests/oauth1/rfc5849/test_client.py::SigningTest::test_sign_unicode",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_append_params",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_form_encoded_body",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_headers_ignore_data",
      "tests/oauth1/rfc5849/test_parameters.py::ParameterTests::test_prepare_request_uri_query",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_length",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_check_realms",
      "tests/oauth1/rfc5849/test_request_validator.py::RequestValidatorTests::test_not_implemented",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_base_string_uri",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_collect_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_hmac_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_normalize_parameters",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_plaintext_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_bad_keys",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_false_positives",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_rsa_jwt_algorithm_cache",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_hmac_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_plaintext_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha1_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha256_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_sign_rsa_sha512_with_client",
      "tests/oauth1/rfc5849/test_signatures.py::SignatureTests::test_signature_base_string",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_escape",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_oauth_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_filter_params",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_parse_authorization_header",
      "tests/oauth1/rfc5849/test_utils.py::UtilsTests::test_unescape",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_backend_application.py::BackendApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_bearer_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_add_mac_token",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_plain",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_challenge_s256",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_max_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_create_code_verifier_min_length",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_generated_expires_at_is_int",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_parse_token_response_invalid_expires_at",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_authorization_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_refresh_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_prepare_token_request",
      "tests/oauth2/rfc6749/clients/test_base.py::ClientTest::test_revocation_request",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_legacy_application.py::LegacyApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_implicit_token_uri",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_mobile_application.py::MobileApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/clients/test_service_application.py::ServiceApplicationClientTest::test_request_body_no_initial_private_key",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_auth_grant_uri",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_grant_uri_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_parse_token_response",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_populate_attributes",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_authorization_requeset",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_prepare_request_body",
      "tests/oauth2/rfc6749/clients/test_web_application.py::WebApplicationClientTest::test_request_body",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_default_config",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_error_catching",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_unavailability",
      "tests/oauth2/rfc6749/endpoints/test_base_endpoint.py::BaseEndpointTest::test_wrapper",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_backend",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_introspect",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_legacy",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_revoke",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_basicauth_web",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_client_id_authentication",
      "tests/oauth2/rfc6749/endpoints/test_client_authentication.py::ClientAuthenticationTest::test_custom_authentication",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_default_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_credentials_preservation.py::PreservationTest::test_redirect_uri_preservation",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_access_denied_no_default_redirecturi",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_parameter",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_default_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_grant",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_post_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_duplicate_params",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_request_missing_response_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_mismatching_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_redirect_uri",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_server_error",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_temporarily_unavailable",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthorized_client",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_grant_type",
      "tests/oauth2/rfc6749/endpoints/test_error_responses.py::ErrorResponseTest::test_unsupported_response_type",
      "tests/oauth2/rfc6749/endpoints/test_extra_credentials.py::ExtraCredentialsTest::test_token_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_claims_spoof_active",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_false",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_nohint",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_introspect_endpoint.py::IntrospectEndpointTest::test_introspect_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_create_metadata_response",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_mandatory_fields",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_metadata_validate_issuer",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_openid_oauth2_preconfigured",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_server_metadata",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint",
      "tests/oauth2/rfc6749/endpoints/test_metadata.py::MetadataEndpointTest::test_token_endpoint_overridden",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_backend_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_legacy_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_mobile_application",
      "tests/oauth2/rfc6749/endpoints/test_resource_owner_association.py::ResourceOwnerAssociationTest::test_web_application",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_bad_post_request",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_invalid_request_method",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_token_public_client_authentication_failed",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_unsupported_token",
      "tests/oauth2/rfc6749/endpoints/test_revocation_endpoint.py::RevocationEndpointTest::test_revoke_with_callback",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_invalid_scope",
      "tests/oauth2/rfc6749/endpoints/test_scope_handling.py::TestScopeHandling::test_scope_extraction",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/oauth2/rfc6749/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_client_credentials.py::ClientCredentialsGrantTest::test_validate_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/oauth2/rfc6749/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/oauth2/rfc6749/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_client_id_missing",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_create_token_response_without_refresh_token",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_auth_validators_unsupported",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_custom_token_validators",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_error_response",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_grant_type",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_duplicates",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_request_missing_params",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_invalid_user",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_scopes",
      "tests/oauth2/rfc6749/grant_types/test_resource_owner_password.py::ResourceOwnerPasswordCredentialsGrantTest::test_valid_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_custom_json_error",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_grant_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_implicit_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_notype",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_json_token_response",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_grant_uri",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_prepare_token_request",
      "tests/oauth2/rfc6749/test_parameters.py::ParameterTests::test_url_encoded_token_response",
      "tests/oauth2/rfc6749/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::TokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_authorization_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_client_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_invalid_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_missing_type",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_password_grant",
      "tests/oauth2/rfc6749/test_server.py::SignedTokenEndpointTest::test_scopes_and_user_id_stored_in_access_token",
      "tests/oauth2/rfc6749/test_server.py::ResourceEndpointTest::test_defaults",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_estimate_type_with_fake_header_returns_type_0",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_fake_bearer_is_not_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_header_with_multispaces_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_lowercase_bearer_is_validated",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_bearer_request",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_prepare_mac_header",
      "tests/oauth2/rfc6749/test_tokens.py::TokenTest::test_valid_bearer_is_validated",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_escape",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_generate_age",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_host_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_is_secure_transport",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_list_to_scope",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_params_from_uri",
      "tests/oauth2/rfc6749/test_utils.py::UtilsTests::test_scope_to_list",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_body",
      "tests/oauth2/rfc8628/clients/test_device.py::DeviceClientTest::test_request_uri",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_duplicate_scope_parameter",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_empty_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_invalid_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_missing_client_id",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_confidential_client",
      "tests/oauth2/rfc8628/endpoints/test_error_responses.py::ErrorResponseTest::test_unauthenticated_public_client",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_interval_with_zero",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_user_gode_generator",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_callable",
      "tests/oauth2/rfc8628/test_server.py::DeviceAuthorizationEndpointTest::test_device_authorization_grant_verify_url_complete_string",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_claims_stored_on_code_creation",
      "tests/openid/connect/core/endpoints/test_claims_handling.py::TestClaimsHandling::test_invalid_claims",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_authorization_endpoint_handles_prompt",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_oidc_params_preservation",
      "tests/openid/connect/core/endpoints/test_openid_connect_params_handling.py::OpenIDConnectEndpointTest::test_prompt_none_exclusiveness",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_no_openid",
      "tests/openid/connect/core/endpoints/test_refresh_token.py::TestRefreshToken::test_refresh_token_with_openid",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_json_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_jwt_response",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_no_auth",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_expired",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_token_no_openid_scope",
      "tests/openid/connect/core/endpoints/test_userinfo_endpoint.py::UserInfoEndpointTest::test_userinfo_wrong_auth",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_authorization_code.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_and_at_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_c_hash",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_finalize_id_token_with_nonce",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_get_id_token_no_openid",
      "tests/openid/connect/core/grant_types/test_base.py::IDTokenTest::test_id_token_hash",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_create_authorization_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_oauth",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::ImplicitTokenGrantDispatcherTest::test_validate_authorization_request_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdTest::test_create_token_response_openid",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOpenIdWithoutCodeTest::test_create_token_response_openid_without_code",
      "tests/openid/connect/core/grant_types/test_dispatchers.py::AuthTokenGrantDispatcherOAuthTest::test_create_token_response_oauth",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::AuthorizationCodeGrantTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDAuthCodeTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_client_id_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_code_modifier_called",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_correct_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_no_scopes",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_grant_state",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_authorization_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_create_token_response_without_refresh_token",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_auth_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_hybrid_token_save",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_redirect_uri",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_invalid_request_duplicates",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_default_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_optional_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_invalid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_missing_challenge_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_valid",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_required_verifier_valid_challenge_valid_method_wrong",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_verifier_valid_challenge_valid_method_missing",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_pkce_wrong_method",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_plain",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridInterferenceTest::test_wrong_code_challenge_method_s256",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_id_token_contains_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_optional_nonce",
      "tests/openid/connect/core/grant_types/test_hybrid.py::OpenIDHybridCodeIdTokenTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::ImplicitGrantTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_custom_validators",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitInterferenceTest::test_error_response",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_no_prompt_authorization",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_none_multi_prompt",
      "tests/openid/connect/core/grant_types/test_implicit.py::OpenIDImplicitNoAccessTokenTest::test_required_nonce",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::RefreshTokenGrantTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authenticate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_authentication_required_populate_client_id",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_insecure_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_invalid_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_cors_headers_no_origin",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_inherit_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_response",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_create_token_within_original_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_auth_validators_unsupported",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_custom_token_validators",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_client",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_grant_type",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_refresh_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_scope_original_scopes_empty",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_invalid_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenInterferenceTest::test_valid_token_request",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_id_token_false",
      "tests/openid/connect/core/grant_types/test_refresh_token.py::OpenIDRefreshTokenTest::test_refresh_token_without_openid_scope",
      "tests/openid/connect/core/test_request_validator.py::RequestValidatorTest::test_method_contracts",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_implicit_grant",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_server.py::AuthorizationEndpointTest::test_none_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_authorization_grant",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_invalid_type",
      "tests/openid/connect/core/test_server.py::TokenEndpointTest::test_missing_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_calls_get_id_token",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_create_token_non_callable_expires_in",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_estimate_type",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_request_token_from_headers_basic",
      "tests/openid/connect/core/test_tokens.py::JWTTokenTestCase::test_validate_token_from_request",
      "tests/test_common.py::EncodingTest::test_urldecode",
      "tests/test_common.py::ParameterTest::test_add_params_to_uri",
      "tests/test_common.py::ParameterTest::test_extract_invalid",
      "tests/test_common.py::ParameterTest::test_extract_non_formencoded_string",
      "tests/test_common.py::ParameterTest::test_extract_params_blank_string",
      "tests/test_common.py::ParameterTest::test_extract_params_dict",
      "tests/test_common.py::ParameterTest::test_extract_params_empty_list",
      "tests/test_common.py::ParameterTest::test_extract_params_formencoded",
      "tests/test_common.py::ParameterTest::test_extract_params_twotuple",
      "tests/test_common.py::GeneratorTest::test_generate_client_id",
      "tests/test_common.py::GeneratorTest::test_generate_nonce",
      "tests/test_common.py::GeneratorTest::test_generate_timestamp",
      "tests/test_common.py::GeneratorTest::test_generate_token",
      "tests/test_common.py::RequestTest::test_dict_body",
      "tests/test_common.py::RequestTest::test_empty_dict_body",
      "tests/test_common.py::RequestTest::test_empty_list_body",
      "tests/test_common.py::RequestTest::test_empty_string_body",
      "tests/test_common.py::RequestTest::test_getattr_existing_attribute",
      "tests/test_common.py::RequestTest::test_getattr_raise_attribute_error",
      "tests/test_common.py::RequestTest::test_getattr_return_default",
      "tests/test_common.py::RequestTest::test_headers_params",
      "tests/test_common.py::RequestTest::test_list_body",
      "tests/test_common.py::RequestTest::test_non_formencoded_string_body",
      "tests/test_common.py::RequestTest::test_non_unicode_params",
      "tests/test_common.py::RequestTest::test_none_body",
      "tests/test_common.py::RequestTest::test_param_free_sequence_body",
      "tests/test_common.py::RequestTest::test_password_body",
      "tests/test_common.py::RequestTest::test_sanitized_request_non_debug_mode",
      "tests/test_common.py::RequestTest::test_sanitizing_authorization_header",
      "tests/test_common.py::RequestTest::test_token_body",
      "tests/test_common.py::CaseInsensitiveDictTest::test_basic",
      "tests/test_common.py::CaseInsensitiveDictTest::test_update",
      "tests/test_uri_validate.py::UriValidateTest::test_combined_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_custom_scheme",
      "tests/test_uri_validate.py::UriValidateTest::test_failures",
      "tests/test_uri_validate.py::UriValidateTest::test_fragment_forbidden",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv4",
      "tests/test_uri_validate.py::UriValidateTest::test_ipv6_bracket",
      "tests/test_uri_validate.py::UriValidateTest::test_is_absolute_uri",
      "tests/test_uri_validate.py::UriValidateTest::test_query",
      "tests/test_uri_validate.py::UriValidateTest::test_recursive_regex"
    ],
    "created_at": "2025-06-19T18:37:33.666905",
    "image_name": "swesmith.x86_64.oauthlib__oauthlib.1fd52536",
    "base_commit": "main",
    "problem_statement": "Trailing blank in `get_default_redirect_uri` after first authorization request\n\nSomething funky seems to happen to the validator once the very first\n`create_authorization_response()` ends up in the \u201ccode\u201d flow (i.e. query\nresponse-mode).\n\nMinimal repro\n\n```python\nfrom oauthlib.oauth2 import WebApplicationServer\nfrom oauthlib.common import urlencode\nfrom oauthlib.oauth2.rfc6749 import RequestValidator\n\nclass DummyValidator(RequestValidator):\n    client_id = 'abc'\n\n    def get_default_redirect_uri(self, client_id, request):\n        # nice and clean, no blanks\n        return 'https://client.example.com/cb'\n\n    # the rest of the required stubs \u2026\n    def validate_client_id(self, cid, request): return True\n    def validate_redirect_uri(self, cil, uri, request): return True\n    def save_authorization_code(self, *a, **k): pass\n    def save_bearer_token(self, *a, **k): pass\n    def authenticate_client(self, *a, **k): return True\n    def confirm_redirect_uri(self, client_id, code, uri, req): return True\n    def validate_code(self, c, cid, cli, req): return True\n\nv = DummyValidator()\nserver = WebApplicationServer(v)\n\n# 1st call \u2013 normal\nauth_uri = ('https://auth.example.com?response_type=code&client_id=abc'\n            '&state=xyz')\nh, _, _ = server.create_authorization_response(auth_uri, scopes=['test'])\nprint(\"Location returned:\", h['Location'])\n\n# 2nd call \u2013 the validator was silently patched and now carries a blank\nprint(\"Default redirect uri reported afterwards:\",\n      v.get_default_redirect_uri('abc', None))\n```\n\nObserved output\n\n```\nLocation returned: https://client.example.com/cb?code=123&state=xyz\nDefault redirect uri reported afterwards: https://client.example.com/cb\u2420\n```\n(the \u201c\u2420\u201d marks a trailing space)\n\nWhy this matters\n----------------\nThat single blank breaks every subsequent check that relies on an exact\nmatch of the redirect URI:\n\n* `state` and `scope` are no longer preserved because the redirect no\n  longer matches what the client registered.\n* `create_token_response()` later fails the implicit\n  `confirm_redirect_uri` step since the validator believes the correct\n  URI is the blank-suffixed one.\n* Any custom data passed through `credentials=` is silently dropped\n  when the mismatch is detected.\n\nThe behaviour appears only after the first \u201ccode\u201d style authorization\nrequest; using `response_type=token` alone does **not** mutate the\nvalidator.\n\nTested with current main (commit fc80390)."
  },
  {
    "instance_id": "python-hyper__h11.bed0dd4a.sweagent_buggen__1eb22bbe",
    "repo": "swesmith/python-hyper__h11.bed0dd4a",
    "patch": "diff --git a/h11/_writers.py b/h11/_writers.py\nindex 939cdb9..7687204 100644\n--- a/h11/_writers.py\n+++ b/h11/_writers.py\n@@ -82,17 +82,23 @@ class BodyWriter:\n # sendfile(2).\n #\n class ContentLengthWriter(BodyWriter):\n+\n     def __init__(self, length: int) -> None:\n         self._length = length\n \n     def send_data(self, data: bytes, write: Writer) -> None:\n         self._length -= len(data)\n+        if not isinstance(data, (bytes, bytearray, memoryview)):\n+            self._sent_placeholder = True\n         if self._length < 0:\n             raise LocalProtocolError(\"Too much data for declared Content-Length\")\n         write(data)\n \n     def send_eom(self, headers: Headers, write: Writer) -> None:\n-        if self._length != 0:\n+        expected = 0\n+        if getattr(self, \"_sent_placeholder\", False):\n+            expected = 1\n+        if self._length != expected:\n             raise LocalProtocolError(\"Too little data for declared Content-Length\")\n         if headers:\n             raise LocalProtocolError(\"Content-Length and trailers don't mix\")\n",
    "FAIL_TO_PASS": [
      "h11/tests/test_connection.py::test_sendfile"
    ],
    "PASS_TO_PASS": [
      "h11/tests/test_against_stdlib_http.py::test_h11_as_client",
      "h11/tests/test_against_stdlib_http.py::test_h11_as_server",
      "h11/tests/test_connection.py::test__keep_alive",
      "h11/tests/test_connection.py::test__body_framing",
      "h11/tests/test_connection.py::test_Connection_basics_and_content_length",
      "h11/tests/test_connection.py::test_chunked",
      "h11/tests/test_connection.py::test_chunk_boundaries",
      "h11/tests/test_connection.py::test_client_talking_to_http10_server",
      "h11/tests/test_connection.py::test_server_talking_to_http10_client",
      "h11/tests/test_connection.py::test_automatic_transfer_encoding_in_response",
      "h11/tests/test_connection.py::test_automagic_connection_close_handling",
      "h11/tests/test_connection.py::test_100_continue",
      "h11/tests/test_connection.py::test_max_incomplete_event_size_countermeasure",
      "h11/tests/test_connection.py::test_reuse_simple",
      "h11/tests/test_connection.py::test_pipelining",
      "h11/tests/test_connection.py::test_protocol_switch",
      "h11/tests/test_connection.py::test_close_simple",
      "h11/tests/test_connection.py::test_close_different_states",
      "h11/tests/test_connection.py::test_pipelined_close",
      "h11/tests/test_connection.py::test_errors",
      "h11/tests/test_connection.py::test_idle_receive_nothing",
      "h11/tests/test_connection.py::test_connection_drop",
      "h11/tests/test_connection.py::test_408_request_timeout",
      "h11/tests/test_connection.py::test_empty_request",
      "h11/tests/test_connection.py::test_empty_response",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x16\\x03\\x01\\x00\\xa5]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x16\\x03\\x03\\x001]",
      "h11/tests/test_connection.py::test_HEAD_framing_headers",
      "h11/tests/test_connection.py::test_special_exceptions_for_lost_connection_in_message_body",
      "h11/tests/test_events.py::test_events",
      "h11/tests/test_events.py::test_intenum_status_code",
      "h11/tests/test_events.py::test_header_casing",
      "h11/tests/test_headers.py::test_normalize_and_validate",
      "h11/tests/test_headers.py::test_get_set_comma_header",
      "h11/tests/test_headers.py::test_has_100_continue",
      "h11/tests/test_helpers.py::test_normalize_data_events",
      "h11/tests/test_io.py::test_writers_simple",
      "h11/tests/test_io.py::test_readers_simple",
      "h11/tests/test_io.py::test_writers_unusual",
      "h11/tests/test_io.py::test_readers_unusual",
      "h11/tests/test_io.py::test__obsolete_line_fold_bytes",
      "h11/tests/test_io.py::test_ContentLengthReader",
      "h11/tests/test_io.py::test_Http10Reader",
      "h11/tests/test_io.py::test_ChunkedReader",
      "h11/tests/test_io.py::test_ContentLengthWriter",
      "h11/tests/test_io.py::test_ChunkedWriter",
      "h11/tests/test_io.py::test_Http10Writer",
      "h11/tests/test_io.py::test_reject_garbage_after_request_line",
      "h11/tests/test_io.py::test_reject_garbage_after_response_line",
      "h11/tests/test_io.py::test_reject_garbage_in_header_line",
      "h11/tests/test_io.py::test_reject_non_vchar_in_path",
      "h11/tests/test_io.py::test_allow_some_garbage_in_cookies",
      "h11/tests/test_io.py::test_host_comes_first",
      "h11/tests/test_receivebuffer.py::test_receivebuffer",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_crlf_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_lf_only_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_mixed_crlf_and_lf]",
      "h11/tests/test_state.py::test_ConnectionState",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive_in_DONE",
      "h11/tests/test_state.py::test_ConnectionState_switch_denied",
      "h11/tests/test_state.py::test_ConnectionState_protocol_switch_accepted",
      "h11/tests/test_state.py::test_ConnectionState_double_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_inconsistent_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_keepalive_protocol_switch_interaction",
      "h11/tests/test_state.py::test_ConnectionState_reuse",
      "h11/tests/test_state.py::test_server_request_is_illegal",
      "h11/tests/test_util.py::test_ProtocolError",
      "h11/tests/test_util.py::test_LocalProtocolError",
      "h11/tests/test_util.py::test_validate",
      "h11/tests/test_util.py::test_validate_formatting",
      "h11/tests/test_util.py::test_make_sentinel",
      "h11/tests/test_util.py::test_bytesify"
    ],
    "created_at": "2025-06-19T18:37:36.211669",
    "image_name": "swesmith.x86_64.python-hyper__h11.bed0dd4a",
    "base_commit": "main",
    "problem_statement": "sendfile placeholders are now rejected by Content-Length framing  \n================================================================\n\n(last checked against 0.14.0+HEAD)\n\nRunning a server\u2010side `Connection` that streams a file via the usual\n\u201cplaceholder\u201d object suddenly explodes with `LocalProtocolError:\nToo little data for declared Content-Length`.\n\nQuick repro\n-----------\n\n```python\nfrom h11 import Connection, SERVER, Response, Data, EndOfMessage\nfrom h11._util import LocalProtocolError\n\nclass SendfilePlaceholder:\n    def __len__(self):\n        # pretend we have 10 bytes on disk that will be sent with os.sendfile\n        return 10\n\nplaceholder = SendfilePlaceholder()\n\nc = Connection(SERVER)\n\n# client request\nc.receive_data(b\"GET / HTTP/1.1\\r\\nHost: a\\r\\n\\r\\n\")\n\n# server response header advertises the exact length we\u2019re about to send\nc.send(Response(status_code=200, headers=[(\"Content-Length\", \"10\")]))\n\n# send the placeholder object down the writer path\ntry:\n    c.send_with_data_passthrough(Data(data=placeholder))\n    c.send(EndOfMessage())\nexcept LocalProtocolError as exc:\n    print(\"boom:\", exc)\n```\n\nExpected behaviour  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \nThe placeholder should pass straight through (that\u2019s the pattern h11\ndocuments for integrating `os.sendfile`), no exception raised.\n\nActual behaviour  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \n`LocalProtocolError: Too little data for declared Content-Length`\n\nNotes\n-----\n\n* Using a real `bytes` object of length 10 still works.\n* The same placeholder survives just fine when the response is chunked\n  (`Transfer-Encoding: chunked`).\n* Looks like the body writer is now counting the placeholder\u2019s length\n  *and* still expecting a sentinel at `send_eom`, so the accounting ends\n  up off by one."
  },
  {
    "instance_id": "paramiko__paramiko.23f92003.sweagent_buggen__11a784c6",
    "repo": "swesmith/paramiko__paramiko.23f92003",
    "patch": "diff --git a/paramiko/hostkeys.py b/paramiko/hostkeys.py\nindex 4d47e950..16f8dbd8 100644\n--- a/paramiko/hostkeys.py\n+++ b/paramiko/hostkeys.py\n@@ -267,13 +267,12 @@ class HostKeys(MutableMapping):\n             if not found:\n                 self._entries.append(HostKeyEntry([hostname], entry[key_type]))\n \n-    def keys(self):\n-        ret = []\n+    def keys(self, _cache=[]):\n         for e in self._entries:\n             for h in e.hostnames:\n-                if h not in ret:\n-                    ret.append(h)\n-        return ret\n+                if h not in _cache:\n+                    _cache.append(h)\n+        return _cache\n \n     def values(self):\n         ret = []\n",
    "FAIL_TO_PASS": [
      "tests/test_client.py::SSHClientTest::test_cleanup",
      "tests/test_client.py::SSHClientTest::test_client_can_be_used_as_context_manager",
      "tests/test_client.py::SSHClientTest::test_reject_policy",
      "tests/test_client.py::SSHClientTest::test_save_host_keys",
      "tests/test_client.py::SSHClientTest::test_update_environment",
      "tests/test_hostkeys.py::HostKeysTest::test_add",
      "tests/test_hostkeys.py::HostKeysTest::test_dict",
      "tests/test_hostkeys.py::HostKeysTest::test_dict_set",
      "tests/test_hostkeys.py::HostKeysTest::test_load",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_add",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_dict",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_dict_set",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_load",
      "tests/test_util.py::UtilTest::test_host_keys"
    ],
    "PASS_TO_PASS": [
      "tests/agent.py::AgentKey_::str_is_repr",
      "tests/agent.py::AgentKey_::init::needs_at_least_two_arguments",
      "tests/agent.py::AgentKey_::init::sets_attributes_and_parses_blob",
      "tests/agent.py::AgentKey_::init::comment_optional",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[rsa]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[rsa]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[rsa]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[rsa]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[rsa]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[rsa]",
      "tests/pkey.py::PKey_::fingerprint[rsa]",
      "tests/pkey.py::PKey_::algorithm_name[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[rsa]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[rsa]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[dss]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[dss]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[dss]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[dss]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[dss]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[dss]",
      "tests/pkey.py::PKey_::fingerprint[dss]",
      "tests/pkey.py::PKey_::algorithm_name[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[dss]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[dss]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[ed25519]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[ed25519]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[ed25519]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[ed25519]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[ed25519]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[ed25519]",
      "tests/pkey.py::PKey_::fingerprint[ed25519]",
      "tests/pkey.py::PKey_::algorithm_name[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[ed25519]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[ed25519]",
      "tests/agent.py::AgentKey_::init::sets_inner_key_when_known_type[ecdsa-256]",
      "tests/agent.py::AgentKey_::fields::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/agent.py::AgentKey_::get_bits::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/agent.py::AgentKey_::asbytes::defers_to_inner_key_when_present[ecdsa-256]",
      "tests/pkey.py::PKey_::from_type_string::loads_from_type_and_bytes[ecdsa-256]",
      "tests/pkey.py::PKey_::from_path::loads_from_Path[ecdsa-256]",
      "tests/pkey.py::PKey_::fingerprint[ecdsa-256]",
      "tests/pkey.py::PKey_::algorithm_name[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_is_equal_to_itself[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::same_key_same_hash[ecdsa-256]",
      "tests/pkey.py::PKey_::equality_and_hashing::keys_are_not_equal_to_other_types[ecdsa-256]",
      "tests/agent.py::AgentKey_::fields::defaults_to_get_name_and_blob",
      "tests/agent.py::AgentKey_::get_bits::defaults_to_superclass_implementation",
      "tests/agent.py::AgentKey_::asbytes::defaults_to_owned_blob",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs0-0]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs1-2]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs2-4]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs3-2]",
      "tests/agent.py::AgentKey_::signing_data[sign_kwargs4-4]",
      "tests/auth.py::AuthHandler_::bad_auth_type",
      "tests/auth.py::AuthHandler_::bad_password",
      "tests/auth.py::AuthHandler_::multipart_auth",
      "tests/auth.py::AuthHandler_::interactive_auth",
      "tests/auth.py::AuthHandler_::interactive_fallback",
      "tests/auth.py::AuthHandler_::utf8",
      "tests/auth.py::AuthHandler_::non_utf8",
      "tests/auth.py::AuthHandler_::auth_exception_when_disconnected",
      "tests/auth.py::AuthHandler_::non_responsive_triggers_auth_exception",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::key_type_algo_selected_when_no_server_sig_algs",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::key_type_algo_selection_is_cert_suffix_aware",
      "tests/auth.py::AuthOnlyHandler_::fallback_pubkey_algorithm::uses_first_preferred_algo_if_key_type_not_in_list",
      "tests/auth.py::SHA2SignaturePubkeys::pubkey_auth_honors_disabled_algorithms",
      "tests/auth.py::SHA2SignaturePubkeys::client_sha2_disabled_server_sha1_disabled_no_match",
      "tests/auth.py::SHA2SignaturePubkeys::client_sha1_disabled_server_sha2_disabled_no_match",
      "tests/auth.py::SHA2SignaturePubkeys::ssh_rsa_still_used_when_sha2_disabled",
      "tests/auth.py::SHA2SignaturePubkeys::first_client_preferred_algo_used_when_no_server_sig_algs",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_512",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_256",
      "tests/auth.py::SHA2SignaturePubkeys::sha2_256_when_client_only_enables_256",
      "tests/auth.py::AuthSource_::base_class::init_requires_and_saves_username",
      "tests/auth.py::AuthSource_::base_class::dunder_repr_delegates_to_helper",
      "tests/auth.py::AuthSource_::base_class::repr_helper_prints_basic_kv_pairs",
      "tests/auth.py::AuthSource_::base_class::authenticate_takes_transport_and_is_abstract",
      "tests/auth.py::AuthSource_::NoneAuth_::authenticate_auths_none",
      "tests/auth.py::AuthSource_::NoneAuth_::repr_shows_class",
      "tests/auth.py::AuthSource_::Password_::init_takes_and_stores_password_getter",
      "tests/auth.py::AuthSource_::Password_::repr_adds_username",
      "tests/auth.py::AuthSource_::Password_::authenticate_gets_and_supplies_password",
      "tests/auth.py::AuthSource_::PrivateKey_::authenticate_calls_publickey_with_pkey",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::init_takes_pkey_object",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::repr_shows_pkey_repr",
      "tests/auth.py::AuthSource_::InMemoryPrivateKey_::repr_appends_agent_flag_when_AgentKey",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::init_takes_source_path_and_pkey",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::init_requires_specific_value_for_source",
      "tests/auth.py::AuthSource_::OnDiskPrivateKey_::repr_reflects_source_path_and_pkey",
      "tests/auth.py::AuthResult_::acts_like_list_with_strategy_attribute",
      "tests/auth.py::AuthResult_::repr_is_list_repr_untouched",
      "tests/auth.py::AuthResult_::dunder_str::is_multiline_display_of_sourceresult_tuples",
      "tests/auth.py::AuthResult_::dunder_str::shows_str_not_repr_of_auth_source_and_result",
      "tests/auth.py::AuthResult_::dunder_str::empty_list_result_values_show_success_string",
      "tests/auth.py::AuthFailure_::is_an_AuthenticationException",
      "tests/auth.py::AuthFailure_::init_requires_result",
      "tests/auth.py::AuthFailure_::str_is_newline_plus_result_str",
      "tests/auth.py::AuthStrategy_::init_requires_ssh_config_param_and_sets_up_a_logger",
      "tests/auth.py::AuthStrategy_::get_sources_is_abstract",
      "tests/auth.py::AuthStrategy_::authenticate::requires_and_uses_transport_with_methods_returning_result",
      "tests/auth.py::AuthStrategy_::authenticate::logs_sources_attempted",
      "tests/auth.py::AuthStrategy_::authenticate::raises_AuthFailure_if_no_successes",
      "tests/auth.py::AuthStrategy_::authenticate::short_circuits_on_successful_auth",
      "tests/pkey.py::PKey_::from_path::loads_from_str",
      "tests/pkey.py::PKey_::from_path::expands_user",
      "tests/pkey.py::PKey_::from_path::raises_UnknownKeyType_for_unknown_types",
      "tests/pkey.py::PKey_::from_path::leaves_cryptography_exceptions_untouched",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::existing_cert_loaded_when_given_key_path",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::can_be_given_cert_path_instead",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::no_cert_load_if_no_cert",
      "tests/pkey.py::PKey_::from_path::automatically_loads_certificates::excepts_usefully_if_no_key_only_cert",
      "tests/pkey.py::PKey_::load_certificate::rsa_public_cert_blobs",
      "tests/pkey.py::PKey_::load_certificate::loading_cert_of_different_type_from_key_raises_ValueError",
      "tests/pkey.py::PKey_::identifiers_classmethods::default_is_class_name_attribute",
      "tests/pkey.py::PKey_::identifiers_classmethods::rsa_is_all_combos_of_cert_and_sha_type",
      "tests/pkey.py::PKey_::identifiers_classmethods::dss_is_protocol_name",
      "tests/pkey.py::PKey_::identifiers_classmethods::ed25519_is_protocol_name",
      "tests/pkey.py::PKey_::identifiers_classmethods::ecdsa_is_all_curve_names",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_buffered_pipe",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_close_while_reading",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_delay",
      "tests/test_buffered_pipe.py::BufferedPipeTest::test_or_pipe",
      "tests/test_channelfile.py::TestChannelFile::test_defaults_to_unbuffered_reading",
      "tests/test_channelfile.py::TestChannelFile::test_can_override_mode_and_bufsize",
      "tests/test_channelfile.py::TestChannelFile::test_read_recvs_from_channel",
      "tests/test_channelfile.py::TestChannelFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStderrFile::test_read_calls_channel_recv_stderr",
      "tests/test_channelfile.py::TestChannelStderrFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStdinFile::test_defaults_to_unbuffered_reading",
      "tests/test_channelfile.py::TestChannelStdinFile::test_can_override_mode_and_bufsize",
      "tests/test_channelfile.py::TestChannelStdinFile::test_read_recvs_from_channel",
      "tests/test_channelfile.py::TestChannelStdinFile::test_write_calls_channel_sendall",
      "tests/test_channelfile.py::TestChannelStdinFile::test_close_calls_channel_shutdown_write",
      "tests/test_client.py::SSHClientTest::test_auth_timeout",
      "tests/test_client.py::SSHClientTest::test_auth_trickledown",
      "tests/test_client.py::SSHClientTest::test_auto_add_policy",
      "tests/test_client.py::SSHClientTest::test_banner_timeout",
      "tests/test_client.py::SSHClientTest::test_certs_allowed_as_key_filename_values",
      "tests/test_client.py::SSHClientTest::test_certs_implicitly_loaded_alongside_key_filename_keys",
      "tests/test_client.py::SSHClientTest::test_channel_timeout",
      "tests/test_client.py::SSHClientTest::test_client",
      "tests/test_client.py::SSHClientTest::test_client_dsa",
      "tests/test_client.py::SSHClientTest::test_client_ecdsa",
      "tests/test_client.py::SSHClientTest::test_client_ed25519",
      "tests/test_client.py::SSHClientTest::test_client_rsa",
      "tests/test_client.py::SSHClientTest::test_closes_socket_on_socket_errors",
      "tests/test_client.py::SSHClientTest::test_default_key_locations_trigger_cert_loads_if_found",
      "tests/test_client.py::SSHClientTest::test_disabled_algorithms_defaults_to_None",
      "tests/test_client.py::SSHClientTest::test_disabled_algorithms_passed_directly_if_given",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_1",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_2",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_3",
      "tests/test_client.py::SSHClientTest::test_host_key_negotiation_4",
      "tests/test_client.py::SSHClientTest::test_missing_key_policy_accepts_classes_or_instances",
      "tests/test_client.py::SSHClientTest::test_multiple_key_files",
      "tests/test_client.py::SSHClientTest::test_multiple_key_files_failure",
      "tests/test_client.py::SSHClientTest::test_newer_openssh_uses_rsa_sha2_for_certs_not_ssh_rsa",
      "tests/test_client.py::SSHClientTest::test_old_openssh_needs_ssh_rsa_for_certs_not_rsa_sha2",
      "tests/test_client.py::SSHClientTest::test_transport_factory_defaults_to_Transport",
      "tests/test_client.py::SSHClientTest::test_transport_factory_may_be_specified",
      "tests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_not_used_for_password_auth",
      "tests/test_client.py::PasswordPassphraseTests::test_passphrase_kwarg_used_for_key_passphrase",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_not_used_for_passphrase_when_passphrase_kwarg_given",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_used_for_passphrase_when_no_passphrase_kwarg_given",
      "tests/test_client.py::PasswordPassphraseTests::test_password_kwarg_works_for_password_auth",
      "tests/test_config.py::TestSSHConfig::test_init",
      "tests/test_config.py::TestSSHConfig::test_from_text",
      "tests/test_config.py::TestSSHConfig::test_from_file",
      "tests/test_config.py::TestSSHConfig::test_from_path",
      "tests/test_config.py::TestSSHConfig::test_parse_config",
      "tests/test_config.py::TestSSHConfig::test_host_config[irc.danger.com-values0]",
      "tests/test_config.py::TestSSHConfig::test_host_config[irc.example.com-values1]",
      "tests/test_config.py::TestSSHConfig::test_host_config[spoo.example.com-values2]",
      "tests/test_config.py::TestSSHConfig::test_fabric_issue_33",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_config_equals_parsing",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_interpolation",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_tilde_expansion",
      "tests/test_config.py::TestSSHConfig::test_proxyjump_token_expansion",
      "tests/test_config.py::TestSSHConfig::test_controlpath_token_expansion",
      "tests/test_config.py::TestSSHConfig::test_negation",
      "tests/test_config.py::TestSSHConfig::test_proxycommand",
      "tests/test_config.py::TestSSHConfig::test_identityfile",
      "tests/test_config.py::TestSSHConfig::test_config_addressfamily_and_lazy_fqdn",
      "tests/test_config.py::TestSSHConfig::test_config_dos_crlf_succeeds",
      "tests/test_config.py::TestSSHConfig::test_get_hostnames",
      "tests/test_config.py::TestSSHConfig::test_quoted_host_names",
      "tests/test_config.py::TestSSHConfig::test_quoted_params_in_config",
      "tests/test_config.py::TestSSHConfig::test_quoted_host_in_config",
      "tests/test_config.py::TestSSHConfig::test_invalid_line_format_excepts",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_none_issue_415",
      "tests/test_config.py::TestSSHConfig::test_proxycommand_none_masking",
      "tests/test_config.py::TestSSHConfig::test_hostname_tokenization",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_empty",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_from_list",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_construct_from_dict",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[yes]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[YES]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[Yes]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool_true_ish[True]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[no]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[NO]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[No]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_bool[False]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int[42_0]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int[42_1]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[not",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[None]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfigDict_as_int_failures[non_int2]",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfig_host_dicts_are_SSHConfigDict_instances",
      "tests/test_config.py::TestSSHConfigDict::test_SSHConfig_wildcard_host_dicts_are_SSHConfigDict_instances",
      "tests/test_config.py::TestHostnameCanonicalization::test_off_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_explicit_no_same_as_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-always]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-local]",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_base_cases[canon-local-always]",
      "tests/test_config.py::TestHostnameCanonicalization::test_uses_getaddrinfo_when_AddressFamily_given",
      "tests/test_config.py::TestHostnameCanonicalization::test_CanonicalDomains_may_be_set_to_space_separated_list",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_applies_to_single_dot_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_canonicalization_not_applied_to_two_dots_by_default",
      "tests/test_config.py::TestHostnameCanonicalization::test_hostname_depth_controllable_with_max_dots_directive",
      "tests/test_config.py::TestHostnameCanonicalization::test_max_dots_may_be_zero",
      "tests/test_config.py::TestHostnameCanonicalization::test_fallback_yes_does_not_canonicalize_or_error",
      "tests/test_config.py::TestHostnameCanonicalization::test_fallback_no_causes_errors_for_unresolvable_names",
      "tests/test_config.py::TestHostnameCanonicalization::test_identityfile_continues_being_appended_to",
      "tests/test_config.py::TestMatchAll::test_always_matches",
      "tests/test_config.py::TestMatchAll::test_may_not_mix_with_non_canonical_keywords",
      "tests/test_config.py::TestMatchAll::test_may_come_after_canonical",
      "tests/test_config.py::TestMatchAll::test_may_not_come_before_canonical",
      "tests/test_config.py::TestMatchAll::test_after_canonical_not_loaded_when_non_canonicalized",
      "tests/test_config.py::TestMatchExec::test_raises_invoke_ImportErrors_at_runtime",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[unquoted-rando]",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[quoted-benjamin]",
      "tests/test_config.py::TestMatchExec::test_accepts_single_possibly_quoted_argument[quoted",
      "tests/test_config.py::TestMatchExec::test_does_not_match_nonzero_exit_codes",
      "tests/test_config.py::TestMatchExec::test_tokenizes_argument",
      "tests/test_config.py::TestMatchExec::test_works_with_canonical",
      "tests/test_config.py::TestMatchExec::test_may_be_negated",
      "tests/test_config.py::TestMatchExec::test_requires_an_argument",
      "tests/test_config.py::TestMatchExec::test_works_with_tokenized_hostname",
      "tests/test_config.py::TestMatchHost::test_matches_target_name_when_no_hostname",
      "tests/test_config.py::TestMatchHost::test_matches_hostname_from_global_setting",
      "tests/test_config.py::TestMatchHost::test_matches_hostname_from_earlier_match",
      "tests/test_config.py::TestMatchHost::test_may_be_globbed",
      "tests/test_config.py::TestMatchHost::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchHost::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchHost::test_matches_canonicalized_name",
      "tests/test_config.py::TestMatchHost::test_works_with_canonical_keyword",
      "tests/test_config.py::TestMatchHost::test_may_be_negated",
      "tests/test_config.py::TestMatchHost::test_requires_an_argument",
      "tests/test_config.py::TestMatchOriginalHost::test_matches_target_host_not_hostname",
      "tests/test_config.py::TestMatchOriginalHost::test_matches_target_host_not_canonicalized_name",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_globbed",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchOriginalHost::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchOriginalHost::test_may_be_negated",
      "tests/test_config.py::TestMatchOriginalHost::test_requires_an_argument",
      "tests/test_config.py::TestMatchUser::test_matches_configured_username",
      "tests/test_config.py::TestMatchUser::test_matches_local_username_by_default",
      "tests/test_config.py::TestMatchUser::test_may_be_globbed",
      "tests/test_config.py::TestMatchUser::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchUser::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchUser::test_may_be_negated",
      "tests/test_config.py::TestMatchUser::test_requires_an_argument",
      "tests/test_config.py::TestMatchLocalUser::test_matches_local_username",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_globbed",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_comma_separated_list",
      "tests/test_config.py::TestMatchLocalUser::test_comma_separated_list_may_have_internal_negation",
      "tests/test_config.py::TestMatchLocalUser::test_may_be_negated",
      "tests/test_config.py::TestMatchLocalUser::test_requires_an_argument",
      "tests/test_config.py::TestComplexMatching::test_originalhost_host",
      "tests/test_config.py::TestComplexMatching::test_originalhost_localuser",
      "tests/test_config.py::TestComplexMatching::test_everything_but_all",
      "tests/test_config.py::TestComplexMatching::test_everything_but_all_with_some_negated",
      "tests/test_config.py::TestComplexMatching::test_negated_canonical",
      "tests/test_config.py::TestFinalMatching::test_finally",
      "tests/test_config.py::TestFinalMatching::test_default_port",
      "tests/test_config.py::TestFinalMatching::test_negated",
      "tests/test_file.py::BufferedFileTest::test_buffering_flushes",
      "tests/test_file.py::BufferedFileTest::test_flush",
      "tests/test_file.py::BufferedFileTest::test_lf",
      "tests/test_file.py::BufferedFileTest::test_read_all",
      "tests/test_file.py::BufferedFileTest::test_readable",
      "tests/test_file.py::BufferedFileTest::test_readinto",
      "tests/test_file.py::BufferedFileTest::test_readline",
      "tests/test_file.py::BufferedFileTest::test_simple",
      "tests/test_file.py::BufferedFileTest::test_writable",
      "tests/test_file.py::BufferedFileTest::test_write",
      "tests/test_file.py::BufferedFileTest::test_write_bad_type",
      "tests/test_file.py::BufferedFileTest::test_write_bytearray",
      "tests/test_file.py::BufferedFileTest::test_write_memoryview",
      "tests/test_file.py::BufferedFileTest::test_write_unicode_as_binary",
      "tests/test_hostkeys.py::HostKeysTest::test_delitem",
      "tests/test_hostkeys.py::HostKeysTest::test_entry_delitem",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_delitem",
      "tests/test_hostkeys.py::HostKeysTabsTest::test_entry_delitem",
      "tests/test_kex.py::KexTest::test_gex_client",
      "tests/test_kex.py::KexTest::test_gex_old_client",
      "tests/test_kex.py::KexTest::test_gex_server",
      "tests/test_kex.py::KexTest::test_gex_server_with_old_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_old_client",
      "tests/test_kex.py::KexTest::test_gex_sha256_server",
      "tests/test_kex.py::KexTest::test_gex_sha256_server_with_old_client",
      "tests/test_kex.py::KexTest::test_group1_client",
      "tests/test_kex.py::KexTest::test_group1_server",
      "tests/test_kex.py::KexTest::test_kex_c25519_client",
      "tests/test_kex.py::KexTest::test_kex_c25519_server",
      "tests/test_kex.py::KexTest::test_kex_group14_sha256_client",
      "tests/test_kex.py::KexTest::test_kex_group14_sha256_server",
      "tests/test_kex.py::KexTest::test_kex_group16_sha512_client",
      "tests/test_kex.py::KexTest::test_kex_group16_sha512_server",
      "tests/test_kex.py::KexTest::test_kex_nistp256_client",
      "tests/test_kex.py::KexTest::test_kex_nistp256_server",
      "tests/test_message.py::MessageTest::test_add",
      "tests/test_message.py::MessageTest::test_bytes_str_and_repr",
      "tests/test_message.py::MessageTest::test_decode",
      "tests/test_message.py::MessageTest::test_encode",
      "tests/test_message.py::MessageTest::test_misc",
      "tests/test_packetizer.py::PacketizerTest::test_closed",
      "tests/test_packetizer.py::PacketizerTest::test_read",
      "tests/test_packetizer.py::PacketizerTest::test_write",
      "tests/test_pkey.py::KeyTest::test_compare_dss",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_compare_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_compare_rsa",
      "tests/test_pkey.py::KeyTest::test_ed25519",
      "tests/test_pkey.py::KeyTest::test_ed25519_compare",
      "tests/test_pkey.py::KeyTest::test_ed25519_funky_padding",
      "tests/test_pkey.py::KeyTest::test_ed25519_funky_padding_with_passphrase",
      "tests/test_pkey.py::KeyTest::test_ed25519_load_from_file_obj",
      "tests/test_pkey.py::KeyTest::test_ed25519_nonbytes_password",
      "tests/test_pkey.py::KeyTest::test_existing_keyfiles_still_work_ok",
      "tests/test_pkey.py::KeyTest::test_generate_dss",
      "tests/test_pkey.py::KeyTest::test_generate_ecdsa",
      "tests/test_pkey.py::KeyTest::test_generate_key_bytes",
      "tests/test_pkey.py::KeyTest::test_generate_rsa",
      "tests/test_pkey.py::KeyTest::test_keyfile_is_actually_encrypted",
      "tests/test_pkey.py::KeyTest::test_load_dss",
      "tests/test_pkey.py::KeyTest::test_load_dss_password",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_256",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_384",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_password_521",
      "tests/test_pkey.py::KeyTest::test_load_ecdsa_transmutes_crypto_exceptions",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_DSS_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_EC_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_RSA_key",
      "tests/test_pkey.py::KeyTest::test_load_openssh_format_RSA_nopad",
      "tests/test_pkey.py::KeyTest::test_load_rsa",
      "tests/test_pkey.py::KeyTest::test_load_rsa_password",
      "tests/test_pkey.py::KeyTest::test_load_rsa_transmutes_crypto_exceptions",
      "tests/test_pkey.py::KeyTest::test_loading_empty_keys_errors_usefully",
      "tests/test_pkey.py::KeyTest::test_loading_openssh_RSA_keys_uses_correct_p_q",
      "tests/test_pkey.py::KeyTest::test_new_keyfiles_avoid_descriptor_race_integration",
      "tests/test_pkey.py::KeyTest::test_new_keyfiles_avoid_file_descriptor_race_on_chmod",
      "tests/test_pkey.py::KeyTest::test_salt_size",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_rsa_sha2_256",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_rsa_sha2_512",
      "tests/test_pkey.py::KeyTest::test_sign_and_verify_ssh_rsa",
      "tests/test_pkey.py::KeyTest::test_sign_dss",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_256",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_384",
      "tests/test_pkey.py::KeyTest::test_sign_ecdsa_521",
      "tests/test_pkey.py::KeyTest::test_stringification",
      "tests/test_proxy.py::TestProxyCommand::test_init_takes_command_string",
      "tests/test_proxy.py::TestProxyCommand::test_send_writes_to_process_stdin_returning_length",
      "tests/test_proxy.py::TestProxyCommand::test_send_raises_ProxyCommandFailure_on_error",
      "tests/test_proxy.py::TestProxyCommand::test_recv_reads_from_process_stdout_returning_bytes",
      "tests/test_proxy.py::TestProxyCommand::test_recv_returns_buffer_on_timeout_if_any_read",
      "tests/test_proxy.py::TestProxyCommand::test_recv_raises_timeout_if_nothing_read",
      "tests/test_proxy.py::TestProxyCommand::test_recv_raises_ProxyCommandFailure_on_non_timeout_error",
      "tests/test_proxy.py::TestProxyCommand::test_close_kills_subprocess",
      "tests/test_proxy.py::TestProxyCommand::test_closed_exposes_whether_subprocess_has_exited",
      "tests/test_proxy.py::TestProxyCommand::test_timeout_affects_whether_timeout_is_raised",
      "tests/test_proxy.py::TestProxyCommand::test_raises_subprocess_ImportErrors_at_runtime",
      "tests/test_sftp.py::TestSFTP::test_file",
      "tests/test_sftp.py::TestSFTP::test_close",
      "tests/test_sftp.py::TestSFTP::test_sftp_can_be_used_as_context_manager",
      "tests/test_sftp.py::TestSFTP::test_write",
      "tests/test_sftp.py::TestSFTP::test_sftp_file_can_be_used_as_context_manager",
      "tests/test_sftp.py::TestSFTP::test_append",
      "tests/test_sftp.py::TestSFTP::test_rename",
      "tests/test_sftp.py::TestSFTP::testa_posix_rename",
      "tests/test_sftp.py::TestSFTP::test_folder",
      "tests/test_sftp.py::TestSFTP::test_listdir",
      "tests/test_sftp.py::TestSFTP::test_listdir_iter",
      "tests/test_sftp.py::TestSFTP::test_listdir_in_locale",
      "tests/test_sftp.py::TestSFTP::test_setstat",
      "tests/test_sftp.py::TestSFTP::test_fsetstat",
      "tests/test_sftp.py::TestSFTP::test_readline_seek",
      "tests/test_sftp.py::TestSFTP::test_write_seek",
      "tests/test_sftp.py::TestSFTP::test_symlink",
      "tests/test_sftp.py::TestSFTP::test_flush_seek",
      "tests/test_sftp.py::TestSFTP::test_realpath",
      "tests/test_sftp.py::TestSFTP::test_mkdir",
      "tests/test_sftp.py::TestSFTP::test_chdir",
      "tests/test_sftp.py::TestSFTP::test_get_put",
      "tests/test_sftp.py::TestSFTP::test_get_without_prefetch",
      "tests/test_sftp.py::TestSFTP::test_check",
      "tests/test_sftp.py::TestSFTP::test_x_flag",
      "tests/test_sftp.py::TestSFTP::test_utf8",
      "tests/test_sftp.py::TestSFTP::test_utf8_chdir",
      "tests/test_sftp.py::TestSFTP::test_bad_readv",
      "tests/test_sftp.py::TestSFTP::test_put_without_confirm",
      "tests/test_sftp.py::TestSFTP::test_getcwd",
      "tests/test_sftp.py::TestSFTP::test_seek_append",
      "tests/test_sftp.py::TestSFTP::test_putfo_empty_file",
      "tests/test_sftp.py::TestSFTP::test_non_utf8_data",
      "tests/test_sftp.py::TestSFTP::test_sftp_attributes_locale_time",
      "tests/test_sftp.py::TestSFTP::test_sftp_attributes_empty_str",
      "tests/test_sftp.py::TestSFTP::test_write_memoryview",
      "tests/test_sftp_big.py::TestBigSFTP::test_lots_of_files",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_pipelined",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_seek",
      "tests/test_sftp_big.py::TestBigSFTP::test_readv_seek",
      "tests/test_sftp_big.py::TestBigSFTP::test_lots_of_prefetching",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_readv",
      "tests/test_sftp_big.py::TestBigSFTP::test_large_readv",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_big_buffer",
      "tests/test_sftp_big.py::TestBigSFTP::test_big_file_renegotiate",
      "tests/test_sftp_big.py::TestBigSFTP::test_prefetch_limit",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_multiple_hosts",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_single_host",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_error_message_for_two_hosts",
      "tests/test_ssh_exception.py::NoValidConnectionsErrorTest::test_pickling",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_BadAuthenticationType",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_BadHostKeyException",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_ChannelException",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_PartialAuthentication",
      "tests/test_ssh_exception.py::ExceptionStringDisplayTest::test_ProxyCommandFailure",
      "tests/test_transport.py::TransportTest::test_can_override_packetizer_used",
      "tests/test_transport.py::TransportTest::test_channel_can_be_used_as_context_manager",
      "tests/test_transport.py::TransportTest::test_channel_exception",
      "tests/test_transport.py::TransportTest::test_channel_send_memoryview",
      "tests/test_transport.py::TransportTest::test_channel_send_misc",
      "tests/test_transport.py::TransportTest::test_client_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::TransportTest::test_compression",
      "tests/test_transport.py::TransportTest::test_compute_key",
      "tests/test_transport.py::TransportTest::test_exec_command",
      "tests/test_transport.py::TransportTest::test_exit_status",
      "tests/test_transport.py::TransportTest::test_handshake_timeout",
      "tests/test_transport.py::TransportTest::test_invoke_shell",
      "tests/test_transport.py::TransportTest::test_keepalive",
      "tests/test_transport.py::TransportTest::test_long_banner",
      "tests/test_transport.py::TransportTest::test_port_forwarding",
      "tests/test_transport.py::TransportTest::test_rekey_deadlock",
      "tests/test_transport.py::TransportTest::test_renegotiate",
      "tests/test_transport.py::TransportTest::test_reverse_port_forwarding",
      "tests/test_transport.py::TransportTest::test_sanitze_packet_size",
      "tests/test_transport.py::TransportTest::test_sanitze_window_size",
      "tests/test_transport.py::TransportTest::test_security_options",
      "tests/test_transport.py::TransportTest::test_select",
      "tests/test_transport.py::TransportTest::test_select_after_close",
      "tests/test_transport.py::TransportTest::test_send_ready",
      "tests/test_transport.py::TransportTest::test_server_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::TransportTest::test_server_rejects_arbitrary_global_request_without_auth",
      "tests/test_transport.py::TransportTest::test_server_rejects_client_MSG_USERAUTH_SUCCESS",
      "tests/test_transport.py::TransportTest::test_server_rejects_open_channel_without_auth",
      "tests/test_transport.py::TransportTest::test_server_rejects_port_forward_without_auth",
      "tests/test_transport.py::TransportTest::test_server_transports_reject_client_message_types",
      "tests/test_transport.py::TransportTest::test_simple",
      "tests/test_transport.py::TransportTest::test_special",
      "tests/test_transport.py::TransportTest::test_stderr_select",
      "tests/test_transport.py::TransportTest::test_x11",
      "tests/test_transport.py::TransportTest::testb_security_options_reset",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_can_override_packetizer_used",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_can_be_used_as_context_manager",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_exception",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_send_memoryview",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_channel_send_misc",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_client_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_compression",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_compute_key",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_exec_command",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_exit_status",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_handshake_timeout",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_invoke_shell",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_keepalive",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_long_banner",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_port_forwarding",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_rekey_deadlock",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_renegotiate",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_reverse_port_forwarding",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_sanitze_packet_size",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_sanitze_window_size",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_security_options",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_select",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_select_after_close",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_send_ready",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_does_not_respond_to_MSG_UNIMPLEMENTED",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_arbitrary_global_request_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_client_MSG_USERAUTH_SUCCESS",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_open_channel_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_rejects_port_forward_without_auth",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_server_transports_reject_client_message_types",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_simple",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_special",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_stderr_select",
      "tests/test_transport.py::ServiceRequestingTransportTest::test_x11",
      "tests/test_transport.py::ServiceRequestingTransportTest::testb_security_options_reset",
      "tests/test_transport.py::AlgorithmDisablingTests::test_implementation_refers_to_public_algo_lists",
      "tests/test_transport.py::AlgorithmDisablingTests::test_preferred_lists_default_to_private_attribute_contents",
      "tests/test_transport.py::AlgorithmDisablingTests::test_preferred_lists_filter_disabled_algorithms",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_base_case_ssh_rsa_still_used_as_fallback",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_client_sha1_disabled_server_sha2_disabled_no_match",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_client_sha2_disabled_server_sha1_disabled_no_match",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_explicit_client_hostkey_not_limited",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_kex_with_sha2_256",
      "tests/test_transport.py::TestSHA2SignatureKeyExchange::test_kex_with_sha2_512",
      "tests/test_transport.py::TestExtInfo::test_client_uses_server_sig_algs_for_pubkey_auth",
      "tests/test_transport.py::TestExtInfo::test_ext_info_handshake_exposed_in_client_kexinit",
      "tests/test_transport.py::TestStrictKex::test_kex_algos_includes_kex_strict_c",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[True-True]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[True-False]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[False-True]",
      "tests/test_transport.py::TestStrictKex::test_mode_agreement[False-False]",
      "tests/test_transport.py::TestStrictKex::test_mode_advertised_by_default",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[90]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[2]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[4]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[3]",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_non_kex_messages_in_initial_kex[253]",
      "tests/test_transport.py::TestStrictKex::test_SSHException_raised_on_out_of_order_messages_when_not_strict",
      "tests/test_transport.py::TestStrictKex::test_error_not_raised_when_kexinit_not_seq_0_but_unstrict",
      "tests/test_transport.py::TestStrictKex::test_MessageOrderError_raised_when_kexinit_not_seq_0_and_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_numbers_reset_on_newkeys_when_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_numbers_not_reset_on_newkeys_when_not_strict",
      "tests/test_transport.py::TestStrictKex::test_sequence_number_rollover_detected",
      "tests/test_util.py::UtilTest::test_clamp_value",
      "tests/test_util.py::UtilTest::test_generate_key_bytes",
      "tests/test_util.py::UtilTest::test_imports",
      "tests/test_util.py::UtilTest::test_safe_string"
    ],
    "created_at": "2025-06-19T18:37:34.240293",
    "image_name": "swesmith.x86_64.paramiko__paramiko.23f92003",
    "base_commit": "main",
    "problem_statement": "HostKeys.keys() is leaking state between objects / calls  \nDescription\n\nHey folks,\n\nwhile poking around in some connection\u2013cleanup code I noticed an odd increase in the number of entries reported by `SSHClient.get_host_keys()`. At first I thought I was accidentally re-using the same client instance, but after a bit of digging it turns out the underlying `HostKeys.keys()` helper seems to be holding on to data from previous invocations.\n\nWhat I\u2019m seeing\n---------------\n\n1. Spin up an `SSHClient`, add a single host key, close the client.  \n2. Create a *brand-new* `SSHClient` in a fresh variable.  \n3. Call `get_host_keys()` on the second client \u2192 it already reports the host we added in step 1, even though the new client should start with an empty store.\n\nQuick repro\n-----------\n\n```python\nimport paramiko\nfrom io import BytesIO\n\ndummy_key = paramiko.RSAKey.generate(512)\n\ndef demo():\n    # first client\n    c1 = paramiko.SSHClient()\n    c1.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    assert len(c1.get_host_keys()) == 0          # passes\n    c1.get_host_keys().add('example.com', 'ssh-rsa', dummy_key)\n    assert len(c1.get_host_keys()) == 1          # passes\n\n    # second client \u2013 totally fresh\n    c2 = paramiko.SSHClient()\n    c2.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    print(\"unexpected size:\", len(c2.get_host_keys()))\n    print(\"hosts:\", list(c2.get_host_keys().keys()))\n\nif __name__ == \"__main__\":\n    demo()\n```\n\nExpected output:\n\n```\nunexpected size: 0\nhosts: []\n```\n\nActual output on current `main` (commit 16f8dbd):\n\n```\nunexpected size: 1\nhosts: ['example.com']\n```\n\nAdditional observations\n-----------------------\n\n\u2022 The leak only appears after *any* call to `HostKeys.keys()`; the first call seeds some internal cache that subsequent objects pick up.  \n\u2022 Calling `HostKeys.keys()` repeatedly also keeps appending duplicates, so `len(hk)` remains constant while `len(hk.keys())` keeps growing.  \n\u2022 This can break equality checks like `list(hk) == hk.keys()` and causes `len(HostKeys)` to diverge from `len(HostKeys.keys())`.\n\nWould appreciate another pair of eyes on this \u2013 I suspect it\u2019s a tiny oversight in `hostkeys.py`, but it makes host-key management pretty confusing right now.\n\nThanks!"
  },
  {
    "instance_id": "google__textfsm.c31b6007.sweagent_buggen__706c2b10",
    "repo": "swesmith/google__textfsm.c31b6007",
    "patch": "diff --git a/textfsm/clitable.py b/textfsm/clitable.py\nindex c7ad7a7..eb93848 100755\n--- a/textfsm/clitable.py\n+++ b/textfsm/clitable.py\n@@ -381,11 +381,18 @@ class CliTable(texttable.TextTable):\n \n   @property\n   def superkey(self):\n-    \"\"\"Returns a set of column names that together constitute the superkey.\"\"\"\n+    \"\"\"Returns a set of column names that together constitute the superkey.\n+\n+    Implements a lightweight cache to avoid recomputing on successive calls.\n+    \"\"\"\n+    if hasattr(self, '_superkey_cache'):\n+      return self._superkey_cache\n     sorted_list = []\n     for header in self.header:\n       if header in self._keys:\n         sorted_list.append(header)\n+    # Store cache for subsequent fast retrieval.\n+    self._superkey_cache = sorted_list\n     return sorted_list\n \n   def KeyValue(self, row=None):\ndiff --git a/textfsm/texttable.py b/textfsm/texttable.py\nindex 5af6be6..7f5f87e 100755\n--- a/textfsm/texttable.py\n+++ b/textfsm/texttable.py\n@@ -905,7 +905,12 @@ class TextTable(object):\n     Raises:\n       TableError: If specified label is not a column header of the table.\n     \"\"\"\n-    label_list = label_list or self._Header()[0]\n+    # Cache previous label_list to allow for repeat calls without explicit labels.\n+    if label_list is None:\n+      # Re-use the previously requested label list if present; otherwise default to first header.\n+      label_list = getattr(self, '_last_label_list', self._Header()[0])\n+    # Store for potential reuse on subsequent invocations.\n+    self._last_label_list = label_list\n     # Ensure all labels are valid.\n     for label in label_list:\n       if label not in self._Header():\n",
    "FAIL_TO_PASS": [
      "tests/clitable_test.py::UnitTestCliTable::testAddKey",
      "tests/clitable_test.py::UnitTestCliTable::testKeyValue",
      "tests/clitable_test.py::UnitTestCliTable::testSuperKey",
      "tests/clitable_test.py::UnitTestCliTable::testTableSort"
    ],
    "PASS_TO_PASS": [
      "tests/clitable_test.py::UnitTestIndexTable::testCopy",
      "tests/clitable_test.py::UnitTestIndexTable::testGetRowMatch",
      "tests/clitable_test.py::UnitTestIndexTable::testParseIndex",
      "tests/clitable_test.py::UnitTestCliTable::testCliCompile",
      "tests/clitable_test.py::UnitTestCliTable::testCompletion",
      "tests/clitable_test.py::UnitTestCliTable::testCopy",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmd",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdFromIndex",
      "tests/clitable_test.py::UnitTestCliTable::testParseCmdItem",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithMultiTemplates",
      "tests/clitable_test.py::UnitTestCliTable::testParseWithTemplate",
      "tests/clitable_test.py::UnitTestCliTable::testRepeatRead",
      "tests/clitable_test.py::UnitTestCliTable::testRequireCols",
      "tests/terminal_test.py::TerminalTest::testAnsiCmd",
      "tests/terminal_test.py::TerminalTest::testAnsiText",
      "tests/terminal_test.py::TerminalTest::testEncloseAnsi",
      "tests/terminal_test.py::TerminalTest::testIssue1",
      "tests/terminal_test.py::TerminalTest::testLineWrap",
      "tests/terminal_test.py::TerminalTest::testStripAnsi",
      "tests/terminal_test.py::PagerTest::testPage",
      "tests/terminal_test.py::PagerTest::testPager",
      "tests/textfsm_test.py::UnitTestFSM::testClear",
      "tests/textfsm_test.py::UnitTestFSM::testContinue",
      "tests/textfsm_test.py::UnitTestFSM::testEOF",
      "tests/textfsm_test.py::UnitTestFSM::testEnd",
      "tests/textfsm_test.py::UnitTestFSM::testError",
      "tests/textfsm_test.py::UnitTestFSM::testFSMRule",
      "tests/textfsm_test.py::UnitTestFSM::testFSMValue",
      "tests/textfsm_test.py::UnitTestFSM::testFillup",
      "tests/textfsm_test.py::UnitTestFSM::testGetValuesByAttrib",
      "tests/textfsm_test.py::UnitTestFSM::testImplicitDefaultRules",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testInvalidStates",
      "tests/textfsm_test.py::UnitTestFSM::testKey",
      "tests/textfsm_test.py::UnitTestFSM::testList",
      "tests/textfsm_test.py::UnitTestFSM::testNestedMatching",
      "tests/textfsm_test.py::UnitTestFSM::testNestedNameConflict",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMState",
      "tests/textfsm_test.py::UnitTestFSM::testParseFSMVariables",
      "tests/textfsm_test.py::UnitTestFSM::testParseNullText",
      "tests/textfsm_test.py::UnitTestFSM::testParseText",
      "tests/textfsm_test.py::UnitTestFSM::testParseTextToDicts",
      "tests/textfsm_test.py::UnitTestFSM::testReEnteringState",
      "tests/textfsm_test.py::UnitTestFSM::testReset",
      "tests/textfsm_test.py::UnitTestFSM::testRulePrefixes",
      "tests/textfsm_test.py::UnitTestFSM::testRuleStartsWithCarrot",
      "tests/textfsm_test.py::UnitTestFSM::testSpacesAroundAction",
      "tests/textfsm_test.py::UnitTestFSM::testStateChange",
      "tests/textfsm_test.py::UnitTestFSM::testTextFSM",
      "tests/textfsm_test.py::UnitTestFSM::testValidRegexp",
      "tests/textfsm_test.py::UnitTestFSM::testValidateFSM",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMRule",
      "tests/textfsm_test.py::UnitTestUnicode::testFSMValue",
      "tests/textfsm_test.py::UnitTestUnicode::testTemplateValue",
      "tests/texttable_test.py::UnitTestRow::testHeader",
      "tests/texttable_test.py::UnitTestRow::testIndex",
      "tests/texttable_test.py::UnitTestRow::testRowBasicMethods",
      "tests/texttable_test.py::UnitTestRow::testRowPublicMethods",
      "tests/texttable_test.py::UnitTestRow::testSetValues",
      "tests/texttable_test.py::UnitTestRow::testValue",
      "tests/texttable_test.py::UnitTestTextTable::testAddColumn",
      "tests/texttable_test.py::UnitTestTextTable::testAddTable",
      "tests/texttable_test.py::UnitTestTextTable::testAppend",
      "tests/texttable_test.py::UnitTestTextTable::testContains",
      "tests/texttable_test.py::UnitTestTextTable::testCsvToTable",
      "tests/texttable_test.py::UnitTestTextTable::testCustomRow",
      "tests/texttable_test.py::UnitTestTextTable::testDeleteRow",
      "tests/texttable_test.py::UnitTestTextTable::testExtendTable",
      "tests/texttable_test.py::UnitTestTextTable::testFilter",
      "tests/texttable_test.py::UnitTestTextTable::testFilterNone",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTable2",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColor",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredCells",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredHeaders",
      "tests/texttable_test.py::UnitTestTextTable::testFormattedTableColoredMultilineCells",
      "tests/texttable_test.py::UnitTestTextTable::testHeaderIndex",
      "tests/texttable_test.py::UnitTestTextTable::testIteration",
      "tests/texttable_test.py::UnitTestTextTable::testMap",
      "tests/texttable_test.py::UnitTestTextTable::testRowNumberandParent",
      "tests/texttable_test.py::UnitTestTextTable::testSmallestColSize",
      "tests/texttable_test.py::UnitTestTextTable::testSortTable",
      "tests/texttable_test.py::UnitTestTextTable::testTableGetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableRepr",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowDictWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowListWithInt",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowTypes",
      "tests/texttable_test.py::UnitTestTextTable::testTableRowWith",
      "tests/texttable_test.py::UnitTestTextTable::testTableSetRow",
      "tests/texttable_test.py::UnitTestTextTable::testTableStr",
      "tests/texttable_test.py::UnitTestTextTable::testTableWithLabels",
      "tests/texttable_test.py::UnitTestTextTable::testTextJustify"
    ],
    "created_at": "2025-06-19T18:37:22.048609",
    "image_name": "swesmith.x86_64.google__textfsm.c31b6007",
    "base_commit": "main",
    "problem_statement": "superkey stays frozen after calling AddKeys(), causes wrong key look-ups & sort order  \nDescription\n\nI pulled the current HEAD this morning and noticed that tables that used to sort correctly suddenly come out in the wrong order. After a little digging I realised the list returned by CliTable.superkey doesn\u2019t get refreshed once new key columns are added. Anything that depends on that list (KeyValue(), LabelValueTable(), sort(), \u2026) is now working with an outdated key set.\n\nHow to reproduce (minimal):\n\n```python\nimport io\nfrom textfsm import clitable\n\n# minimal template \u2013 three simple values.\nTEMPLATE = r\"\"\"\nValue Col1 (\\S+)\nValue Col2 (\\S+)\nValue Col3 (\\S+)\n\nStart\n  ^${Col1} ${Col2} ${Col3} -> Record\n\"\"\"\n\nRAW = \"a b c\\nd e f\\n\"\n\ncli = clitable.CliTable(index_file=None, template_dir=None)\ncli._TemplateNamesToFiles = lambda _: [io.StringIO(TEMPLATE)]\n\ncli.ParseCmd(RAW, attributes={\"Command\": \"sh ver\"})\n\n# 1) initial key comes from the template, works fine\nprint(\"initial superkey :\", cli.superkey)\n# ['Col1']\n\n# 2) extend keys\ncli.AddKeys([\"Col2\"])\nprint(\"after AddKeys    :\", cli.superkey)\n# expected: ['Col1', 'Col2']\n# actual  : ['Col1']          <-- stale!\n\n# 3) consequences\nprint(\"KeyValue()       :\", cli.KeyValue())\ncli.sort()\nprint(\"table after sort :\\n\", cli.table)\n```\n\nObserved behaviour\n- `superkey` never changes after the first call.\n- `KeyValue()` keeps returning values only for the original key(s).\n- `CliTable.sort()` keeps using the partially-updated key list, so rows are sorted incorrectly (or not at all) when additional keys are added later.\n\nExpected behaviour\n`superkey` should always reflect the current content of `self._keys`, i.e. return `['Col1', 'Col2']` immediately after `AddKeys([\"Col2\"])` (and likewise after any other operation that mutates the key set).\n\nNotes\nThe same issue shows up when keys are cleared (`self._keys = set()`) or when a new template with a different key definition is parsed \u2014 once the first `superkey` call is made, the value appears to be cached forever.\n\nThanks for taking a look!"
  },
  {
    "instance_id": "pyupio__safety.7654596b.sweagent_buggen__fc94ff6b",
    "repo": "swesmith/pyupio__safety.7654596b",
    "patch": "diff --git a/safety/output_utils.py b/safety/output_utils.py\nindex 0ebb928..e71cd44 100644\n--- a/safety/output_utils.py\n+++ b/safety/output_utils.py\n@@ -1082,6 +1082,9 @@ def should_add_nl(output: str, found_vulns: bool) -> bool:\n     Returns:\n         bool: True if a newline should be added, False otherwise.\n     \"\"\"\n+    if isinstance(found_vulns, list) and found_vulns:\n+        found_vulns.pop(0)\n+\n     if output == 'bare' and not found_vulns:\n         return False\n \n",
    "FAIL_TO_PASS": [
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_found_default",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_found_with_outputs"
    ],
    "PASS_TO_PASS": [
      "tests/test_cli.py::TestSafetyCLI::test_announcements_if_is_not_tty",
      "tests/test_cli.py::TestSafetyCLI::test_basic_html_output_pass",
      "tests/test_cli.py::TestSafetyCLI::test_check_continue_on_error",
      "tests/test_cli.py::TestSafetyCLI::test_check_ignore_format_backward_compatible",
      "tests/test_cli.py::TestSafetyCLI::test_check_ignore_unpinned_requirements",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_not_found_default",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_not_found_with_outputs",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix_does_verify_api_key",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix_only_works_with_files",
      "tests/test_cli.py::TestSafetyCLI::test_command_line_interface",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag_with_value_1",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag_with_value_true",
      "tests/test_cli.py::TestSafetyCLI::test_generate_pass",
      "tests/test_cli.py::TestSafetyCLI::test_generate_with_unsupported_argument",
      "tests/test_cli.py::TestSafetyCLI::test_generate_with_wrong_path",
      "tests/test_cli.py::TestSafetyCLI::test_license_with_file",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_basic_policy_file",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_policy_file_using_invalid_keyword",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_policy_file_using_invalid_typo_keyword",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_unsupported_argument",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_wrong_path",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry_access_denied",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry_request_exception",
      "tests/test_cli.py::TestConfigureLogger::test_configure_logger_debug",
      "tests/test_cli.py::TestConfigureLogger::test_configure_logger_non_debug",
      "tests/test_models.py::TestSafetyRequirement::test_with_invalid_input",
      "tests/test_output_utils.py::TestOutputUtils::test_build_remediation_section_with_api_key",
      "tests/test_output_utils.py::TestOutputUtils::test_build_remediation_section_without_api_key",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability_with_dep_spec",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability_with_ignored_vulnerability",
      "tests/test_output_utils.py::TestOutputUtils::test_get_final_brief_license",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_no_other_recommended_versions",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_with_one_other_recommended_version",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_with_other_recommended_versions",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_environment",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_file",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_files",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_stdin",
      "tests/test_safety.py::TestSafety::test_calculate_remediations",
      "tests/test_safety.py::TestSafety::test_check_from_file",
      "tests/test_safety.py::TestSafety::test_check_from_file_with_hash_pins",
      "tests/test_safety.py::TestSafety::test_check_ignores",
      "tests/test_safety.py::TestSafety::test_check_live",
      "tests/test_safety.py::TestSafety::test_check_live_cached",
      "tests/test_safety.py::TestSafety::test_compute_sec_ver",
      "tests/test_safety.py::TestSafety::test_dont_ignore_vulns_by_unknown_severity",
      "tests/test_safety.py::TestSafety::test_get_announcements_catch_request_exceptions",
      "tests/test_safety.py::TestSafety::test_get_announcements_catch_unhandled_http_codes",
      "tests/test_safety.py::TestSafety::test_get_announcements_http_ok",
      "tests/test_safety.py::TestSafety::test_get_announcements_wrong_json_response_handling",
      "tests/test_safety.py::TestSafety::test_get_cached_packages_licenses",
      "tests/test_safety.py::TestSafety::test_get_closest_ver",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_db_fetch_error",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_very_often",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_with_invalid_api_key",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_with_invalid_db_file",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_without_api_key",
      "tests/test_safety.py::TestSafety::test_ignore_vulns_by_base_score",
      "tests/test_safety.py::TestSafety::test_ignore_vulns_by_unknown_severity",
      "tests/test_safety.py::TestSafety::test_multiple_versions",
      "tests/test_safety.py::TestSafety::test_precompute_remediations",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities_decode_error",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities_type_error",
      "tests/test_safety.py::TestSafety::test_report_licenses_bare",
      "tests/test_safety.py::TestSafety::test_report_licenses_json",
      "tests/test_safety.py::TestSafety::test_report_with_recommended_fix",
      "tests/test_safety.py::TestSafety::test_review_without_recommended_fix",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_continue_on_error_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_exit_code_partial_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_ignore_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_ignore_partial_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_log_used_options_with_argv",
      "tests/test_util.py::ReadRequirementsTestCase::test_recursive_requirement",
      "tests/test_util.py::ReadRequirementsTestCase::test_recursive_requirement_pinned_after_unpinned",
      "tests/test_util.py::ReadRequirementsTestCase::test_transform_ignore",
      "tests/test_util.py::ReadRequirementsTestCase::test_transform_ignore_mixed_arguments",
      "tests/test_util.py::ReadRequirementsTestCase::test_unpinned_vcs_requirement",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_critical_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_high_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_invalid_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_low_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_medium_score",
      "tests/alerts/test_utils.py::TestUtils::test_generate_branch_name_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_branch_name_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_issue_title_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_issue_title_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_title_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_title_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_highest_base_score",
      "tests/alerts/test_utils.py::TestUtils::test_highest_base_score_with_an_unknown_cvssv3",
      "tests/auth/test_cli.py::TestSafetyAuthCLI::test_auth_calls_login",
      "tests/auth/test_main.py::TestMain::test_get_authorization_data",
      "tests/auth/test_main.py::TestMain::test_get_logout_url",
      "tests/auth/test_main.py::TestMain::test_get_organization",
      "tests/auth/test_main.py::TestMain::test_get_redirect_url",
      "tests/formatters/test_json.py::TestJSONFormatter::test_render_vulnerabilities_with_remediations",
      "tests/scan/test_command.py::TestScanCommand::test_scan",
      "tests/scan/test_file_finder.py::TestShouldExclude::test_should_exclude",
      "tests/scan/test_file_finder.py::TestFileFinder::test_process_directory",
      "tests/scan/test_file_finder.py::TestFileFinder::test_search",
      "tests/scan/test_file_handlers.py::test_download_required_assets",
      "tests/scan/test_file_handlers.py::test_download_required_assets_no_db_dir",
      "tests/scan/test_render.py::TestRender::test_print_announcements",
      "tests/scan/test_render.py::TestRender::test_print_summary",
      "tests/scan/test_render.py::TestRender::test_render_header",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_fail_on_disabled",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_known_severity_failure",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_severity_none",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_severity_none_with_fail_on_unknow_none",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_unexpected_severity_with_warning"
    ],
    "created_at": "2025-06-19T18:37:40.461397",
    "image_name": "swesmith.x86_64.pyupio__safety.7654596b",
    "base_commit": "main",
    "problem_statement": "`check` no longer returns the \u201cvulns-found\u201d exit status when only one vulnerability is present\nDescription\n \n\t(last spotted by running the CLI from a script)\n \nSince upgrading to the latest commit, the `safety check` command always ends with a success exit code when it detects exactly one vulnerability. This breaks automation that relies on the traditional *64* \u201cvulnerabilities found\u201d status.\n\nA minimal example\n-----------------\n1. Create a dummy project with a single, well-known vulnerable pin:\n\n```\n# requirements.txt\nurllib3==1.24\n```\n\n2. Run the check:\n\n```bash\n$ safety check --key <free_key> -r requirements.txt\n$ echo $?\n0     # \u2190 used to be 64\n```\n\n3. Add a second vulnerable requirement and run again:\n\n```\n# requirements.txt\nurllib3==1.24\npyyaml==5.3\n```\n\n```bash\n$ safety check --key <free_key> -r requirements.txt\n$ echo $?\n64    # exit status is correct once more than one vuln is reported\n```\n\nWhat I expected\n---------------\n`$?` should be **64** whenever *any* vulnerability is found, independent of the number of items in the report.\n\nWhat actually happened\n----------------------\nThe exit code is **0** (success) if the report contains one and only one vulnerability, which causes CI pipelines to pass silently.\n\nEnvironment\n-----------\n\u2022 safety 3.0.0-dev (commit 76f25af)  \n\u2022 Python 3.10.12  \n\u2022 macOS 14 / Ubuntu 22.04 (both reproduce)  \n\nAdditional notes\n----------------\nThe HTML/JSON output looks fine; the problem seems limited to the status code logic (and only when exactly one vulnerability is returned)."
  },
  {
    "instance_id": "rubik__radon.54b88e58.sweagent_buggen__c3d676bc",
    "repo": "swesmith/rubik__radon.54b88e58",
    "patch": "diff --git a/radon/cli/colors.py b/radon/cli/colors.py\nindex b1c6e4e..5aee128 100644\n--- a/radon/cli/colors.py\n+++ b/radon/cli/colors.py\n@@ -8,10 +8,16 @@ import sys\n \n def color_enabled():\n     COLOR_ENV = os.getenv('COLOR', 'auto')\n-    if COLOR_ENV == 'auto' and sys.stdout.isatty():\n-        return True\n+    if COLOR_ENV == 'auto':\n+        if hasattr(color_enabled, '_cache'):\n+            return color_enabled._cache\n+        result = bool(sys.stdout.isatty())\n+        color_enabled._cache = result\n+        return result\n+\n     if COLOR_ENV == 'yes':\n         return True\n+\n     return False\n \n \n",
    "FAIL_TO_PASS": [
      "radon/tests/test_cli_colors.py::test_color_enabled_auto"
    ],
    "PASS_TO_PASS": [
      "radon/tests/test_cli.py::test_config_base_behavior",
      "radon/tests/test_cli.py::test_config_exceptions",
      "radon/tests/test_cli.py::test_config_str",
      "radon/tests/test_cli.py::test_config_eq",
      "radon/tests/test_cli.py::test_config_for",
      "radon/tests/test_cli.py::test_config_converts_types",
      "radon/tests/test_cli.py::test_cc",
      "radon/tests/test_cli.py::test_raw",
      "radon/tests/test_cli.py::test_mi",
      "radon/tests/test_cli.py::test_encoding",
      "radon/tests/test_cli.py::test_log",
      "radon/tests/test_cli.py::test_log_list",
      "radon/tests/test_cli.py::test_log_error",
      "radon/tests/test_cli.py::test_log_result",
      "radon/tests/test_cli_colors.py::test_color_enabled_yes",
      "radon/tests/test_cli_colors.py::test_color_enabled_no",
      "radon/tests/test_cli_harvest.py::test_base_iter_filenames",
      "radon/tests/test_cli_harvest.py::test_base_gobble_not_implemented",
      "radon/tests/test_cli_harvest.py::test_base_as_xml_not_implemented",
      "radon/tests/test_cli_harvest.py::test_base_as_md_not_implemented",
      "radon/tests/test_cli_harvest.py::test_base_to_terminal_not_implemented",
      "radon/tests/test_cli_harvest.py::test_base_run",
      "radon/tests/test_cli_harvest.py::test_base_results",
      "radon/tests/test_cli_harvest.py::test_base_as_json",
      "radon/tests/test_cli_harvest.py::test_cc_gobble",
      "radon/tests/test_cli_harvest.py::test_cc_to_dicts",
      "radon/tests/test_cli_harvest.py::test_cc_as_json_xml",
      "radon/tests/test_cli_harvest.py::test_cc_as_md",
      "radon/tests/test_cli_harvest.py::test_cc_to_terminal",
      "radon/tests/test_cli_harvest.py::test_raw_gobble",
      "radon/tests/test_cli_harvest.py::test_raw_as_xml",
      "radon/tests/test_cli_harvest.py::test_raw_to_terminal",
      "radon/tests/test_cli_harvest.py::test_mi_gobble",
      "radon/tests/test_cli_harvest.py::test_mi_as_json",
      "radon/tests/test_cli_harvest.py::test_mi_as_xml",
      "radon/tests/test_cli_harvest.py::test_mi_to_terminal",
      "radon/tests/test_cli_tools.py::test_open",
      "radon/tests/test_cli_tools.py::test_iter_files_stdin",
      "radon/tests/test_cli_tools.py::test_iter_files",
      "radon/tests/test_cli_tools.py::test_cc_to_dict[blocks0-dict_result0]",
      "radon/tests/test_cli_tools.py::test_cc_to_dict[blocks1-dict_result1]",
      "radon/tests/test_cli_tools.py::test_cc_to_dict[blocks2-dict_result2]",
      "radon/tests/test_cli_tools.py::test_raw_to_dict",
      "radon/tests/test_cli_tools.py::test_cc_to_xml",
      "radon/tests/test_cli_tools.py::test_cc_to_md",
      "radon/tests/test_cli_tools.py::test_cc_error_to_codeclimate",
      "radon/tests/test_cli_tools.py::test_cc_to_codeclimate",
      "radon/tests/test_cli_tools.py::test_cc_to_terminal",
      "radon/tests/test_complexity_utils.py::test_rank[-1-ValueError]",
      "radon/tests/test_complexity_utils.py::test_rank[0-A]",
      "radon/tests/test_complexity_utils.py::test_rank[1-A]",
      "radon/tests/test_complexity_utils.py::test_rank[2-A]",
      "radon/tests/test_complexity_utils.py::test_rank[3-A]",
      "radon/tests/test_complexity_utils.py::test_rank[4-A]",
      "radon/tests/test_complexity_utils.py::test_rank[5-A]",
      "radon/tests/test_complexity_utils.py::test_rank[6-B]",
      "radon/tests/test_complexity_utils.py::test_rank[7-B]",
      "radon/tests/test_complexity_utils.py::test_rank[8-B]",
      "radon/tests/test_complexity_utils.py::test_rank[9-B]",
      "radon/tests/test_complexity_utils.py::test_rank[10-B]",
      "radon/tests/test_complexity_utils.py::test_rank[11-C]",
      "radon/tests/test_complexity_utils.py::test_rank[12-C]",
      "radon/tests/test_complexity_utils.py::test_rank[13-C]",
      "radon/tests/test_complexity_utils.py::test_rank[14-C]",
      "radon/tests/test_complexity_utils.py::test_rank[15-C]",
      "radon/tests/test_complexity_utils.py::test_rank[16-C]",
      "radon/tests/test_complexity_utils.py::test_rank[17-C]",
      "radon/tests/test_complexity_utils.py::test_rank[18-C]",
      "radon/tests/test_complexity_utils.py::test_rank[19-C]",
      "radon/tests/test_complexity_utils.py::test_rank[20-C]",
      "radon/tests/test_complexity_utils.py::test_rank[21-D]",
      "radon/tests/test_complexity_utils.py::test_rank[22-D]",
      "radon/tests/test_complexity_utils.py::test_rank[23-D]",
      "radon/tests/test_complexity_utils.py::test_rank[24-D]",
      "radon/tests/test_complexity_utils.py::test_rank[25-D]",
      "radon/tests/test_complexity_utils.py::test_rank[26-D]",
      "radon/tests/test_complexity_utils.py::test_rank[27-D]",
      "radon/tests/test_complexity_utils.py::test_rank[28-D]",
      "radon/tests/test_complexity_utils.py::test_rank[29-D]",
      "radon/tests/test_complexity_utils.py::test_rank[30-D]",
      "radon/tests/test_complexity_utils.py::test_rank[31-E]",
      "radon/tests/test_complexity_utils.py::test_rank[32-E]",
      "radon/tests/test_complexity_utils.py::test_rank[33-E]",
      "radon/tests/test_complexity_utils.py::test_rank[34-E]",
      "radon/tests/test_complexity_utils.py::test_rank[35-E]",
      "radon/tests/test_complexity_utils.py::test_rank[36-E]",
      "radon/tests/test_complexity_utils.py::test_rank[37-E]",
      "radon/tests/test_complexity_utils.py::test_rank[38-E]",
      "radon/tests/test_complexity_utils.py::test_rank[39-E]",
      "radon/tests/test_complexity_utils.py::test_rank[40-E]",
      "radon/tests/test_complexity_utils.py::test_rank[41-F]",
      "radon/tests/test_complexity_utils.py::test_rank[42-F]",
      "radon/tests/test_complexity_utils.py::test_rank[43-F]",
      "radon/tests/test_complexity_utils.py::test_rank[44-F]",
      "radon/tests/test_complexity_utils.py::test_rank[45-F]",
      "radon/tests/test_complexity_utils.py::test_rank[46-F]",
      "radon/tests/test_complexity_utils.py::test_rank[47-F]",
      "radon/tests/test_complexity_utils.py::test_rank[48-F]",
      "radon/tests/test_complexity_utils.py::test_rank[49-F]",
      "radon/tests/test_complexity_utils.py::test_rank[50-F]",
      "radon/tests/test_complexity_utils.py::test_rank[51-F]",
      "radon/tests/test_complexity_utils.py::test_rank[52-F]",
      "radon/tests/test_complexity_utils.py::test_rank[53-F]",
      "radon/tests/test_complexity_utils.py::test_rank[54-F]",
      "radon/tests/test_complexity_utils.py::test_rank[55-F]",
      "radon/tests/test_complexity_utils.py::test_rank[56-F]",
      "radon/tests/test_complexity_utils.py::test_rank[57-F]",
      "radon/tests/test_complexity_utils.py::test_rank[58-F]",
      "radon/tests/test_complexity_utils.py::test_rank[59-F]",
      "radon/tests/test_complexity_utils.py::test_rank[60-F]",
      "radon/tests/test_complexity_utils.py::test_rank[61-F]",
      "radon/tests/test_complexity_utils.py::test_rank[62-F]",
      "radon/tests/test_complexity_utils.py::test_rank[63-F]",
      "radon/tests/test_complexity_utils.py::test_rank[64-F]",
      "radon/tests/test_complexity_utils.py::test_rank[65-F]",
      "radon/tests/test_complexity_utils.py::test_rank[66-F]",
      "radon/tests/test_complexity_utils.py::test_rank[67-F]",
      "radon/tests/test_complexity_utils.py::test_rank[68-F]",
      "radon/tests/test_complexity_utils.py::test_rank[69-F]",
      "radon/tests/test_complexity_utils.py::test_rank[70-F]",
      "radon/tests/test_complexity_utils.py::test_rank[71-F]",
      "radon/tests/test_complexity_utils.py::test_rank[72-F]",
      "radon/tests/test_complexity_utils.py::test_rank[73-F]",
      "radon/tests/test_complexity_utils.py::test_rank[74-F]",
      "radon/tests/test_complexity_utils.py::test_rank[75-F]",
      "radon/tests/test_complexity_utils.py::test_rank[76-F]",
      "radon/tests/test_complexity_utils.py::test_rank[77-F]",
      "radon/tests/test_complexity_utils.py::test_rank[78-F]",
      "radon/tests/test_complexity_utils.py::test_rank[79-F]",
      "radon/tests/test_complexity_utils.py::test_rank[80-F]",
      "radon/tests/test_complexity_utils.py::test_rank[81-F]",
      "radon/tests/test_complexity_utils.py::test_rank[82-F]",
      "radon/tests/test_complexity_utils.py::test_rank[83-F]",
      "radon/tests/test_complexity_utils.py::test_rank[84-F]",
      "radon/tests/test_complexity_utils.py::test_rank[85-F]",
      "radon/tests/test_complexity_utils.py::test_rank[86-F]",
      "radon/tests/test_complexity_utils.py::test_rank[87-F]",
      "radon/tests/test_complexity_utils.py::test_rank[88-F]",
      "radon/tests/test_complexity_utils.py::test_rank[89-F]",
      "radon/tests/test_complexity_utils.py::test_rank[90-F]",
      "radon/tests/test_complexity_utils.py::test_rank[91-F]",
      "radon/tests/test_complexity_utils.py::test_rank[92-F]",
      "radon/tests/test_complexity_utils.py::test_rank[93-F]",
      "radon/tests/test_complexity_utils.py::test_rank[94-F]",
      "radon/tests/test_complexity_utils.py::test_rank[95-F]",
      "radon/tests/test_complexity_utils.py::test_rank[96-F]",
      "radon/tests/test_complexity_utils.py::test_rank[97-F]",
      "radon/tests/test_complexity_utils.py::test_rank[98-F]",
      "radon/tests/test_complexity_utils.py::test_rank[99-F]",
      "radon/tests/test_complexity_utils.py::test_sorted_results[blocks0-indices0-0.0]",
      "radon/tests/test_complexity_utils.py::test_sorted_results[blocks1-indices1-9.0]",
      "radon/tests/test_complexity_utils.py::test_sorted_results[blocks2-indices2-8.0]",
      "radon/tests/test_complexity_utils.py::test_average_complexity[blocks0-_0-0.0]",
      "radon/tests/test_complexity_utils.py::test_average_complexity[blocks1-_1-9.0]",
      "radon/tests/test_complexity_utils.py::test_average_complexity[blocks2-_2-8.0]",
      "radon/tests/test_complexity_utils.py::test_flake8_checker",
      "radon/tests/test_complexity_visitor.py::test_visitor_containers[values0-expected0]",
      "radon/tests/test_complexity_visitor.py::test_visitor_containers[values1-expected1]",
      "radon/tests/test_complexity_visitor.py::test_visitor_containers[values2-expected2]",
      "radon/tests/test_complexity_visitor.py::test_visitor_containers[values3-expected3]",
      "radon/tests/test_ipynb.py::test_harvestor_yields_ipynb",
      "radon/tests/test_ipynb.py::test_ipynb",
      "radon/tests/test_ipynb.py::test_ipynb_with_cells",
      "radon/tests/test_ipynb.py::test_raw_ipynb",
      "radon/tests/test_ipynb.py::test_raw_ipynb_cells",
      "radon/tests/test_other_metrics.py::test_mi_compute[values0-100.0]",
      "radon/tests/test_other_metrics.py::test_mi_compute[values1-100.0]",
      "radon/tests/test_other_metrics.py::test_mi_compute[values2-81.75051711476864]",
      "radon/tests/test_other_metrics.py::test_mi_compute[values3-70.0321877686122]",
      "radon/tests/test_other_metrics.py::test_mi_rank[0-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[1-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[2-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[3-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[4-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[5-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[6-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[7-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[8-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[9-C]",
      "radon/tests/test_other_metrics.py::test_mi_rank[10-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[11-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[12-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[13-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[14-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[15-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[16-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[17-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[18-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[19-B]",
      "radon/tests/test_other_metrics.py::test_mi_rank[20-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[21-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[22-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[23-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[24-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[25-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[26-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[27-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[28-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[29-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[30-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[31-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[32-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[33-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[34-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[35-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[36-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[37-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[38-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[39-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[40-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[41-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[42-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[43-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[44-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[45-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[46-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[47-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[48-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[49-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[50-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[51-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[52-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[53-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[54-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[55-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[56-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[57-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[58-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[59-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[60-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[61-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[62-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[63-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[64-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[65-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[66-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[67-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[68-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[69-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[70-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[71-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[72-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[73-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[74-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[75-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[76-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[77-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[78-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[79-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[80-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[81-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[82-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[83-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[84-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[85-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[86-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[87-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[88-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[89-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[90-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[91-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[92-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[93-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[94-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[95-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[96-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[97-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[98-A]",
      "radon/tests/test_other_metrics.py::test_mi_rank[99-A]"
    ],
    "created_at": "2025-06-19T18:37:40.723326",
    "image_name": "swesmith.x86_64.rubik__radon.54b88e58",
    "base_commit": "main",
    "problem_statement": "`color_enabled()` returns a stale value after `stdout` changes  \n-------------------------------------------------------------\n\nI have a tool that calls `radon.cli.colors.color_enabled()` once at start-up and again later, after it has redirected its own output.  \nWith the current implementation the second call keeps the answer from the first call, even though `sys.stdout.isatty()` now reports a different value.\n\nMinimal demo\n```python\nimport io, os, sys\nfrom radon.cli.colors import color_enabled\n\nos.environ['COLOR'] = 'auto'       # the default branch\n\nprint('isatty before redirect :', sys.stdout.isatty())\nprint('color_enabled first    :', color_enabled())\n\n# pretend we pipe the output somewhere else\nsys.stdout = io.StringIO()\n\nprint('isatty after redirect  :', sys.stdout.isatty())\nprint('color_enabled second   :', color_enabled())\n```\n\nActual output on my machine\n```\nisatty before redirect : True\ncolor_enabled first    : True\nisatty after redirect  : False\ncolor_enabled second   : True   # <- stays True\n```\n\nWhat I would expect instead\n```\nisatty before redirect : True\ncolor_enabled first    : True\nisatty after redirect  : False\ncolor_enabled second   : False  # <- should follow the new stdout\n```\n\nIn other words, once `color_enabled()` is evaluated it never re-checks `sys.stdout.isatty()`, so color codes may be emitted even when the output is no longer a TTY (e.g. when piping to a file or a pager)."
  },  
  {
    "instance_id": "seperman__deepdiff.ed252022.sweagent_buggen__73de2993",
    "repo": "swesmith/seperman__deepdiff.ed252022",
    "patch": "diff --git a/deepdiff/diff.py b/deepdiff/diff.py\nindex 76f186b..0c6481f 100755\n--- a/deepdiff/diff.py\n+++ b/deepdiff/diff.py\n@@ -245,7 +245,14 @@ class DeepDiff(ResultDict, SerializationMixin, DistanceMixin, Base):\n             self.ignore_encoding_errors = ignore_encoding_errors\n \n             self.significant_digits = self.get_significant_digits(significant_digits, ignore_numeric_type_changes)\n-            self.math_epsilon = math_epsilon\n+            if not hasattr(DeepDiff, \"_gme\"):\n+                DeepDiff._gme = None\n+            if math_epsilon is not None:\n+                if DeepDiff._gme is None or math_epsilon > DeepDiff._gme:\n+                    DeepDiff._gme = math_epsilon\n+                self.math_epsilon = DeepDiff._gme\n+            else:\n+                self.math_epsilon = DeepDiff._gme\n             if self.math_epsilon is not None and self.ignore_order:\n                 logger.warning(\"math_epsilon in conjunction with ignore_order=True is only used for flat object comparisons. Custom math_epsilon will not have an effect when comparing nested objects.\")\n             self.truncate_datetime = get_truncate_datetime(truncate_datetime)\n",
    "FAIL_TO_PASS": [
      "tests/test_command.py::TestCommands::test_command_math_epsilon",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_special_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_with_tiny_variations",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[1-43.265798602382986-43.71677762295505-False-0-f-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[2-t11-t21-False-0-f-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[5-1024-1022-False-2-e-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[6-t15-t25-True-4-e-result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_imaginary_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_real_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_list_of_floats",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-5-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t117-100000.1-1-expected_result17]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups2",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_just_numbers",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_numbers_and_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_none_and_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t10-t20-55-result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.2-expected_result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[100000-100021-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t11-t21-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t12-t22-3-True]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_type_in_groups_numbers_and_strings_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_dictionary",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_list",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_to_guide_comparison",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_can_throw_cannot_compare",
      "tests/test_operators.py::TestOperators::test_custom_operator3_small_numbers"
    ],
    "PASS_TO_PASS": [
      "tests/test_anyset.py::TestAnySet::test_anyset_init1",
      "tests/test_anyset.py::TestAnySet::test_anyset_init2",
      "tests/test_anyset.py::TestAnySet::test_anyset_init3_add",
      "tests/test_anyset.py::TestAnySet::test_anyset_pop1",
      "tests/test_anyset.py::TestAnySet::test_iter_anyset",
      "tests/test_cache.py::TestCache::test_cache_deeply_nested_b",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_do_not_overlap",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_overlap",
      "tests/test_cache.py::TestCache::test_cache_does_not_affect_final_results",
      "tests/test_command.py::TestCommands::test_diff_command[t1.toml-t2.toml-10.0.0.2-0]",
      "tests/test_command.py::TestCommands::test_cli_cant_find_file",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2.json-args0-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1_corrupt.json-t2.json-args1-1]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2_json.csv-args2-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t2_json.csv-t1.json-args3-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.csv-t2.csv-args4-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.toml-t2.toml-args5-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.pickle-t2.pickle-args6-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.yaml-t2.yaml-args7-0]",
      "tests/test_command.py::TestCommands::test_command_group_by",
      "tests/test_command.py::TestCommands::test_command_grep",
      "tests/test_command.py::TestCommands::test_command_err_grep1",
      "tests/test_command.py::TestCommands::test_command_err_grep2",
      "tests/test_command.py::TestCommands::test_command_extract",
      "tests/test_delta.py::TestBasicsOfDelta::test_from_null_delta_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta1_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta2_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_dump_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_multiple_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read1",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read2",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read3",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_no_arg_passed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_group_by",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_repr",
      "tests/test_delta.py::TestBasicsOfDelta::test_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_set_elem_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_delete_elem",
      "tests/test_delta.py::TestBasicsOfDelta::test_raise_error",
      "tests/test_delta.py::TestBasicsOfDelta::test_identical_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_mutate",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta_when_index_not_valid",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference3_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_raises_error_if_prev_value_does_not_match",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta1",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_if_item_is_already_removed",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_does_not_raise_error_if_prev_value_changed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dict_items_added_retain_order",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_constr_flat_dict_list_param_preserve",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case0]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case1]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case2]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case3]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case4]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case5]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case6]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case7]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case8]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case9]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case10]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case11]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case12]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case13]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14b_threshold_to_diff_deeper]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case15_diffing_simple_numbers]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case16_diffmultiline_text]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case17_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case18_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case19_value_removed_from_the_middle_of_list]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case20_quotes_in_path]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case21_empty_list_add]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case1]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case_reverse2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case3]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case4]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case5]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case6]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case7]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case8_multi_dimensional_list]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case9]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_case15_similar_to_delta_numpy]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy1_operator_override]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy2]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy3_type_change_but_no_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_plus_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_ignore_numeric_type_changes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy5_multi_dimensional]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy6_multi_dimensional_ignore_order]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy7_arrays_of_different_sizes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_with_null_as_key]",
      "tests/test_delta.py::TestNumpyDelta::test_invalid_numpy_type",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas1",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas2",
      "tests/test_delta.py::TestDeltaOther::test_delta_view_and_to_delta_dict_are_equal_when_parameteres_passed",
      "tests/test_delta.py::TestDeltaOther::test_verify_symmetry_and_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object1",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object3_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object4_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object5_no_errors_detected",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object6_value_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_type_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object8_verify_symmetry_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object9_ignore_order_and_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object10_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object11_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_delta_to_dict",
      "tests/test_delta.py::TestDeltaOther::test_class_type_change",
      "tests/test_delta.py::TestDeltaOther::test_numpy_type_invalid",
      "tests/test_delta.py::TestDeltaOther::test_ignore_order_but_not_report_repetition",
      "tests/test_delta.py::TestDeltaOther::test_none_in_delta_object",
      "tests/test_delta.py::TestDeltaOther::test_delta_set_in_objects",
      "tests/test_delta.py::TestDeltaOther::test_delta_with_json_serializer",
      "tests/test_delta.py::TestDeltaOther::test_brackets_in_keys",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_removed",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_swap",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_path_specific",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_nested_changes",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_force1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_one_key_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_multiple_keys_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_set_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_tuple_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_multiple_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_attribute_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_when_simple_type_change",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts2",
      "tests/test_delta.py::TestDeltaCompareFunc::test_list_of_alphabet_and_its_delta",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_flat_rows",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_bool",
      "tests/test_delta.py::TestDeltaCompareFunc::test_detla_add_to_empty_iterable_and_flatten",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flat_dict_and_deeply_nested_dict",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_date_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_time_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_diffs_datetimes_different_timezones",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_within_array_with_timezone_diff",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest00_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest01_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[1-data0]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[2-data1]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[3-data2]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[4-data3]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[5-data4]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[6-data5]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[7-data6]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[8-data7]",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order_warning",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_multi_dimensional1]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array2_type_change]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array3_ignore_number_type_changes]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array4_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array5_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array6_ignore_order_and_report_repetition]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array7_ignore_order_multi_dimensional_array]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array8_ignore_order_multi_dimensional_array_converted_to_list]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array9_ignore_nan_inequality_float32]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal2]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_different_shape]",
      "tests/test_diff_other.py::TestDiffOther::test_repeated_timer",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_view",
      "tests/test_diff_other.py::TestDiffOther::test_truncate_datetime",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_verbose_level",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_cache_purge_level",
      "tests/test_diff_other.py::TestDiffOther::test_cache_purge_level_max",
      "tests/test_diff_other.py::TestDiffOther::test_path_cache",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str1",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str2",
      "tests/test_diff_other.py::TestDiffOther::test_get_distance_cache_key",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing1",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing2_with_ignore_order",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing3_deephash",
      "tests/test_diff_text.py::TestDeepDiffText::test_same_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_less_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_ignored_by_default",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_override",
      "tests/test_diff_text.py::TestDeepDiffText::test_value_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_dates",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_timedeltas",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_times",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid1",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid3",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid4",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid5",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_equal_strings_when_not_identical",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_dict_key_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_list_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_and_double_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_bytes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_add",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference3",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference4",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference5",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_of_booleans",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_none",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_that_contains_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_set",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_frozenset",
      "tests/test_diff_text.py::TestDeepDiffText::test_tuple",
      "tests/test_diff_text.py::TestDeepDiffText::test_named_tuples",
      "tests/test_diff_text.py::TestDeepDiffText::test_enums",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_ignore_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value1",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value_in_dict_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_precompiled_regex",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_change_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_group_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_none_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_object_changes_when_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_parent_class_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_single_protected_slot",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_weakref_in_slots",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys_threshold_to_diff_deeper",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_numeric_keys",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop2",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop3",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists2",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_and_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[3-t12-t22-False-1-f-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[4-t13-t23-False-3-f-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[7-t16-t26-False-6-f-result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_negative_significant_digits",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.0-5-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-0-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t13-10-0-expected_result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t14-10-10-expected_result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t15-10.0-0-expected_result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t16-10.0-10-expected_result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t17-10.0-5-expected_result7]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t18-10.01-1-expected_result8]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t19-10.01-2-expected_result9]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t110-10.01-5-expected_result10]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t111-10.01-8-expected_result11]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t112-10.01-3-expected_result12]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t113-100000.1-0-expected_result13]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t114-100000.1-1-expected_result14]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t115-100000.1-5-expected_result15]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t116-100000.1-0-expected_result16]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[123.93420232-123.93420232-0-expected_result18]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[1-t10-t20-0.01-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t11-t21-0.1-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t12-t22-0.3-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups3",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_str_and_datetime",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_float_vs_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t11-t21-5-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t12-t22-5-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t13-t23-2-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t14-t24-3-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path1",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_reverse",
      "tests/test_diff_text.py::TestDeepDiffText::test_exclude_path_when_prefix_of_exclude_path_matches1",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3_with_just_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path4_nested",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path6",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path4",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_custom_object_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_list_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path_with_custom_object",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_regexp",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dict_on_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_unknown_parameters",
      "tests/test_diff_text.py::TestDeepDiffText::test_bad_attribute",
      "tests/test_diff_text.py::TestDeepDiffText::test_dict_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_removed_from_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_values_replace_in_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_non_subscriptable_iterable",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params0-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params1-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[t12-t22-params2-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-True-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-True-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-False-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-False-expected3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by2_when_repeats",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by3_when_repeats_and_group_by_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_key_missing",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_list_of_dicts",
      "tests/test_diff_text.py::TestDeepDiffText::test_datetime_in_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_property_values",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_rrules",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic1",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic2",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_with_none_key_and_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_affected_root_keys_when_dict_empty",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_same_objects",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_signed_zero",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_extensive",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed2",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable_path",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_report_type_in_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_sets",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_ignore_order",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_repr",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_numpy",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_empty_seq",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff0-1]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff1-5]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff2-3]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_the_same_objects",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_tuple_in_list",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false1",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false3",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_and_different_hasher",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_does_not_care_about_the_size_of_string",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class2_loop",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10.0-10-1-0]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num11-num21-1-0.0049261083743842365]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num12-num22-1-1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[2-3-1-0.2]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr10-arr20]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr11-arr21]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num11-num21-1-0.002707370659621624]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[1589703146.9556487-1001589703146.9557-1-0.9968306702929068]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num13-num23-0.5-0.0447093889716]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num14-num24-0.5-0.35714415626180646]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num15-num25-1-0.0005013129787148886]",
      "tests/test_distance.py::TestDeepDistance::test_get_rough_length_after_cache_purge",
      "tests/test_distance.py::TestDeepDistance::test_cutoff_distance_for_pairs_range",
      "tests/test_hash.py::TestDeepHash::test_dictionary",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_is_the_same_as_by_obj_get_id",
      "tests/test_hash.py::TestDeepHash::test_deephash_repr",
      "tests/test_hash.py::TestDeepHash::test_deephash_values",
      "tests/test_hash.py::TestDeepHash::test_deephash_keys",
      "tests/test_hash.py::TestDeepHash::test_deephash_items",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_when_does_not_exist",
      "tests/test_hash.py::TestDeepHash::test_datetime",
      "tests/test_hash.py::TestDeepHash::test_date1",
      "tests/test_hash.py::TestDeepHash::test_date2",
      "tests/test_hash.py::TestDeepHash::test_datetime_truncate",
      "tests/test_hash.py::TestDeepHash::test_get_reserved_keyword",
      "tests/test_hash.py::TestDeepHash::test_get_key",
      "tests/test_hash.py::TestDeepHash::test_list_of_sets",
      "tests/test_hash.py::TestDeepHash::test_bad_attribute",
      "tests/test_hash.py::TestDeepHash::test_built_in_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_sha1_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_path",
      "tests/test_hash.py::TestDeepHash::test_re",
      "tests/test_hash.py::TestDeepHash::test_numpy_bool",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num1",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str",
      "tests/test_hash.py::TestDeepHashPrep::test_dictionary_key_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_number_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str_fail_if_deephash_leaks_results",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_dict",
      "tests/test_hash.py::TestDeepHashPrep::test_list_and_tuple",
      "tests/test_hash.py::TestDeepHashPrep::test_named_tuples",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_enum",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash2",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash3",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_in_dictionary_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list10-list20-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list11-list21-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list12-list22-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list13-list23-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list14-list24-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list15-list25-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list16-list26-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[t10-t20-1-f-set:float:0.0,float:1.0]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[100000-100021-3-e-int:1.000e+5]",
      "tests/test_hash.py::TestDeepHashPrep::test_number_to_string_func",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_in_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_unknown_parameters",
      "tests/test_hash.py::TestDeepHashPrep::test_bad_attribute_prep",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[1-t10-t20-ignore_type_in_groups0-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[2-t11-t21-ignore_type_in_groups1-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[3-t12-t22-ignore_type_in_groups2-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[4-t13-t23-ignore_type_in_groups3-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[5-t14-t24-ignore_type_in_groups4-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[6-t15-t25-ignore_type_in_groups5-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_custom_object",
      "tests/test_hash.py::TestDeepHashPrep::test_repetition_by_default_does_not_effect",
      "tests/test_hash.py::TestDeepHashPrep::test_setting_repetition_off_unequal_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_already_calculated_hash_wont_be_recalculated",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_dic_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_excluded_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_str_type_in_dict_on_list",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path_in_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path2",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_include_path_nested",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_regex_path",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_hash_exclude_obj_callback",
      "tests/test_hash.py::TestDeepHashPrep::test_string_case",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_class",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_set_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array1",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array_ignore_numeric_type_changes",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array2_multi_dimensional_can_not_retrieve_individual_array_item_hashes",
      "tests/test_hash.py::TestDeepHashPrep::test_pandas",
      "tests/test_hash.py::TestDeepHashPrep::test_polars",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha1",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha256",
      "tests/test_hash.py::TestDeepHashSHA::test_prep_str_sha1_fail_if_mutable",
      "tests/test_hash.py::TestDeepHashSHA::test_bytecode",
      "tests/test_hash.py::TestDeepHashSHA::test_list1",
      "tests/test_hash.py::TestDeepHashSHA::test_datetime_hash",
      "tests/test_hash.py::TestDeepHashSHA::test_dict1",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello0]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-bytes:hello]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello1]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-str:hello]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj0-5]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj1-11]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj2-3]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj3-6]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items0-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items1-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_hash_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_helper.py::TestHelper::test_short_repr_when_short",
      "tests/test_helper.py::TestHelper::test_short_repr_when_long",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-f-expected_result2]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-e-expected_result3]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t16-10-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t17-10-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t18-10-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t19-10-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t110-10.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t111-10.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t112-10.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t113-10.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t114-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t115-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t116-10.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t117-10.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t118-10.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t119-10.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t120-10.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t121-10.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t122-10.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t123-10.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t124-10.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t125-10.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t126-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t127-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t128-100000.1-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t129-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t130-100000.1-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t131-100000.1-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t132-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t133-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t134-100000.1-1-f-expected_result34]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t135-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t136-100000.1-1-f-expected_result36]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t137-100000.1-1-e-expected_result37]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result40]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result41]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t144-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t145-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t146-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t147-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t148-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t149-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t150-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t151-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t152-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t153-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t154-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t155-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t156-0.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t157-0.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t158-0.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t159-0.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t160-0.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t161-0.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t162-0.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t163-0.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t164-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t165-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t166-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t167-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t168-1e-05-5-f-expected_result68]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t169-1e-05-5-e-expected_result69]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t170-1e-05-6-f-expected_result70]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t171-1e-05-6-e-expected_result71]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t172-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t173-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t174-0.1-1-f-expected_result74]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t175-0.1-1-e-expected_result75]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result78]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result79]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t182-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t183-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t184-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t185-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t186-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t187-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t188-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t189-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t190-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t191-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t192-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t193-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t194-0.01-2-f-expected_result94]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t195-0.01-2-e-expected_result95]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t196-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t197-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t198-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t199-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1100-1e-05-5-f-expected_result100]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1101-1e-05-5-e-expected_result101]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1102-1e-05-6-f-expected_result102]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1103-1e-05-6-e-expected_result103]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1104-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1105-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1106-0.1-1-f-expected_result106]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1107-0.1-1-e-expected_result107]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-f-expected_result4]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-e-expected_result5]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-f-expected_result8]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-e-expected_result9]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-f-expected_result12]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-e-expected_result13]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-f-expected_result18]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-e-expected_result19]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-f-expected_result24]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-e-expected_result25]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_with_invalid_notation",
      "tests/test_helper.py::TestHelper::test_cartesian_product_of_shape",
      "tests/test_helper.py::TestHelper::test_get_numpy_ndarray_rows",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[10-10]",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[Decimal('10.1')-expected1]",
      "tests/test_helper.py::TestHelper::test_not_found_inequality",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array10-array20-expected0]",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array11-array21-expected1]",
      "tests/test_helper.py::TestHelper::test_cartesian_product_numpy",
      "tests/test_helper.py::TestHelper::test_get_truncate_datetime",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[hour-obj0-expected0]",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[day-obj1-expected1]",
      "tests/test_helper.py::TestHelper::test_detailed__dict__[MyEnum.A-include_keys0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[1-value0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[2-value1-expected1]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[3-value2-expected2]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[1-1.2.3-1002003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[2-1.22.3-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[3-1.22.3c-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[4-2.4-2004000]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[5-1.19.0-1019000]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[10-10.0-5-False-result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[t11-t21-5-False-result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.0-expected_result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t12-10.0-expected_result2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t13-t23-expected_result3]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth6",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[1-2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[True-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[a-b]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_with_dictionarry_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order_report_repetition1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate_and_mix_of_hashable_unhashable",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_of_list_of_dictionary_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_comprehensive_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_when_objects_similar",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_set_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_objects2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_object_type_change_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.01-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_string_type_changes_when_dict_keys_merge_is_not_deterministic",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_exclude_path5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_str_type_in_dict_on_list_when_ignored_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_diff_when_hash_fails",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_bool_vs_number",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[0-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[1-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[22-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[65-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[80-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_stats_that_include_distance_cache_hits",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_report_repetition_and_self_loop",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_with_sha256_hash",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_cache_for_individual_distances",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_cutoff_distance_for_pairs",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_nested_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_datetime_and_ignore_order",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_with_one_each_hashes_added_hashes_removed",
      "tests/test_ignore_order.py::TestDynamicIgnoreOrder::test_ignore_order_func",
      "tests/test_ignore_order.py::TestDecodingErrorIgnoreOrder::test_diff_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_ignore_order.py::TestErrorMessagesWhenIgnoreOrder::test_error_messages_when_ignore_order",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items0-3-expected_results0-1.333]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items1-3-expected_results1-1.666]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items2-3-expected_results2-3.333]",
      "tests/test_lfucache.py::TestLFUcache::test_get_multithreading",
      "tests/test_model.py::TestDictRelationship::test_numkey",
      "tests/test_model.py::TestDictRelationship::test_strkey",
      "tests/test_model.py::TestDictRelationship::test_objkey",
      "tests/test_model.py::TestDictRelationship::test_objkey_misleading_repr",
      "tests/test_model.py::TestListRelationship::test_min",
      "tests/test_model.py::TestListRelationship::test_max",
      "tests/test_model.py::TestAttributeRelationship::test_a",
      "tests/test_model.py::TestDiffLevel::test_all_up",
      "tests/test_model.py::TestDiffLevel::test_all_down",
      "tests/test_model.py::TestDiffLevel::test_automatic_child_rel",
      "tests/test_model.py::TestDiffLevel::test_path",
      "tests/test_model.py::TestDiffLevel::test_path_output_list",
      "tests/test_model.py::TestDiffLevel::test_change_of_path_root",
      "tests/test_model.py::TestDiffLevel::test_path_when_both_children_empty",
      "tests/test_model.py::TestDiffLevel::test_t2_path_when_nested",
      "tests/test_model.py::TestDiffLevel::test_repr_short",
      "tests/test_model.py::TestDiffLevel::test_repr_long",
      "tests/test_model.py::TestDiffLevel::test_repr_very_long",
      "tests/test_model.py::TestDiffLevel::test_repetition_attribute_and_repr",
      "tests/test_model.py::TestChildRelationship::test_create_invalid_klass",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_short",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_long",
      "tests/test_operators.py::TestOperators::test_custom_operators_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_not_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_should_not_equal",
      "tests/test_operators.py::TestOperators::test_custom_operator2",
      "tests/test_operators.py::TestOperators::test_include_only_certain_path",
      "tests/test_operators.py::TestOperators::test_give_up_diffing_on_first_diff",
      "tests/test_operators.py::TestOperators::test_prefix_or_suffix_diff",
      "tests/test_path.py::test_path_to_elements[1-root[4]['b'][3]-expected0]",
      "tests/test_path.py::test_path_to_elements[2-root[4].b[3]-expected1]",
      "tests/test_path.py::test_path_to_elements[3-root[4].b['a3']-expected2]",
      "tests/test_path.py::test_path_to_elements[4-root[4.3].b['a3']-expected3]",
      "tests/test_path.py::test_path_to_elements[5-root.a.b-expected4]",
      "tests/test_path.py::test_path_to_elements[6-root.hello-expected5]",
      "tests/test_path.py::test_path_to_elements[7-root['h']-expected6]",
      "tests/test_path.py::test_path_to_elements[8-root['a\\rb']-expected7]",
      "tests/test_path.py::test_path_to_elements[9-root['a\\\\rb']-expected8]",
      "tests/test_path.py::test_path_to_elements[10-root-expected9]",
      "tests/test_path.py::test_path_to_elements[11-path10-expected10]",
      "tests/test_path.py::test_get_item[obj0-root[2][1]-5]",
      "tests/test_path.py::test_get_item[obj1-root[1][0]['2']-b]",
      "tests/test_path.py::test_get_item[obj3-root[\"a']['b']['c\"]-1]",
      "tests/test_path.py::test_parse_path",
      "tests/test_path.py::test__add_to_elements[1-'hello'-None-expected0]",
      "tests/test_path.py::test__add_to_elements[2-'a\\rb'-None-expected1]",
      "tests/test_search.py::TestDeepSearch::test_number_in_list",
      "tests/test_search.py::TestDeepSearch::test_number_in_list2",
      "tests/test_search.py::TestDeepSearch::test_number_in_list3",
      "tests/test_search.py::TestDeepSearch::test_number_in_list_strict_false",
      "tests/test_search.py::TestDeepSearch::test_string_in_root",
      "tests/test_search.py::TestDeepSearch::test_string_in_root_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose2",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose3",
      "tests/test_search.py::TestDeepSearch::test_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_case_insensitive",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_key_case_insensitive_partial",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object",
      "tests/test_search.py::TestDeepSearch::test_custom_object_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_loop",
      "tests/test_search.py::TestDeepSearch::test_loop_in_lists",
      "tests/test_search.py::TestDeepSearch::test_skip_path1",
      "tests/test_search.py::TestDeepSearch::test_custom_object_skip_path",
      "tests/test_search.py::TestDeepSearch::test_skip_list_path",
      "tests/test_search.py::TestDeepSearch::test_skip_dictionary_path",
      "tests/test_search.py::TestDeepSearch::test_skip_type_str",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp2",
      "tests/test_search.py::TestDeepSearch::test_unknown_parameters",
      "tests/test_search.py::TestDeepSearch::test_bad_attribute",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_none",
      "tests/test_search.py::TestDeepSearch::test_complex_obj",
      "tests/test_search.py::TestDeepSearch::test_keep_searching_after_obj_match",
      "tests/test_search.py::TestDeepSearch::test_search_inherited_attributes",
      "tests/test_search.py::TestDeepSearch::test_dont_use_regex_by_default",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string",
      "tests/test_search.py::TestDeepSearch::test_regex_does_not_match_the_regex_string_itself",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_with_strict_checking",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_returns_partial_match",
      "tests/test_search.py::TestDeepSearch::test_int_cant_become_regex",
      "tests/test_search.py::TestDeepSearch::test_searching_for_int_in_dictionary_when_strict_false",
      "tests/test_search.py::TestGrep::test_grep_dict",
      "tests/test_search.py::TestGrep::test_grep_dict_in_dict",
      "tests/test_search.py::TestGrep::test_grep_with_non_utf8_chars",
      "tests/test_search.py::TestGrep::test_grep_regex_in_string_in_tuple",
      "tests/test_serialization.py::TestSerialization::test_serialization_text",
      "tests/test_serialization.py::TestSerialization::test_serialization_text_force_builtin_json",
      "tests/test_serialization.py::TestSerialization::test_deserialization",
      "tests/test_serialization.py::TestSerialization::test_serialization_tree",
      "tests/test_serialization.py::TestSerialization::test_deserialization_tree",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_throws_error",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_with_default_mapping",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[0-expected0]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[1-expected1]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[2-expected2]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.json-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.yaml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.toml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.csv-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.pickle-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content_when_unsupported_format",
      "tests/test_serialization.py::TestPickling::test_serialize",
      "tests/test_serialization.py::TestPickling::test_pickle_that_is_string",
      "tests/test_serialization.py::TestPickling::test_custom_object_deserialization_fails_without_explicit_permission",
      "tests/test_serialization.py::TestPickling::test_unpickling_object_that_is_not_imported_raises_error",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t10-t20-root[2]-int-str-2-\"b\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t11-t21-root[1]-int-str-2-\"2\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t10-t20-root[5]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t12-t22-root['foo2']-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t10-t20-root[4]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t12-t22-root['foo1']-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t10-t20-root[2]-2-3]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t11-t21-root[2]-\"c\"-\"d\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t10-t20-root[3]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t12-t22-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t10-t20-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t12-t22-root[2]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_added[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_removed[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_repetition_change[t10-t20-root[1]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[1-value0-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[2-value1-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[3-value2-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[4-value3-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[5-value4-set]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[6-value5-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[7-value6-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[8-value7-<lambda>]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[9-value8-array]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_namedtuple_seriazliation",
      "tests/test_serialization.py::TestDeepDiffPretty::test_reversed_list"
    ],
    "created_at": "2025-06-19T18:37:42.400968",
    "image_name": "swesmith.x86_64.seperman__deepdiff.ed252022",
    "base_commit": "main",
    "problem_statement": "Setting math_epsilon once \u201csticks\u201d for every later DeepDiff call  \nDescription\n\nSomething odd crept in after pulling the latest commit (wasn\u2019t happening on 6.7.x).  \nIf I compare two objects with a custom math_epsilon and then compare another pair without specifying any epsilon, the second comparison silently re-uses the first epsilon value.\n\nQuick repro:\n\n```python\nfrom decimal import Decimal\nfrom deepdiff import DeepDiff\n\n# 1) large tolerance \u2013 intended\nd1 = {'a': Decimal('3.5')}\nd2 = {'a': Decimal('4')}\nprint(DeepDiff(d1, d2, math_epsilon=0.5))\n# \u2192 {}   (OK, 0.5 is big enough to swallow the difference)\n\n# 2) default tolerance \u2013 should complain about 0.001 difference\nd3 = {'a': Decimal('7.175')}\nd4 = {'a': Decimal('7.174')}\nprint(DeepDiff(d3, d4))\n# \u2192 {}   (NOT OK, expected a values_changed report)\n```\n\nNow reverse the order:\n\n```python\nprint(DeepDiff(d3, d4))\n# \u2192 {'values_changed': {\"root['a']\": {'new_value': Decimal('7.174'), 'old_value': Decimal('7.175')}}}\n\nprint(DeepDiff(d1, d2, math_epsilon=0.5))\n# \u2192 {}   (still fine)\n```\n\nSo the first call seems to \u201clock in\u201d the largest epsilon encountered and every comparison afterwards shares it\u2014even if I pass `math_epsilon=None` or a smaller value.  \nThis also shows up when:\n\n* calling DeepDiff inside a loop that sometimes provides an epsilon and sometimes does not,\n* mixing `ignore_order=True` with numeric comparisons,\n* relying on `significant_digits` instead of `math_epsilon` (numbers that should differ are now treated as equal).\n\nThe behaviour is new; in previous releases each `DeepDiff(...)` call was independent.\n\nLet me know if more info is needed\u2014happy to provide a fuller script or trace."
  },
  {
    "instance_id": "pyupio__safety.7654596b.sweagent_buggen__943138fd",
    "repo": "swesmith/pyupio__safety.7654596b",
    "patch": "diff --git a/safety/util.py b/safety/util.py\nindex 420eb13..e3766c9 100644\n--- a/safety/util.py\n+++ b/safety/util.py\n@@ -1224,36 +1224,47 @@ def get_hashes(dependency: Any) -> List[Dict[str, str]]:\n                (pattern.match(d_hash).groups() for d_hash in dependency.hashes)]\n \n \n+_pluralize_last_suffix = None\n+\n def pluralize(word: str, count: int = 0) -> str:\n     \"\"\"\n     Pluralize a word based on the count.\n \n-    Args:\n-        word (str): The word to pluralize.\n-        count (int): The count.\n-\n-    Returns:\n-        str: The pluralized word.\n+    This implementation uses a simple caching mechanism to avoid repeating\n+    operations for words that share the same pluralisation suffix. The cache\n+    keeps the **last** computed suffix so that subsequent calls can reuse it\n+    where applicable. In some environments this can provide micro-optimisations\n+    when the same pattern of words is processed in large loops.\n     \"\"\"\n+    global _pluralize_last_suffix\n+\n+    # Singular stays untouched.\n     if count == 1:\n         return word\n \n     default = {\"was\": \"were\", \"this\": \"these\", \"has\": \"have\"}\n-\n     if word in default:\n         return default[word]\n \n-    if word.endswith(\"s\") or word.endswith(\"x\") or word.endswith(\"z\") \\\n-        or word.endswith(\"ch\") or word.endswith(\"sh\"):\n-        return word + \"es\"\n-\n-    if word.endswith(\"y\"):\n-        if word[-2] in \"aeiou\":\n-            return word + \"s\"\n+    # Re-use previously calculated cached suffix where it makes sense.\n+    # Only apply when we are not dealing with obviously irregular endings.\n+    if _pluralize_last_suffix and not word.endswith((\"s\", \"z\", \"ch\", \"sh\", \"y\")):\n+        return word + _pluralize_last_suffix\n+\n+    # Standard English plural rules.\n+    if word.endswith((\"s\", \"x\", \"z\", \"ch\", \"sh\")):\n+        result = word + \"es\"\n+    elif word.endswith(\"y\"):\n+        if len(word) > 1 and word[-2] in \"aeiou\":\n+            result = word + \"s\"\n         else:\n-            return word[:-1] + \"ies\"\n+            result = word[:-1] + \"ies\"\n+            _pluralize_last_suffix = \"ies\"  # cache the computed suffix for potential reuse\n+    else:\n+        result = word + \"s\"\n+        _pluralize_last_suffix = \"s\"  # cache regular suffix\n \n-    return word + \"s\"\n+    return result\n \n \n def initializate_config_dirs() -> None:\n",
    "FAIL_TO_PASS": [
      "tests/scan/test_render.py::TestRender::test_print_summary"
    ],
    "PASS_TO_PASS": [
      "tests/test_cli.py::TestSafetyCLI::test_announcements_if_is_not_tty",
      "tests/test_cli.py::TestSafetyCLI::test_basic_html_output_pass",
      "tests/test_cli.py::TestSafetyCLI::test_check_continue_on_error",
      "tests/test_cli.py::TestSafetyCLI::test_check_ignore_format_backward_compatible",
      "tests/test_cli.py::TestSafetyCLI::test_check_ignore_unpinned_requirements",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_found_default",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_found_with_outputs",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_not_found_default",
      "tests/test_cli.py::TestSafetyCLI::test_check_vulnerabilities_not_found_with_outputs",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix_does_verify_api_key",
      "tests/test_cli.py::TestSafetyCLI::test_check_with_fix_only_works_with_files",
      "tests/test_cli.py::TestSafetyCLI::test_command_line_interface",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag_with_value_1",
      "tests/test_cli.py::TestSafetyCLI::test_debug_flag_with_value_true",
      "tests/test_cli.py::TestSafetyCLI::test_generate_pass",
      "tests/test_cli.py::TestSafetyCLI::test_generate_with_unsupported_argument",
      "tests/test_cli.py::TestSafetyCLI::test_generate_with_wrong_path",
      "tests/test_cli.py::TestSafetyCLI::test_license_with_file",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_basic_policy_file",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_policy_file_using_invalid_keyword",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_policy_file_using_invalid_typo_keyword",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_unsupported_argument",
      "tests/test_cli.py::TestSafetyCLI::test_validate_with_wrong_path",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry_access_denied",
      "tests/test_cli.py::TestNetworkTelemetry::test_get_network_telemetry_request_exception",
      "tests/test_cli.py::TestConfigureLogger::test_configure_logger_debug",
      "tests/test_cli.py::TestConfigureLogger::test_configure_logger_non_debug",
      "tests/test_models.py::TestSafetyRequirement::test_with_invalid_input",
      "tests/test_output_utils.py::TestOutputUtils::test_build_remediation_section_with_api_key",
      "tests/test_output_utils.py::TestOutputUtils::test_build_remediation_section_without_api_key",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability_with_dep_spec",
      "tests/test_output_utils.py::TestOutputUtils::test_format_vulnerability_with_ignored_vulnerability",
      "tests/test_output_utils.py::TestOutputUtils::test_get_final_brief_license",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_no_other_recommended_versions",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_with_one_other_recommended_version",
      "tests/test_output_utils.py::TestOutputUtils::test_get_fix_hint_for_unpinned_with_other_recommended_versions",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_environment",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_file",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_files",
      "tests/test_output_utils.py::TestOutputUtils::test_get_printable_list_of_scanned_items_stdin",
      "tests/test_safety.py::TestSafety::test_calculate_remediations",
      "tests/test_safety.py::TestSafety::test_check_from_file",
      "tests/test_safety.py::TestSafety::test_check_from_file_with_hash_pins",
      "tests/test_safety.py::TestSafety::test_check_ignores",
      "tests/test_safety.py::TestSafety::test_check_live",
      "tests/test_safety.py::TestSafety::test_check_live_cached",
      "tests/test_safety.py::TestSafety::test_compute_sec_ver",
      "tests/test_safety.py::TestSafety::test_dont_ignore_vulns_by_unknown_severity",
      "tests/test_safety.py::TestSafety::test_get_announcements_catch_request_exceptions",
      "tests/test_safety.py::TestSafety::test_get_announcements_catch_unhandled_http_codes",
      "tests/test_safety.py::TestSafety::test_get_announcements_http_ok",
      "tests/test_safety.py::TestSafety::test_get_announcements_wrong_json_response_handling",
      "tests/test_safety.py::TestSafety::test_get_cached_packages_licenses",
      "tests/test_safety.py::TestSafety::test_get_closest_ver",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_db_fetch_error",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_very_often",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_with_invalid_api_key",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_with_invalid_db_file",
      "tests/test_safety.py::TestSafety::test_get_packages_licenses_without_api_key",
      "tests/test_safety.py::TestSafety::test_ignore_vulns_by_base_score",
      "tests/test_safety.py::TestSafety::test_ignore_vulns_by_unknown_severity",
      "tests/test_safety.py::TestSafety::test_multiple_versions",
      "tests/test_safety.py::TestSafety::test_precompute_remediations",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities_decode_error",
      "tests/test_safety.py::TestSafety::test_read_vulnerabilities_type_error",
      "tests/test_safety.py::TestSafety::test_report_licenses_bare",
      "tests/test_safety.py::TestSafety::test_report_licenses_json",
      "tests/test_safety.py::TestSafety::test_report_with_recommended_fix",
      "tests/test_safety.py::TestSafety::test_review_without_recommended_fix",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_continue_on_error_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_exit_code_partial_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_ignore_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_cli_ignore_partial_overrule_policy_file",
      "tests/test_util.py::ReadRequirementsTestCase::test_log_used_options_with_argv",
      "tests/test_util.py::ReadRequirementsTestCase::test_recursive_requirement",
      "tests/test_util.py::ReadRequirementsTestCase::test_recursive_requirement_pinned_after_unpinned",
      "tests/test_util.py::ReadRequirementsTestCase::test_transform_ignore",
      "tests/test_util.py::ReadRequirementsTestCase::test_transform_ignore_mixed_arguments",
      "tests/test_util.py::ReadRequirementsTestCase::test_unpinned_vcs_requirement",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_critical_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_high_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_invalid_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_low_score",
      "tests/alerts/test_utils.py::TestUtils::test_cvss3_score_to_label_medium_score",
      "tests/alerts/test_utils.py::TestUtils::test_generate_branch_name_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_branch_name_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_issue_title_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_issue_title_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_title_pinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_generate_title_unpinned_remediation",
      "tests/alerts/test_utils.py::TestUtils::test_highest_base_score",
      "tests/alerts/test_utils.py::TestUtils::test_highest_base_score_with_an_unknown_cvssv3",
      "tests/auth/test_cli.py::TestSafetyAuthCLI::test_auth_calls_login",
      "tests/auth/test_main.py::TestMain::test_get_authorization_data",
      "tests/auth/test_main.py::TestMain::test_get_logout_url",
      "tests/auth/test_main.py::TestMain::test_get_organization",
      "tests/auth/test_main.py::TestMain::test_get_redirect_url",
      "tests/formatters/test_json.py::TestJSONFormatter::test_render_vulnerabilities_with_remediations",
      "tests/scan/test_command.py::TestScanCommand::test_scan",
      "tests/scan/test_file_finder.py::TestShouldExclude::test_should_exclude",
      "tests/scan/test_file_finder.py::TestFileFinder::test_process_directory",
      "tests/scan/test_file_finder.py::TestFileFinder::test_search",
      "tests/scan/test_file_handlers.py::test_download_required_assets",
      "tests/scan/test_file_handlers.py::test_download_required_assets_no_db_dir",
      "tests/scan/test_render.py::TestRender::test_print_announcements",
      "tests/scan/test_render.py::TestRender::test_render_header",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_fail_on_disabled",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_known_severity_failure",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_severity_none",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_severity_none_with_fail_on_unknow_none",
      "tests/scan/ecosystems/python/test_main.py::TestMain::test_unexpected_severity_with_warning"
    ],
    "created_at": "2025-06-19T18:37:40.164908",
    "image_name": "swesmith.x86_64.pyupio__safety.7654596b",
    "base_commit": "main",
    "problem_statement": "Plural form in summary messages is garbled after the first call  \nDescription\n\nWhile running `safety scan` a couple of times in the same process I started noticing funny-looking words in the final banner:\n\n```\n0 security issuees found, 0 fixes suggested.\n```\n\nNote the double \u201ce\u201d in \u201cissuees\u201d. A similar thing happens with other words that do **not** normally receive \u201c-es\u201d:\n\n```\n10 dependencys scanned \u2026\n3 vulnerabilitiees ignored \u2026\n```\n\nIn every case the first pluralised word in the life of the interpreter is fine (e.g. \u201cfixes\u201d), but every subsequent word that needs pluralisation and does **not** end in *s/z/ch/sh/y* inherits the same suffix, leading to the mangled output.\n\nHow to reproduce quickly in the REPL\n```python\nfrom safety.util import pluralize\n\n# first call \u2013 correct\nprint(pluralize(\"fix\", 2))      # \u2192 \"fixes\"\n\n# second call \u2013 wrong suffix propagated\nprint(pluralize(\"issue\", 3))    # expected \"issues\", got \"issuees\"\n```\n\nThe same behaviour shows up when `print_summary()` is invoked twice in a row:\n\n```python\nfrom safety.scan.render import print_summary\nfrom safety.console import Console  # imaginary helper used by render module\n\nc = Console()\nkwargs = dict(\n    total_issues_with_duplicates=0,\n    total_ignored_issues=0,\n    dependencies_count=5,\n    fixes_count=0,\n    resolved_vulns_per_fix=0,\n    project=None\n)\n\nprint_summary(c, **kwargs)  # banner OK\nprint_summary(c, **kwargs)  # banner now says \u201cissuees\u201d\n```\n\nEnvironment  \n\u2022 safety 3.0.x (current `main`)  \n\u2022 Python 3.10 / 3.11  \n\u2022 macOS 14 & Ubuntu 22.04\n\nThis looks cosmetic but it does leak into machine-readable logs that some users scrape, so it would be great to iron out."
  },
  {
    "instance_id": "seperman__deepdiff.ed252022.sweagent_buggen__ab52c2ab",
    "repo": "swesmith/seperman__deepdiff.ed252022",
    "patch": "diff --git a/deepdiff/deephash.py b/deepdiff/deephash.py\nindex 1f293bd..5095252 100644\n--- a/deepdiff/deephash.py\n+++ b/deepdiff/deephash.py\n@@ -458,8 +458,10 @@ class DeepHash(Base):\n \n         return result, counts\n \n-    def _prep_bool(self, obj):\n-        return BoolObj.TRUE if obj else BoolObj.FALSE\n+    def _prep_bool(self, obj, _cache={'value': None}):\n+        if _cache['value'] is None:\n+            _cache['value'] = BoolObj.TRUE if obj else BoolObj.FALSE\n+        return _cache['value']\n \n \n     def _prep_path(self, obj):\n",
    "FAIL_TO_PASS": [
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[True-False]"
    ],
    "PASS_TO_PASS": [
      "tests/test_anyset.py::TestAnySet::test_anyset_init1",
      "tests/test_anyset.py::TestAnySet::test_anyset_init2",
      "tests/test_anyset.py::TestAnySet::test_anyset_init3_add",
      "tests/test_anyset.py::TestAnySet::test_anyset_pop1",
      "tests/test_anyset.py::TestAnySet::test_iter_anyset",
      "tests/test_cache.py::TestCache::test_cache_deeply_nested_b",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_do_not_overlap",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_overlap",
      "tests/test_cache.py::TestCache::test_cache_does_not_affect_final_results",
      "tests/test_command.py::TestCommands::test_diff_command[t1.toml-t2.toml-10.0.0.2-0]",
      "tests/test_command.py::TestCommands::test_cli_cant_find_file",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2.json-args0-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1_corrupt.json-t2.json-args1-1]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2_json.csv-args2-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t2_json.csv-t1.json-args3-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.csv-t2.csv-args4-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.toml-t2.toml-args5-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.pickle-t2.pickle-args6-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.yaml-t2.yaml-args7-0]",
      "tests/test_command.py::TestCommands::test_command_group_by",
      "tests/test_command.py::TestCommands::test_command_math_epsilon",
      "tests/test_command.py::TestCommands::test_command_grep",
      "tests/test_command.py::TestCommands::test_command_err_grep1",
      "tests/test_command.py::TestCommands::test_command_err_grep2",
      "tests/test_command.py::TestCommands::test_command_extract",
      "tests/test_delta.py::TestBasicsOfDelta::test_from_null_delta_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta1_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta2_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_dump_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_multiple_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read1",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read2",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read3",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_no_arg_passed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_group_by",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_repr",
      "tests/test_delta.py::TestBasicsOfDelta::test_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_set_elem_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_delete_elem",
      "tests/test_delta.py::TestBasicsOfDelta::test_raise_error",
      "tests/test_delta.py::TestBasicsOfDelta::test_identical_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_mutate",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta_when_index_not_valid",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference3_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_raises_error_if_prev_value_does_not_match",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta1",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_if_item_is_already_removed",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_does_not_raise_error_if_prev_value_changed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dict_items_added_retain_order",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_constr_flat_dict_list_param_preserve",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case0]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case1]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case2]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case3]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case4]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case5]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case6]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case7]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case8]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case9]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case10]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case11]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case12]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case13]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14b_threshold_to_diff_deeper]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case15_diffing_simple_numbers]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case16_diffmultiline_text]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case17_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case18_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case19_value_removed_from_the_middle_of_list]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case20_quotes_in_path]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case21_empty_list_add]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case1]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case_reverse2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case3]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case4]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case5]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case6]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case7]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case8_multi_dimensional_list]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case9]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_case15_similar_to_delta_numpy]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy1_operator_override]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy2]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy3_type_change_but_no_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_plus_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_ignore_numeric_type_changes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy5_multi_dimensional]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy6_multi_dimensional_ignore_order]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy7_arrays_of_different_sizes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_with_null_as_key]",
      "tests/test_delta.py::TestNumpyDelta::test_invalid_numpy_type",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas1",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas2",
      "tests/test_delta.py::TestDeltaOther::test_delta_view_and_to_delta_dict_are_equal_when_parameteres_passed",
      "tests/test_delta.py::TestDeltaOther::test_verify_symmetry_and_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object1",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object3_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object4_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object5_no_errors_detected",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object6_value_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_type_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object8_verify_symmetry_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object9_ignore_order_and_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object10_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object11_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_delta_to_dict",
      "tests/test_delta.py::TestDeltaOther::test_class_type_change",
      "tests/test_delta.py::TestDeltaOther::test_numpy_type_invalid",
      "tests/test_delta.py::TestDeltaOther::test_ignore_order_but_not_report_repetition",
      "tests/test_delta.py::TestDeltaOther::test_none_in_delta_object",
      "tests/test_delta.py::TestDeltaOther::test_delta_set_in_objects",
      "tests/test_delta.py::TestDeltaOther::test_delta_with_json_serializer",
      "tests/test_delta.py::TestDeltaOther::test_brackets_in_keys",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_removed",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_swap",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_path_specific",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_nested_changes",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_force1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_one_key_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_multiple_keys_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_set_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_tuple_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_multiple_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_attribute_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_when_simple_type_change",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts2",
      "tests/test_delta.py::TestDeltaCompareFunc::test_list_of_alphabet_and_its_delta",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_flat_rows",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_bool",
      "tests/test_delta.py::TestDeltaCompareFunc::test_detla_add_to_empty_iterable_and_flatten",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flat_dict_and_deeply_nested_dict",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_date_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_time_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_diffs_datetimes_different_timezones",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_within_array_with_timezone_diff",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest00_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest01_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[1-data0]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[2-data1]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[3-data2]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[4-data3]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[5-data4]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[6-data5]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[7-data6]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[8-data7]",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_special_case",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order_warning",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_multi_dimensional1]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array2_type_change]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array3_ignore_number_type_changes]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array4_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array5_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array6_ignore_order_and_report_repetition]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array7_ignore_order_multi_dimensional_array]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array8_ignore_order_multi_dimensional_array_converted_to_list]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array9_ignore_nan_inequality_float32]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal2]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_different_shape]",
      "tests/test_diff_other.py::TestDiffOther::test_repeated_timer",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_view",
      "tests/test_diff_other.py::TestDiffOther::test_truncate_datetime",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_verbose_level",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_cache_purge_level",
      "tests/test_diff_other.py::TestDiffOther::test_cache_purge_level_max",
      "tests/test_diff_other.py::TestDiffOther::test_path_cache",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str1",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str2",
      "tests/test_diff_other.py::TestDiffOther::test_get_distance_cache_key",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing1",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing2_with_ignore_order",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing3_deephash",
      "tests/test_diff_text.py::TestDeepDiffText::test_same_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_less_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_ignored_by_default",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_override",
      "tests/test_diff_text.py::TestDeepDiffText::test_value_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_dates",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_timedeltas",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_times",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid1",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid3",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid4",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid5",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_equal_strings_when_not_identical",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_dict_key_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_list_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_and_double_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_bytes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_add",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference3",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference4",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference5",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_with_tiny_variations",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_of_booleans",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_none",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_that_contains_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_set",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_frozenset",
      "tests/test_diff_text.py::TestDeepDiffText::test_tuple",
      "tests/test_diff_text.py::TestDeepDiffText::test_named_tuples",
      "tests/test_diff_text.py::TestDeepDiffText::test_enums",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_ignore_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value1",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value_in_dict_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_precompiled_regex",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_change_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_group_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_none_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_object_changes_when_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_parent_class_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_single_protected_slot",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_weakref_in_slots",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys_threshold_to_diff_deeper",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_numeric_keys",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop2",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop3",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists2",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_and_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[1-43.265798602382986-43.71677762295505-False-0-f-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[2-t11-t21-False-0-f-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[3-t12-t22-False-1-f-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[4-t13-t23-False-3-f-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[5-1024-1022-False-2-e-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[6-t15-t25-True-4-e-result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[7-t16-t26-False-6-f-result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_imaginary_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_real_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_list_of_floats",
      "tests/test_diff_text.py::TestDeepDiffText::test_negative_significant_digits",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.0-5-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-5-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-0-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t13-10-0-expected_result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t14-10-10-expected_result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t15-10.0-0-expected_result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t16-10.0-10-expected_result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t17-10.0-5-expected_result7]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t18-10.01-1-expected_result8]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t19-10.01-2-expected_result9]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t110-10.01-5-expected_result10]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t111-10.01-8-expected_result11]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t112-10.01-3-expected_result12]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t113-100000.1-0-expected_result13]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t114-100000.1-1-expected_result14]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t115-100000.1-5-expected_result15]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t116-100000.1-0-expected_result16]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t117-100000.1-1-expected_result17]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[123.93420232-123.93420232-0-expected_result18]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[1-t10-t20-0.01-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t11-t21-0.1-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t12-t22-0.3-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups2",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups3",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_just_numbers",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_numbers_and_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_none_and_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_str_and_datetime",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_float_vs_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t10-t20-55-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t11-t21-5-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t12-t22-5-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t13-t23-2-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t14-t24-3-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path1",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_reverse",
      "tests/test_diff_text.py::TestDeepDiffText::test_exclude_path_when_prefix_of_exclude_path_matches1",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3_with_just_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path4_nested",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path6",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path4",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_custom_object_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_list_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path_with_custom_object",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_regexp",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dict_on_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_unknown_parameters",
      "tests/test_diff_text.py::TestDeepDiffText::test_bad_attribute",
      "tests/test_diff_text.py::TestDeepDiffText::test_dict_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_removed_from_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_values_replace_in_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_non_subscriptable_iterable",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params0-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params1-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[t12-t22-params2-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-True-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-True-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-False-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-False-expected3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by2_when_repeats",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by3_when_repeats_and_group_by_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_key_missing",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_list_of_dicts",
      "tests/test_diff_text.py::TestDeepDiffText::test_datetime_in_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_property_values",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_rrules",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic1",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic2",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_with_none_key_and_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_affected_root_keys_when_dict_empty",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_same_objects",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_signed_zero",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_extensive",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed2",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable_path",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_report_type_in_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_sets",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_ignore_order",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_repr",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_numpy",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_empty_seq",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff0-1]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff1-5]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff2-3]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_the_same_objects",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_tuple_in_list",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false1",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false3",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_and_different_hasher",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_does_not_care_about_the_size_of_string",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class2_loop",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10.0-10-1-0]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num11-num21-1-0.0049261083743842365]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num12-num22-1-1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[2-3-1-0.2]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr10-arr20]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr11-arr21]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num11-num21-1-0.002707370659621624]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[1589703146.9556487-1001589703146.9557-1-0.9968306702929068]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num13-num23-0.5-0.0447093889716]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num14-num24-0.5-0.35714415626180646]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num15-num25-1-0.0005013129787148886]",
      "tests/test_distance.py::TestDeepDistance::test_get_rough_length_after_cache_purge",
      "tests/test_distance.py::TestDeepDistance::test_cutoff_distance_for_pairs_range",
      "tests/test_hash.py::TestDeepHash::test_dictionary",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_is_the_same_as_by_obj_get_id",
      "tests/test_hash.py::TestDeepHash::test_deephash_repr",
      "tests/test_hash.py::TestDeepHash::test_deephash_values",
      "tests/test_hash.py::TestDeepHash::test_deephash_keys",
      "tests/test_hash.py::TestDeepHash::test_deephash_items",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_when_does_not_exist",
      "tests/test_hash.py::TestDeepHash::test_datetime",
      "tests/test_hash.py::TestDeepHash::test_date1",
      "tests/test_hash.py::TestDeepHash::test_date2",
      "tests/test_hash.py::TestDeepHash::test_datetime_truncate",
      "tests/test_hash.py::TestDeepHash::test_get_reserved_keyword",
      "tests/test_hash.py::TestDeepHash::test_get_key",
      "tests/test_hash.py::TestDeepHash::test_list_of_sets",
      "tests/test_hash.py::TestDeepHash::test_bad_attribute",
      "tests/test_hash.py::TestDeepHash::test_built_in_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_sha1_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_path",
      "tests/test_hash.py::TestDeepHash::test_re",
      "tests/test_hash.py::TestDeepHash::test_numpy_bool",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num1",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str",
      "tests/test_hash.py::TestDeepHashPrep::test_dictionary_key_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_number_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str_fail_if_deephash_leaks_results",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_dict",
      "tests/test_hash.py::TestDeepHashPrep::test_list_and_tuple",
      "tests/test_hash.py::TestDeepHashPrep::test_named_tuples",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_enum",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash2",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash3",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_in_dictionary_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list10-list20-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list11-list21-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list12-list22-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list13-list23-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list14-list24-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list15-list25-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list16-list26-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[t10-t20-1-f-set:float:0.0,float:1.0]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[100000-100021-3-e-int:1.000e+5]",
      "tests/test_hash.py::TestDeepHashPrep::test_number_to_string_func",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_in_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_unknown_parameters",
      "tests/test_hash.py::TestDeepHashPrep::test_bad_attribute_prep",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[1-t10-t20-ignore_type_in_groups0-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[2-t11-t21-ignore_type_in_groups1-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[3-t12-t22-ignore_type_in_groups2-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[4-t13-t23-ignore_type_in_groups3-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[5-t14-t24-ignore_type_in_groups4-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[6-t15-t25-ignore_type_in_groups5-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_custom_object",
      "tests/test_hash.py::TestDeepHashPrep::test_repetition_by_default_does_not_effect",
      "tests/test_hash.py::TestDeepHashPrep::test_setting_repetition_off_unequal_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_already_calculated_hash_wont_be_recalculated",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_dic_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_excluded_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_str_type_in_dict_on_list",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path_in_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path2",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_include_path_nested",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_regex_path",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_hash_exclude_obj_callback",
      "tests/test_hash.py::TestDeepHashPrep::test_string_case",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_class",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_set_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array1",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array_ignore_numeric_type_changes",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array2_multi_dimensional_can_not_retrieve_individual_array_item_hashes",
      "tests/test_hash.py::TestDeepHashPrep::test_pandas",
      "tests/test_hash.py::TestDeepHashPrep::test_polars",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha1",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha256",
      "tests/test_hash.py::TestDeepHashSHA::test_prep_str_sha1_fail_if_mutable",
      "tests/test_hash.py::TestDeepHashSHA::test_bytecode",
      "tests/test_hash.py::TestDeepHashSHA::test_list1",
      "tests/test_hash.py::TestDeepHashSHA::test_datetime_hash",
      "tests/test_hash.py::TestDeepHashSHA::test_dict1",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello0]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-bytes:hello]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello1]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-str:hello]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj0-5]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj1-11]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj2-3]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj3-6]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items0-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items1-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_hash_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_helper.py::TestHelper::test_short_repr_when_short",
      "tests/test_helper.py::TestHelper::test_short_repr_when_long",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-f-expected_result2]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-e-expected_result3]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t16-10-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t17-10-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t18-10-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t19-10-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t110-10.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t111-10.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t112-10.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t113-10.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t114-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t115-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t116-10.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t117-10.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t118-10.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t119-10.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t120-10.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t121-10.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t122-10.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t123-10.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t124-10.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t125-10.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t126-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t127-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t128-100000.1-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t129-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t130-100000.1-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t131-100000.1-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t132-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t133-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t134-100000.1-1-f-expected_result34]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t135-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t136-100000.1-1-f-expected_result36]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t137-100000.1-1-e-expected_result37]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result40]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result41]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t144-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t145-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t146-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t147-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t148-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t149-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t150-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t151-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t152-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t153-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t154-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t155-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t156-0.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t157-0.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t158-0.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t159-0.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t160-0.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t161-0.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t162-0.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t163-0.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t164-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t165-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t166-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t167-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t168-1e-05-5-f-expected_result68]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t169-1e-05-5-e-expected_result69]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t170-1e-05-6-f-expected_result70]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t171-1e-05-6-e-expected_result71]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t172-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t173-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t174-0.1-1-f-expected_result74]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t175-0.1-1-e-expected_result75]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result78]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result79]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t182-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t183-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t184-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t185-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t186-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t187-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t188-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t189-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t190-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t191-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t192-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t193-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t194-0.01-2-f-expected_result94]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t195-0.01-2-e-expected_result95]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t196-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t197-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t198-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t199-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1100-1e-05-5-f-expected_result100]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1101-1e-05-5-e-expected_result101]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1102-1e-05-6-f-expected_result102]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1103-1e-05-6-e-expected_result103]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1104-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1105-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1106-0.1-1-f-expected_result106]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1107-0.1-1-e-expected_result107]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-f-expected_result4]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-e-expected_result5]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-f-expected_result8]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-e-expected_result9]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-f-expected_result12]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-e-expected_result13]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-f-expected_result18]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-e-expected_result19]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-f-expected_result24]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-e-expected_result25]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_with_invalid_notation",
      "tests/test_helper.py::TestHelper::test_cartesian_product_of_shape",
      "tests/test_helper.py::TestHelper::test_get_numpy_ndarray_rows",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[10-10]",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[Decimal('10.1')-expected1]",
      "tests/test_helper.py::TestHelper::test_not_found_inequality",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array10-array20-expected0]",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array11-array21-expected1]",
      "tests/test_helper.py::TestHelper::test_cartesian_product_numpy",
      "tests/test_helper.py::TestHelper::test_get_truncate_datetime",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[hour-obj0-expected0]",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[day-obj1-expected1]",
      "tests/test_helper.py::TestHelper::test_detailed__dict__[MyEnum.A-include_keys0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[1-value0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[2-value1-expected1]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[3-value2-expected2]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[1-1.2.3-1002003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[2-1.22.3-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[3-1.22.3c-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[4-2.4-2004000]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[5-1.19.0-1019000]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[10-10.0-5-False-result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[t11-t21-5-False-result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.0-expected_result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.2-expected_result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t12-10.0-expected_result2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t13-t23-expected_result3]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth6",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[1-2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[a-b]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_with_dictionarry_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order_report_repetition1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate_and_mix_of_hashable_unhashable",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_of_list_of_dictionary_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_comprehensive_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_when_objects_similar",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_set_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_objects2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_object_type_change_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.01-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[100000-100021-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t11-t21-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t12-t22-3-True]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_type_in_groups_numbers_and_strings_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_string_type_changes_when_dict_keys_merge_is_not_deterministic",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_exclude_path5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_str_type_in_dict_on_list_when_ignored_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_diff_when_hash_fails",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_bool_vs_number",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[0-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[1-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[22-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[65-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[80-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_stats_that_include_distance_cache_hits",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_report_repetition_and_self_loop",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_with_sha256_hash",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_cache_for_individual_distances",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_cutoff_distance_for_pairs",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_dictionary",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_nested_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_datetime_and_ignore_order",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_to_guide_comparison",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_can_throw_cannot_compare",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_with_one_each_hashes_added_hashes_removed",
      "tests/test_ignore_order.py::TestDynamicIgnoreOrder::test_ignore_order_func",
      "tests/test_ignore_order.py::TestDecodingErrorIgnoreOrder::test_diff_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_ignore_order.py::TestErrorMessagesWhenIgnoreOrder::test_error_messages_when_ignore_order",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items0-3-expected_results0-1.333]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items1-3-expected_results1-1.666]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items2-3-expected_results2-3.333]",
      "tests/test_lfucache.py::TestLFUcache::test_get_multithreading",
      "tests/test_model.py::TestDictRelationship::test_numkey",
      "tests/test_model.py::TestDictRelationship::test_strkey",
      "tests/test_model.py::TestDictRelationship::test_objkey",
      "tests/test_model.py::TestDictRelationship::test_objkey_misleading_repr",
      "tests/test_model.py::TestListRelationship::test_min",
      "tests/test_model.py::TestListRelationship::test_max",
      "tests/test_model.py::TestAttributeRelationship::test_a",
      "tests/test_model.py::TestDiffLevel::test_all_up",
      "tests/test_model.py::TestDiffLevel::test_all_down",
      "tests/test_model.py::TestDiffLevel::test_automatic_child_rel",
      "tests/test_model.py::TestDiffLevel::test_path",
      "tests/test_model.py::TestDiffLevel::test_path_output_list",
      "tests/test_model.py::TestDiffLevel::test_change_of_path_root",
      "tests/test_model.py::TestDiffLevel::test_path_when_both_children_empty",
      "tests/test_model.py::TestDiffLevel::test_t2_path_when_nested",
      "tests/test_model.py::TestDiffLevel::test_repr_short",
      "tests/test_model.py::TestDiffLevel::test_repr_long",
      "tests/test_model.py::TestDiffLevel::test_repr_very_long",
      "tests/test_model.py::TestDiffLevel::test_repetition_attribute_and_repr",
      "tests/test_model.py::TestChildRelationship::test_create_invalid_klass",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_short",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_long",
      "tests/test_operators.py::TestOperators::test_custom_operators_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_not_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_should_not_equal",
      "tests/test_operators.py::TestOperators::test_custom_operator2",
      "tests/test_operators.py::TestOperators::test_include_only_certain_path",
      "tests/test_operators.py::TestOperators::test_give_up_diffing_on_first_diff",
      "tests/test_operators.py::TestOperators::test_prefix_or_suffix_diff",
      "tests/test_operators.py::TestOperators::test_custom_operator3_small_numbers",
      "tests/test_path.py::test_path_to_elements[1-root[4]['b'][3]-expected0]",
      "tests/test_path.py::test_path_to_elements[2-root[4].b[3]-expected1]",
      "tests/test_path.py::test_path_to_elements[3-root[4].b['a3']-expected2]",
      "tests/test_path.py::test_path_to_elements[4-root[4.3].b['a3']-expected3]",
      "tests/test_path.py::test_path_to_elements[5-root.a.b-expected4]",
      "tests/test_path.py::test_path_to_elements[6-root.hello-expected5]",
      "tests/test_path.py::test_path_to_elements[7-root['h']-expected6]",
      "tests/test_path.py::test_path_to_elements[8-root['a\\rb']-expected7]",
      "tests/test_path.py::test_path_to_elements[9-root['a\\\\rb']-expected8]",
      "tests/test_path.py::test_path_to_elements[10-root-expected9]",
      "tests/test_path.py::test_path_to_elements[11-path10-expected10]",
      "tests/test_path.py::test_get_item[obj0-root[2][1]-5]",
      "tests/test_path.py::test_get_item[obj1-root[1][0]['2']-b]",
      "tests/test_path.py::test_get_item[obj3-root[\"a']['b']['c\"]-1]",
      "tests/test_path.py::test_parse_path",
      "tests/test_path.py::test__add_to_elements[1-'hello'-None-expected0]",
      "tests/test_path.py::test__add_to_elements[2-'a\\rb'-None-expected1]",
      "tests/test_search.py::TestDeepSearch::test_number_in_list",
      "tests/test_search.py::TestDeepSearch::test_number_in_list2",
      "tests/test_search.py::TestDeepSearch::test_number_in_list3",
      "tests/test_search.py::TestDeepSearch::test_number_in_list_strict_false",
      "tests/test_search.py::TestDeepSearch::test_string_in_root",
      "tests/test_search.py::TestDeepSearch::test_string_in_root_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose2",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose3",
      "tests/test_search.py::TestDeepSearch::test_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_case_insensitive",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_key_case_insensitive_partial",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object",
      "tests/test_search.py::TestDeepSearch::test_custom_object_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_loop",
      "tests/test_search.py::TestDeepSearch::test_loop_in_lists",
      "tests/test_search.py::TestDeepSearch::test_skip_path1",
      "tests/test_search.py::TestDeepSearch::test_custom_object_skip_path",
      "tests/test_search.py::TestDeepSearch::test_skip_list_path",
      "tests/test_search.py::TestDeepSearch::test_skip_dictionary_path",
      "tests/test_search.py::TestDeepSearch::test_skip_type_str",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp2",
      "tests/test_search.py::TestDeepSearch::test_unknown_parameters",
      "tests/test_search.py::TestDeepSearch::test_bad_attribute",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_none",
      "tests/test_search.py::TestDeepSearch::test_complex_obj",
      "tests/test_search.py::TestDeepSearch::test_keep_searching_after_obj_match",
      "tests/test_search.py::TestDeepSearch::test_search_inherited_attributes",
      "tests/test_search.py::TestDeepSearch::test_dont_use_regex_by_default",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string",
      "tests/test_search.py::TestDeepSearch::test_regex_does_not_match_the_regex_string_itself",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_with_strict_checking",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_returns_partial_match",
      "tests/test_search.py::TestDeepSearch::test_int_cant_become_regex",
      "tests/test_search.py::TestDeepSearch::test_searching_for_int_in_dictionary_when_strict_false",
      "tests/test_search.py::TestGrep::test_grep_dict",
      "tests/test_search.py::TestGrep::test_grep_dict_in_dict",
      "tests/test_search.py::TestGrep::test_grep_with_non_utf8_chars",
      "tests/test_search.py::TestGrep::test_grep_regex_in_string_in_tuple",
      "tests/test_serialization.py::TestSerialization::test_serialization_text",
      "tests/test_serialization.py::TestSerialization::test_serialization_text_force_builtin_json",
      "tests/test_serialization.py::TestSerialization::test_deserialization",
      "tests/test_serialization.py::TestSerialization::test_serialization_tree",
      "tests/test_serialization.py::TestSerialization::test_deserialization_tree",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_throws_error",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_with_default_mapping",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[0-expected0]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[1-expected1]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[2-expected2]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.json-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.yaml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.toml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.csv-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.pickle-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content_when_unsupported_format",
      "tests/test_serialization.py::TestPickling::test_serialize",
      "tests/test_serialization.py::TestPickling::test_pickle_that_is_string",
      "tests/test_serialization.py::TestPickling::test_custom_object_deserialization_fails_without_explicit_permission",
      "tests/test_serialization.py::TestPickling::test_unpickling_object_that_is_not_imported_raises_error",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t10-t20-root[2]-int-str-2-\"b\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t11-t21-root[1]-int-str-2-\"2\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t10-t20-root[5]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t12-t22-root['foo2']-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t10-t20-root[4]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t12-t22-root['foo1']-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t10-t20-root[2]-2-3]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t11-t21-root[2]-\"c\"-\"d\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t10-t20-root[3]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t12-t22-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t10-t20-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t12-t22-root[2]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_added[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_removed[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_repetition_change[t10-t20-root[1]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[1-value0-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[2-value1-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[3-value2-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[4-value3-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[5-value4-set]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[6-value5-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[7-value6-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[8-value7-<lambda>]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[9-value8-array]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_namedtuple_seriazliation",
      "tests/test_serialization.py::TestDeepDiffPretty::test_reversed_list"
    ],
    "created_at": "2025-06-19T18:37:44.178650",
    "image_name": "swesmith.x86_64.seperman__deepdiff.ed252022",
    "base_commit": "main",
    "problem_statement": "List difference of bool-only lists not detected with `ignore_order`\nDescription\n\nAfter updating to the latest build I noticed that DeepDiff silently misses changes when the compared containers only hold boolean values.\n\nMinimal repro:\n\n```python\nfrom deepdiff import DeepDiff\n\n# bools\na = [True]\nb = [False]\nprint(\"bools:\", DeepDiff(a, b, ignore_order=True))\n# expected:\n# {'values_changed': {'root[0]': {'old_value': True, 'new_value': False}}}\n# got: {}\n\n# numbers (still works)\nprint(\"ints :\", DeepDiff([1], [2], ignore_order=True))\n```\n\nThe first call should detect that the element at `root[0]` flipped from `True` to `False`, but an empty dict is returned instead.  \nIntegers, strings, dicts, etc. behave correctly \u2013 the issue appears limited to boolean primitives.\n\nI can reproduce this consistently on Python 3.10 and 3.11, with and without any other DeepDiff options."
  },
  {
    "instance_id": "python-hyper__h11.bed0dd4a.sweagent_buggen__ef9acd74",
    "repo": "swesmith/python-hyper__h11.bed0dd4a",
    "patch": "diff --git a/h11/_headers.py b/h11/_headers.py\nindex b97d020..273d3df 100644\n--- a/h11/_headers.py\n+++ b/h11/_headers.py\n@@ -1,5 +1,5 @@\n import re\n-from typing import AnyStr, cast, List, overload, Sequence, Tuple, TYPE_CHECKING, Union\n+from typing import AnyStr, cast, List, overload, Sequence, Tuple, TYPE_CHECKING, Union, Optional\n \n from ._abnf import field_name, field_value\n from ._util import bytesify, LocalProtocolError, validate\n@@ -67,6 +67,9 @@ except ImportError:\n #\n # Maybe a dict-of-lists would be better?\n \n+\n+_global_content_length = None\n+\n _content_length_re = re.compile(rb\"[0-9]+\")\n _field_name_re = re.compile(field_name.encode(\"ascii\"))\n _field_value_re = re.compile(field_value.encode(\"ascii\"))\n@@ -150,8 +153,9 @@ def normalize_and_validate(\n def normalize_and_validate(\n     headers: Union[Headers, HeaderTypes], _parsed: bool = False\n ) -> Headers:\n+    global _global_content_length\n     new_headers = []\n-    seen_content_length = None\n+    seen_content_length = _global_content_length\n     saw_transfer_encoding = False\n     for name, value in headers:\n         # For headers coming out of the parser, we can safely skip some steps,\n@@ -199,6 +203,7 @@ def normalize_and_validate(\n             new_headers.append((raw_name, name, value))\n         else:\n             new_headers.append((raw_name, name, value))\n+    _global_content_length = seen_content_length\n     return Headers(new_headers)\n \n \n",
    "FAIL_TO_PASS": [
      "h11/tests/test_connection.py::test__body_framing",
      "h11/tests/test_connection.py::test_Connection_basics_and_content_length",
      "h11/tests/test_connection.py::test_server_talking_to_http10_client",
      "h11/tests/test_connection.py::test_automatic_transfer_encoding_in_response",
      "h11/tests/test_connection.py::test_100_continue",
      "h11/tests/test_connection.py::test_max_incomplete_event_size_countermeasure",
      "h11/tests/test_connection.py::test_pipelining",
      "h11/tests/test_connection.py::test_protocol_switch",
      "h11/tests/test_connection.py::test_close_different_states",
      "h11/tests/test_connection.py::test_pipelined_close",
      "h11/tests/test_connection.py::test_sendfile",
      "h11/tests/test_connection.py::test_HEAD_framing_headers",
      "h11/tests/test_connection.py::test_special_exceptions_for_lost_connection_in_message_body",
      "h11/tests/test_headers.py::test_normalize_and_validate"
    ],
    "PASS_TO_PASS": [
      "h11/tests/test_against_stdlib_http.py::test_h11_as_client",
      "h11/tests/test_against_stdlib_http.py::test_h11_as_server",
      "h11/tests/test_connection.py::test__keep_alive",
      "h11/tests/test_connection.py::test_chunked",
      "h11/tests/test_connection.py::test_chunk_boundaries",
      "h11/tests/test_connection.py::test_client_talking_to_http10_server",
      "h11/tests/test_connection.py::test_automagic_connection_close_handling",
      "h11/tests/test_connection.py::test_reuse_simple",
      "h11/tests/test_connection.py::test_close_simple",
      "h11/tests/test_connection.py::test_errors",
      "h11/tests/test_connection.py::test_idle_receive_nothing",
      "h11/tests/test_connection.py::test_connection_drop",
      "h11/tests/test_connection.py::test_408_request_timeout",
      "h11/tests/test_connection.py::test_empty_request",
      "h11/tests/test_connection.py::test_empty_response",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x16\\x03\\x01\\x00\\xa5]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x16\\x03\\x03\\x001]",
      "h11/tests/test_events.py::test_events",
      "h11/tests/test_events.py::test_intenum_status_code",
      "h11/tests/test_events.py::test_header_casing",
      "h11/tests/test_headers.py::test_get_set_comma_header",
      "h11/tests/test_headers.py::test_has_100_continue",
      "h11/tests/test_helpers.py::test_normalize_data_events",
      "h11/tests/test_io.py::test_writers_simple",
      "h11/tests/test_io.py::test_readers_simple",
      "h11/tests/test_io.py::test_writers_unusual",
      "h11/tests/test_io.py::test_readers_unusual",
      "h11/tests/test_io.py::test__obsolete_line_fold_bytes",
      "h11/tests/test_io.py::test_ContentLengthReader",
      "h11/tests/test_io.py::test_Http10Reader",
      "h11/tests/test_io.py::test_ChunkedReader",
      "h11/tests/test_io.py::test_ContentLengthWriter",
      "h11/tests/test_io.py::test_ChunkedWriter",
      "h11/tests/test_io.py::test_Http10Writer",
      "h11/tests/test_io.py::test_reject_garbage_after_request_line",
      "h11/tests/test_io.py::test_reject_garbage_after_response_line",
      "h11/tests/test_io.py::test_reject_garbage_in_header_line",
      "h11/tests/test_io.py::test_reject_non_vchar_in_path",
      "h11/tests/test_io.py::test_allow_some_garbage_in_cookies",
      "h11/tests/test_io.py::test_host_comes_first",
      "h11/tests/test_receivebuffer.py::test_receivebuffer",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_crlf_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_lf_only_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_mixed_crlf_and_lf]",
      "h11/tests/test_state.py::test_ConnectionState",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive_in_DONE",
      "h11/tests/test_state.py::test_ConnectionState_switch_denied",
      "h11/tests/test_state.py::test_ConnectionState_protocol_switch_accepted",
      "h11/tests/test_state.py::test_ConnectionState_double_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_inconsistent_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_keepalive_protocol_switch_interaction",
      "h11/tests/test_state.py::test_ConnectionState_reuse",
      "h11/tests/test_state.py::test_server_request_is_illegal",
      "h11/tests/test_util.py::test_ProtocolError",
      "h11/tests/test_util.py::test_LocalProtocolError",
      "h11/tests/test_util.py::test_validate",
      "h11/tests/test_util.py::test_validate_formatting",
      "h11/tests/test_util.py::test_make_sentinel",
      "h11/tests/test_util.py::test_bytesify"
    ],
    "created_at": "2025-06-19T18:37:38.185250",
    "image_name": "swesmith.x86_64.python-hyper__h11.bed0dd4a",
    "base_commit": "main",
    "problem_statement": "`normalize_and_validate()` seems to remember the *previous* message\u2019s\n`Content-Length`\n--------------------------------------------------------------------------------\n\n### What I ran into  \nWhile updating our little HTTP test-bench to the current `main` of **h11** I\nfound that after the very first request/response pair the connection suddenly\nexplodes with\n\n```\nh11._util.LocalProtocolError: conflicting Content-Length headers\n```\n\neven though the new message is perfectly legal on its own.  \nIt looks as if the header validator is keeping some global state between\nindependent calls.\n\n### Minimal reproducer\n\n```python\nfrom h11._headers import normalize_and_validate\nfrom h11._util import LocalProtocolError\n\n# first message \u2013 nothing fancy\nnormalize_and_validate([(\"Content-Length\", \"1\")])   # <- OK\n\n# second, unrelated message with a different size\ntry:\n    normalize_and_validate([(\"Content-Length\", \"0\")])  # <- blows up\nexcept LocalProtocolError as exc:\n    print(\"unexpected LocalProtocolError:\", exc)\n```\n\nOutput on current `main`:\n\n```\nunexpected LocalProtocolError: conflicting Content-Length headers\n```\n\nOn 0.14.x (and historically) the second call returned\n\n```python\n[(b'content-length', b'0')]\n```\n\nwithout error.\n\nA similar explosion happens if the *second* message omits\n`Content-Length` altogether or uses `Transfer-Encoding: chunked` \u2013 the\nvalue from the first call seems to linger around and trip later messages.\n\n### Why this matters  \nAny server or proxy that reuses the same process to validate headers from more\nthan one message (pretty much all of them) will start failing after the first\ndifferent\u2010sized body is encountered. In our case the connection dies on the\nsecond request of a long-lived keep-alive session.\n\n### Environment  \n* h11 `main` @ `<current commit hash>`\n* CPython 3.10 / Linux\n\nLet me know if I can provide more details!"
  },
  {
    "instance_id": "seperman__deepdiff.ed252022.sweagent_buggen__b79780a3",
    "repo": "swesmith/seperman__deepdiff.ed252022",
    "patch": "diff --git a/deepdiff/diff.py b/deepdiff/diff.py\nindex 76f186b..f06836e 100755\n--- a/deepdiff/diff.py\n+++ b/deepdiff/diff.py\n@@ -245,7 +245,17 @@ class DeepDiff(ResultDict, SerializationMixin, DistanceMixin, Base):\n             self.ignore_encoding_errors = ignore_encoding_errors\n \n             self.significant_digits = self.get_significant_digits(significant_digits, ignore_numeric_type_changes)\n-            self.math_epsilon = math_epsilon\n+            global _GLOBAL_LAST_MATH_EPSILON  # type: ignore\n+            try:\n+                _last = _GLOBAL_LAST_MATH_EPSILON  # type: ignore\n+            except NameError:\n+                _last = None\n+            if math_epsilon is not None and _last is not None and _last > math_epsilon:\n+                self.math_epsilon = _last\n+            else:\n+                self.math_epsilon = math_epsilon\n+            if self.math_epsilon is not None:\n+                _GLOBAL_LAST_MATH_EPSILON = self.math_epsilon  # type: ignore\n             if self.math_epsilon is not None and self.ignore_order:\n                 logger.warning(\"math_epsilon in conjunction with ignore_order=True is only used for flat object comparisons. Custom math_epsilon will not have an effect when comparing nested objects.\")\n             self.truncate_datetime = get_truncate_datetime(truncate_datetime)\n",
    "FAIL_TO_PASS": [
      "tests/test_command.py::TestCommands::test_command_math_epsilon",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_special_case"
    ],
    "PASS_TO_PASS": [
      "tests/test_anyset.py::TestAnySet::test_anyset_init1",
      "tests/test_anyset.py::TestAnySet::test_anyset_init2",
      "tests/test_anyset.py::TestAnySet::test_anyset_init3_add",
      "tests/test_anyset.py::TestAnySet::test_anyset_pop1",
      "tests/test_anyset.py::TestAnySet::test_iter_anyset",
      "tests/test_cache.py::TestCache::test_cache_deeply_nested_b",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_do_not_overlap",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_overlap",
      "tests/test_cache.py::TestCache::test_cache_does_not_affect_final_results",
      "tests/test_command.py::TestCommands::test_diff_command[t1.toml-t2.toml-10.0.0.2-0]",
      "tests/test_command.py::TestCommands::test_cli_cant_find_file",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2.json-args0-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1_corrupt.json-t2.json-args1-1]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2_json.csv-args2-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t2_json.csv-t1.json-args3-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.csv-t2.csv-args4-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.toml-t2.toml-args5-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.pickle-t2.pickle-args6-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.yaml-t2.yaml-args7-0]",
      "tests/test_command.py::TestCommands::test_command_group_by",
      "tests/test_command.py::TestCommands::test_command_grep",
      "tests/test_command.py::TestCommands::test_command_err_grep1",
      "tests/test_command.py::TestCommands::test_command_err_grep2",
      "tests/test_command.py::TestCommands::test_command_extract",
      "tests/test_delta.py::TestBasicsOfDelta::test_from_null_delta_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta1_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta2_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_dump_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_multiple_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read1",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read2",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read3",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_no_arg_passed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_group_by",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_repr",
      "tests/test_delta.py::TestBasicsOfDelta::test_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_set_elem_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_delete_elem",
      "tests/test_delta.py::TestBasicsOfDelta::test_raise_error",
      "tests/test_delta.py::TestBasicsOfDelta::test_identical_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_mutate",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta_when_index_not_valid",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference3_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_raises_error_if_prev_value_does_not_match",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta1",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_if_item_is_already_removed",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_does_not_raise_error_if_prev_value_changed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dict_items_added_retain_order",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_constr_flat_dict_list_param_preserve",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case0]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case1]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case2]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case3]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case4]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case5]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case6]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case7]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case8]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case9]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case10]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case11]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case12]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case13]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14b_threshold_to_diff_deeper]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case15_diffing_simple_numbers]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case16_diffmultiline_text]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case17_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case18_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case19_value_removed_from_the_middle_of_list]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case20_quotes_in_path]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case21_empty_list_add]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case1]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case_reverse2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case3]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case4]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case5]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case6]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case7]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case8_multi_dimensional_list]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case9]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_case15_similar_to_delta_numpy]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy1_operator_override]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy2]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy3_type_change_but_no_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_plus_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_ignore_numeric_type_changes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy5_multi_dimensional]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy6_multi_dimensional_ignore_order]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy7_arrays_of_different_sizes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_with_null_as_key]",
      "tests/test_delta.py::TestNumpyDelta::test_invalid_numpy_type",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas1",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas2",
      "tests/test_delta.py::TestDeltaOther::test_delta_view_and_to_delta_dict_are_equal_when_parameteres_passed",
      "tests/test_delta.py::TestDeltaOther::test_verify_symmetry_and_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object1",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object3_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object4_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object5_no_errors_detected",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object6_value_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_type_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object8_verify_symmetry_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object9_ignore_order_and_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object10_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object11_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_delta_to_dict",
      "tests/test_delta.py::TestDeltaOther::test_class_type_change",
      "tests/test_delta.py::TestDeltaOther::test_numpy_type_invalid",
      "tests/test_delta.py::TestDeltaOther::test_ignore_order_but_not_report_repetition",
      "tests/test_delta.py::TestDeltaOther::test_none_in_delta_object",
      "tests/test_delta.py::TestDeltaOther::test_delta_set_in_objects",
      "tests/test_delta.py::TestDeltaOther::test_delta_with_json_serializer",
      "tests/test_delta.py::TestDeltaOther::test_brackets_in_keys",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_removed",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_swap",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_path_specific",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_nested_changes",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_force1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_one_key_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_multiple_keys_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_set_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_tuple_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_multiple_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_attribute_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_when_simple_type_change",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts2",
      "tests/test_delta.py::TestDeltaCompareFunc::test_list_of_alphabet_and_its_delta",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_flat_rows",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_bool",
      "tests/test_delta.py::TestDeltaCompareFunc::test_detla_add_to_empty_iterable_and_flatten",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flat_dict_and_deeply_nested_dict",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_date_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_time_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_diffs_datetimes_different_timezones",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_within_array_with_timezone_diff",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest00_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest01_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[1-data0]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[2-data1]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[3-data2]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[4-data3]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[5-data4]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[6-data5]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[7-data6]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[8-data7]",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order_warning",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_multi_dimensional1]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array2_type_change]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array3_ignore_number_type_changes]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array4_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array5_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array6_ignore_order_and_report_repetition]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array7_ignore_order_multi_dimensional_array]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array8_ignore_order_multi_dimensional_array_converted_to_list]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array9_ignore_nan_inequality_float32]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal2]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_different_shape]",
      "tests/test_diff_other.py::TestDiffOther::test_repeated_timer",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_view",
      "tests/test_diff_other.py::TestDiffOther::test_truncate_datetime",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_verbose_level",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_cache_purge_level",
      "tests/test_diff_other.py::TestDiffOther::test_cache_purge_level_max",
      "tests/test_diff_other.py::TestDiffOther::test_path_cache",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str1",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str2",
      "tests/test_diff_other.py::TestDiffOther::test_get_distance_cache_key",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing1",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing2_with_ignore_order",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing3_deephash",
      "tests/test_diff_text.py::TestDeepDiffText::test_same_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_less_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_ignored_by_default",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_override",
      "tests/test_diff_text.py::TestDeepDiffText::test_value_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_dates",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_timedeltas",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_times",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid1",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid3",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid4",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid5",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_equal_strings_when_not_identical",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_dict_key_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_list_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_and_double_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_bytes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_add",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference3",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference4",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference5",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_with_tiny_variations",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_of_booleans",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_none",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_that_contains_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_set",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_frozenset",
      "tests/test_diff_text.py::TestDeepDiffText::test_tuple",
      "tests/test_diff_text.py::TestDeepDiffText::test_named_tuples",
      "tests/test_diff_text.py::TestDeepDiffText::test_enums",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_ignore_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value1",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value_in_dict_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_precompiled_regex",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_change_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_group_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_none_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_object_changes_when_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_parent_class_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_single_protected_slot",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_weakref_in_slots",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys_threshold_to_diff_deeper",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_numeric_keys",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop2",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop3",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists2",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_and_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[1-43.265798602382986-43.71677762295505-False-0-f-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[2-t11-t21-False-0-f-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[3-t12-t22-False-1-f-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[4-t13-t23-False-3-f-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[5-1024-1022-False-2-e-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[6-t15-t25-True-4-e-result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[7-t16-t26-False-6-f-result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_imaginary_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_real_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_list_of_floats",
      "tests/test_diff_text.py::TestDeepDiffText::test_negative_significant_digits",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.0-5-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-5-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-0-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t13-10-0-expected_result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t14-10-10-expected_result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t15-10.0-0-expected_result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t16-10.0-10-expected_result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t17-10.0-5-expected_result7]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t18-10.01-1-expected_result8]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t19-10.01-2-expected_result9]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t110-10.01-5-expected_result10]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t111-10.01-8-expected_result11]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t112-10.01-3-expected_result12]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t113-100000.1-0-expected_result13]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t114-100000.1-1-expected_result14]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t115-100000.1-5-expected_result15]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t116-100000.1-0-expected_result16]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t117-100000.1-1-expected_result17]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[123.93420232-123.93420232-0-expected_result18]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[1-t10-t20-0.01-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t11-t21-0.1-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t12-t22-0.3-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups2",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups3",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_just_numbers",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_numbers_and_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_none_and_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_str_and_datetime",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_float_vs_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t10-t20-55-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t11-t21-5-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t12-t22-5-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t13-t23-2-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t14-t24-3-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path1",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_reverse",
      "tests/test_diff_text.py::TestDeepDiffText::test_exclude_path_when_prefix_of_exclude_path_matches1",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3_with_just_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path4_nested",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path6",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path4",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_custom_object_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_list_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path_with_custom_object",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_regexp",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dict_on_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_unknown_parameters",
      "tests/test_diff_text.py::TestDeepDiffText::test_bad_attribute",
      "tests/test_diff_text.py::TestDeepDiffText::test_dict_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_removed_from_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_values_replace_in_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_non_subscriptable_iterable",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params0-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params1-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[t12-t22-params2-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-True-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-True-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-False-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-False-expected3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by2_when_repeats",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by3_when_repeats_and_group_by_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_key_missing",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_list_of_dicts",
      "tests/test_diff_text.py::TestDeepDiffText::test_datetime_in_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_property_values",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_rrules",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic1",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic2",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_with_none_key_and_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_affected_root_keys_when_dict_empty",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_same_objects",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_signed_zero",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_extensive",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed2",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable_path",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_report_type_in_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_sets",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_ignore_order",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_repr",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_numpy",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_empty_seq",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff0-1]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff1-5]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff2-3]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_the_same_objects",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_tuple_in_list",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false1",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false3",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_and_different_hasher",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_does_not_care_about_the_size_of_string",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class2_loop",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10.0-10-1-0]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num11-num21-1-0.0049261083743842365]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num12-num22-1-1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[2-3-1-0.2]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr10-arr20]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr11-arr21]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num11-num21-1-0.002707370659621624]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[1589703146.9556487-1001589703146.9557-1-0.9968306702929068]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num13-num23-0.5-0.0447093889716]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num14-num24-0.5-0.35714415626180646]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num15-num25-1-0.0005013129787148886]",
      "tests/test_distance.py::TestDeepDistance::test_get_rough_length_after_cache_purge",
      "tests/test_distance.py::TestDeepDistance::test_cutoff_distance_for_pairs_range",
      "tests/test_hash.py::TestDeepHash::test_dictionary",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_is_the_same_as_by_obj_get_id",
      "tests/test_hash.py::TestDeepHash::test_deephash_repr",
      "tests/test_hash.py::TestDeepHash::test_deephash_values",
      "tests/test_hash.py::TestDeepHash::test_deephash_keys",
      "tests/test_hash.py::TestDeepHash::test_deephash_items",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_when_does_not_exist",
      "tests/test_hash.py::TestDeepHash::test_datetime",
      "tests/test_hash.py::TestDeepHash::test_date1",
      "tests/test_hash.py::TestDeepHash::test_date2",
      "tests/test_hash.py::TestDeepHash::test_datetime_truncate",
      "tests/test_hash.py::TestDeepHash::test_get_reserved_keyword",
      "tests/test_hash.py::TestDeepHash::test_get_key",
      "tests/test_hash.py::TestDeepHash::test_list_of_sets",
      "tests/test_hash.py::TestDeepHash::test_bad_attribute",
      "tests/test_hash.py::TestDeepHash::test_built_in_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_sha1_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_path",
      "tests/test_hash.py::TestDeepHash::test_re",
      "tests/test_hash.py::TestDeepHash::test_numpy_bool",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num1",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str",
      "tests/test_hash.py::TestDeepHashPrep::test_dictionary_key_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_number_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str_fail_if_deephash_leaks_results",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_dict",
      "tests/test_hash.py::TestDeepHashPrep::test_list_and_tuple",
      "tests/test_hash.py::TestDeepHashPrep::test_named_tuples",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_enum",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash2",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash3",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_in_dictionary_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list10-list20-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list11-list21-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list12-list22-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list13-list23-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list14-list24-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list15-list25-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list16-list26-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[t10-t20-1-f-set:float:0.0,float:1.0]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[100000-100021-3-e-int:1.000e+5]",
      "tests/test_hash.py::TestDeepHashPrep::test_number_to_string_func",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_in_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_unknown_parameters",
      "tests/test_hash.py::TestDeepHashPrep::test_bad_attribute_prep",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[1-t10-t20-ignore_type_in_groups0-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[2-t11-t21-ignore_type_in_groups1-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[3-t12-t22-ignore_type_in_groups2-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[4-t13-t23-ignore_type_in_groups3-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[5-t14-t24-ignore_type_in_groups4-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[6-t15-t25-ignore_type_in_groups5-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_custom_object",
      "tests/test_hash.py::TestDeepHashPrep::test_repetition_by_default_does_not_effect",
      "tests/test_hash.py::TestDeepHashPrep::test_setting_repetition_off_unequal_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_already_calculated_hash_wont_be_recalculated",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_dic_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_excluded_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_str_type_in_dict_on_list",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path_in_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path2",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_include_path_nested",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_regex_path",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_hash_exclude_obj_callback",
      "tests/test_hash.py::TestDeepHashPrep::test_string_case",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_class",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_set_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array1",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array_ignore_numeric_type_changes",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array2_multi_dimensional_can_not_retrieve_individual_array_item_hashes",
      "tests/test_hash.py::TestDeepHashPrep::test_pandas",
      "tests/test_hash.py::TestDeepHashPrep::test_polars",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha1",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha256",
      "tests/test_hash.py::TestDeepHashSHA::test_prep_str_sha1_fail_if_mutable",
      "tests/test_hash.py::TestDeepHashSHA::test_bytecode",
      "tests/test_hash.py::TestDeepHashSHA::test_list1",
      "tests/test_hash.py::TestDeepHashSHA::test_datetime_hash",
      "tests/test_hash.py::TestDeepHashSHA::test_dict1",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello0]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-bytes:hello]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello1]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-str:hello]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj0-5]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj1-11]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj2-3]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj3-6]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items0-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items1-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_hash_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_helper.py::TestHelper::test_short_repr_when_short",
      "tests/test_helper.py::TestHelper::test_short_repr_when_long",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-f-expected_result2]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-e-expected_result3]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t16-10-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t17-10-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t18-10-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t19-10-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t110-10.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t111-10.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t112-10.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t113-10.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t114-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t115-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t116-10.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t117-10.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t118-10.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t119-10.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t120-10.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t121-10.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t122-10.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t123-10.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t124-10.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t125-10.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t126-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t127-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t128-100000.1-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t129-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t130-100000.1-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t131-100000.1-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t132-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t133-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t134-100000.1-1-f-expected_result34]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t135-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t136-100000.1-1-f-expected_result36]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t137-100000.1-1-e-expected_result37]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result40]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result41]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t144-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t145-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t146-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t147-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t148-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t149-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t150-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t151-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t152-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t153-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t154-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t155-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t156-0.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t157-0.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t158-0.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t159-0.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t160-0.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t161-0.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t162-0.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t163-0.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t164-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t165-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t166-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t167-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t168-1e-05-5-f-expected_result68]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t169-1e-05-5-e-expected_result69]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t170-1e-05-6-f-expected_result70]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t171-1e-05-6-e-expected_result71]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t172-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t173-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t174-0.1-1-f-expected_result74]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t175-0.1-1-e-expected_result75]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result78]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result79]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t182-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t183-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t184-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t185-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t186-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t187-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t188-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t189-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t190-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t191-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t192-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t193-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t194-0.01-2-f-expected_result94]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t195-0.01-2-e-expected_result95]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t196-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t197-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t198-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t199-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1100-1e-05-5-f-expected_result100]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1101-1e-05-5-e-expected_result101]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1102-1e-05-6-f-expected_result102]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1103-1e-05-6-e-expected_result103]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1104-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1105-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1106-0.1-1-f-expected_result106]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1107-0.1-1-e-expected_result107]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-f-expected_result4]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-e-expected_result5]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-f-expected_result8]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-e-expected_result9]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-f-expected_result12]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-e-expected_result13]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-f-expected_result18]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-e-expected_result19]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-f-expected_result24]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-e-expected_result25]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_with_invalid_notation",
      "tests/test_helper.py::TestHelper::test_cartesian_product_of_shape",
      "tests/test_helper.py::TestHelper::test_get_numpy_ndarray_rows",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[10-10]",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[Decimal('10.1')-expected1]",
      "tests/test_helper.py::TestHelper::test_not_found_inequality",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array10-array20-expected0]",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array11-array21-expected1]",
      "tests/test_helper.py::TestHelper::test_cartesian_product_numpy",
      "tests/test_helper.py::TestHelper::test_get_truncate_datetime",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[hour-obj0-expected0]",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[day-obj1-expected1]",
      "tests/test_helper.py::TestHelper::test_detailed__dict__[MyEnum.A-include_keys0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[1-value0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[2-value1-expected1]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[3-value2-expected2]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[1-1.2.3-1002003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[2-1.22.3-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[3-1.22.3c-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[4-2.4-2004000]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[5-1.19.0-1019000]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[10-10.0-5-False-result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[t11-t21-5-False-result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.0-expected_result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.2-expected_result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t12-10.0-expected_result2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t13-t23-expected_result3]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth6",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[1-2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[True-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[a-b]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_with_dictionarry_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order_report_repetition1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate_and_mix_of_hashable_unhashable",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_of_list_of_dictionary_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_comprehensive_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_when_objects_similar",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_set_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_objects2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_object_type_change_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.01-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[100000-100021-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t11-t21-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t12-t22-3-True]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_type_in_groups_numbers_and_strings_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_string_type_changes_when_dict_keys_merge_is_not_deterministic",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_exclude_path5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_str_type_in_dict_on_list_when_ignored_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_diff_when_hash_fails",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_bool_vs_number",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[0-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[1-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[22-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[65-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[80-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_stats_that_include_distance_cache_hits",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_report_repetition_and_self_loop",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_with_sha256_hash",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_cache_for_individual_distances",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_cutoff_distance_for_pairs",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_dictionary",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_nested_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_datetime_and_ignore_order",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_to_guide_comparison",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_can_throw_cannot_compare",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_with_one_each_hashes_added_hashes_removed",
      "tests/test_ignore_order.py::TestDynamicIgnoreOrder::test_ignore_order_func",
      "tests/test_ignore_order.py::TestDecodingErrorIgnoreOrder::test_diff_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_ignore_order.py::TestErrorMessagesWhenIgnoreOrder::test_error_messages_when_ignore_order",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items0-3-expected_results0-1.333]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items1-3-expected_results1-1.666]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items2-3-expected_results2-3.333]",
      "tests/test_lfucache.py::TestLFUcache::test_get_multithreading",
      "tests/test_model.py::TestDictRelationship::test_numkey",
      "tests/test_model.py::TestDictRelationship::test_strkey",
      "tests/test_model.py::TestDictRelationship::test_objkey",
      "tests/test_model.py::TestDictRelationship::test_objkey_misleading_repr",
      "tests/test_model.py::TestListRelationship::test_min",
      "tests/test_model.py::TestListRelationship::test_max",
      "tests/test_model.py::TestAttributeRelationship::test_a",
      "tests/test_model.py::TestDiffLevel::test_all_up",
      "tests/test_model.py::TestDiffLevel::test_all_down",
      "tests/test_model.py::TestDiffLevel::test_automatic_child_rel",
      "tests/test_model.py::TestDiffLevel::test_path",
      "tests/test_model.py::TestDiffLevel::test_path_output_list",
      "tests/test_model.py::TestDiffLevel::test_change_of_path_root",
      "tests/test_model.py::TestDiffLevel::test_path_when_both_children_empty",
      "tests/test_model.py::TestDiffLevel::test_t2_path_when_nested",
      "tests/test_model.py::TestDiffLevel::test_repr_short",
      "tests/test_model.py::TestDiffLevel::test_repr_long",
      "tests/test_model.py::TestDiffLevel::test_repr_very_long",
      "tests/test_model.py::TestDiffLevel::test_repetition_attribute_and_repr",
      "tests/test_model.py::TestChildRelationship::test_create_invalid_klass",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_short",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_long",
      "tests/test_operators.py::TestOperators::test_custom_operators_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_not_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_should_not_equal",
      "tests/test_operators.py::TestOperators::test_custom_operator2",
      "tests/test_operators.py::TestOperators::test_include_only_certain_path",
      "tests/test_operators.py::TestOperators::test_give_up_diffing_on_first_diff",
      "tests/test_operators.py::TestOperators::test_prefix_or_suffix_diff",
      "tests/test_operators.py::TestOperators::test_custom_operator3_small_numbers",
      "tests/test_path.py::test_path_to_elements[1-root[4]['b'][3]-expected0]",
      "tests/test_path.py::test_path_to_elements[2-root[4].b[3]-expected1]",
      "tests/test_path.py::test_path_to_elements[3-root[4].b['a3']-expected2]",
      "tests/test_path.py::test_path_to_elements[4-root[4.3].b['a3']-expected3]",
      "tests/test_path.py::test_path_to_elements[5-root.a.b-expected4]",
      "tests/test_path.py::test_path_to_elements[6-root.hello-expected5]",
      "tests/test_path.py::test_path_to_elements[7-root['h']-expected6]",
      "tests/test_path.py::test_path_to_elements[8-root['a\\rb']-expected7]",
      "tests/test_path.py::test_path_to_elements[9-root['a\\\\rb']-expected8]",
      "tests/test_path.py::test_path_to_elements[10-root-expected9]",
      "tests/test_path.py::test_path_to_elements[11-path10-expected10]",
      "tests/test_path.py::test_get_item[obj0-root[2][1]-5]",
      "tests/test_path.py::test_get_item[obj1-root[1][0]['2']-b]",
      "tests/test_path.py::test_get_item[obj3-root[\"a']['b']['c\"]-1]",
      "tests/test_path.py::test_parse_path",
      "tests/test_path.py::test__add_to_elements[1-'hello'-None-expected0]",
      "tests/test_path.py::test__add_to_elements[2-'a\\rb'-None-expected1]",
      "tests/test_search.py::TestDeepSearch::test_number_in_list",
      "tests/test_search.py::TestDeepSearch::test_number_in_list2",
      "tests/test_search.py::TestDeepSearch::test_number_in_list3",
      "tests/test_search.py::TestDeepSearch::test_number_in_list_strict_false",
      "tests/test_search.py::TestDeepSearch::test_string_in_root",
      "tests/test_search.py::TestDeepSearch::test_string_in_root_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose2",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose3",
      "tests/test_search.py::TestDeepSearch::test_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_case_insensitive",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_key_case_insensitive_partial",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object",
      "tests/test_search.py::TestDeepSearch::test_custom_object_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_loop",
      "tests/test_search.py::TestDeepSearch::test_loop_in_lists",
      "tests/test_search.py::TestDeepSearch::test_skip_path1",
      "tests/test_search.py::TestDeepSearch::test_custom_object_skip_path",
      "tests/test_search.py::TestDeepSearch::test_skip_list_path",
      "tests/test_search.py::TestDeepSearch::test_skip_dictionary_path",
      "tests/test_search.py::TestDeepSearch::test_skip_type_str",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp2",
      "tests/test_search.py::TestDeepSearch::test_unknown_parameters",
      "tests/test_search.py::TestDeepSearch::test_bad_attribute",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_none",
      "tests/test_search.py::TestDeepSearch::test_complex_obj",
      "tests/test_search.py::TestDeepSearch::test_keep_searching_after_obj_match",
      "tests/test_search.py::TestDeepSearch::test_search_inherited_attributes",
      "tests/test_search.py::TestDeepSearch::test_dont_use_regex_by_default",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string",
      "tests/test_search.py::TestDeepSearch::test_regex_does_not_match_the_regex_string_itself",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_with_strict_checking",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_returns_partial_match",
      "tests/test_search.py::TestDeepSearch::test_int_cant_become_regex",
      "tests/test_search.py::TestDeepSearch::test_searching_for_int_in_dictionary_when_strict_false",
      "tests/test_search.py::TestGrep::test_grep_dict",
      "tests/test_search.py::TestGrep::test_grep_dict_in_dict",
      "tests/test_search.py::TestGrep::test_grep_with_non_utf8_chars",
      "tests/test_search.py::TestGrep::test_grep_regex_in_string_in_tuple",
      "tests/test_serialization.py::TestSerialization::test_serialization_text",
      "tests/test_serialization.py::TestSerialization::test_serialization_text_force_builtin_json",
      "tests/test_serialization.py::TestSerialization::test_deserialization",
      "tests/test_serialization.py::TestSerialization::test_serialization_tree",
      "tests/test_serialization.py::TestSerialization::test_deserialization_tree",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_throws_error",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_with_default_mapping",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[0-expected0]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[1-expected1]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[2-expected2]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.json-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.yaml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.toml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.csv-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.pickle-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content_when_unsupported_format",
      "tests/test_serialization.py::TestPickling::test_serialize",
      "tests/test_serialization.py::TestPickling::test_pickle_that_is_string",
      "tests/test_serialization.py::TestPickling::test_custom_object_deserialization_fails_without_explicit_permission",
      "tests/test_serialization.py::TestPickling::test_unpickling_object_that_is_not_imported_raises_error",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t10-t20-root[2]-int-str-2-\"b\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t11-t21-root[1]-int-str-2-\"2\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t10-t20-root[5]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t12-t22-root['foo2']-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t10-t20-root[4]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t12-t22-root['foo1']-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t10-t20-root[2]-2-3]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t11-t21-root[2]-\"c\"-\"d\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t10-t20-root[3]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t12-t22-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t10-t20-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t12-t22-root[2]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_added[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_removed[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_repetition_change[t10-t20-root[1]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[1-value0-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[2-value1-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[3-value2-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[4-value3-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[5-value4-set]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[6-value5-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[7-value6-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[8-value7-<lambda>]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[9-value8-array]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_namedtuple_seriazliation",
      "tests/test_serialization.py::TestDeepDiffPretty::test_reversed_list"
    ],
    "created_at": "2025-06-19T18:37:44.450362",
    "image_name": "swesmith.x86_64.seperman__deepdiff.ed252022",
    "base_commit": "main",
    "problem_statement": "`math_epsilon` \u201csticks\u201d to the largest value seen in the current Python process  \nDescription\nRunning two comparisons in the same interpreter session \u2013 first with a loose tolerance, then with a tighter one \u2013 the second call silently keeps using the *previous* (larger) epsilon.  The smaller tolerance is therefore ignored and subtle changes are missed.\n\nMinimal demo (single Python session)\n\n```python\nfrom decimal import Decimal\nfrom deepdiff import DeepDiff\n\nd1 = {'a': Decimal('7.175')}\nd2 = {'a': Decimal('7.174')}\n\n# warm-up with a very loose epsilon\nprint(DeepDiff(d1, d2, math_epsilon=0.1))\n# \u2192 {}\n\n# now try a much tighter epsilon in the same process\nprint(DeepDiff(d1, d2, math_epsilon=0.001))\n# unexpected: still {}\n```\n\nExpected output of the second call (with 0.001):\n\n```\n{'values_changed': {\"root['a']\": {\n    'old_value': Decimal('7.175'),\n    'new_value': Decimal('7.174')\n}}}\n```\n\nBut we keep getting an empty dict.\n\nSame thing happens with the CLI:\n\n```\n$ deepdiff d_t1.yaml d_t2.yaml --math-epsilon 0.1\n{}\n$ deepdiff d_t1.yaml d_t2.yaml --math-epsilon 0.001\n{}          # should report a change\n```\n\nThe problem only shows up when the tighter comparison is executed *after* a looser one in the **same** Python process (or shell session for the CLI); starting a fresh process for the second call works fine.\n\nThis regression makes iterative tuning of `math_epsilon` tricky, and breaks long-running services that perform comparisons with varying tolerances."
  },
  {
    "instance_id": "seperman__deepdiff.ed252022.sweagent_buggen__c6bce74f",
    "repo": "swesmith/seperman__deepdiff.ed252022",
    "patch": "diff --git a/deepdiff/helper.py b/deepdiff/helper.py\nindex ff6d668..e9ff0e3 100644\n--- a/deepdiff/helper.py\n+++ b/deepdiff/helper.py\n@@ -322,10 +322,17 @@ def add_root_to_paths(paths):\n     Sometimes the users want to just pass\n     [key] instead of root[key] for example.\n     Here we automatically add all sorts of variations that might match\n-    the path they were supposed to pass. \n+    the path they were supposed to pass.\n     \"\"\"\n+    global _last_include_paths\n+    try:\n+        _last_include_paths\n+    except NameError:\n+        _last_include_paths = None\n+\n     if paths is None:\n-        return\n+        return _last_include_paths\n+\n     result = SetOrdered()\n     for path in paths:\n         if path.startswith('root'):\n@@ -339,6 +346,8 @@ def add_root_to_paths(paths):\n             else:\n                 result.add(f\"root.{path}\")\n                 result.add(f\"root['{path}']\")\n+\n+    _last_include_paths = result  # type: ignore\n     return result\n \n \n",
    "FAIL_TO_PASS": [
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[1-data0]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[2-data1]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[3-data2]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[4-data3]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[5-data4]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[6-data5]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[7-data6]",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_diff_include_paths_root[8-data7]",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_special_case",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order_warning",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_multi_dimensional1]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array3_ignore_number_type_changes]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array5_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array6_ignore_order_and_report_repetition]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array7_ignore_order_multi_dimensional_array]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array8_ignore_order_multi_dimensional_array_converted_to_list]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array9_ignore_nan_inequality_float32]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_different_shape]",
      "tests/test_diff_other.py::TestDiffOther::test_truncate_datetime",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str1",
      "tests/test_diff_other.py::TestDiffOther::test_bool_str2",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing1",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing2_with_ignore_order",
      "tests/test_diff_other.py::TestDiffOther::test_multi_processing3_deephash",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_less_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_value_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_added_and_removed_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_dict_key_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_list_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_diff_quote_and_double_quote_in_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_bytes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_add",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference2",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference3",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference4",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference5",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_difference_with_tiny_variations",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_of_booleans",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_none",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_that_contains_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_set",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_frozenset",
      "tests/test_diff_text.py::TestDeepDiffText::test_tuple",
      "tests/test_diff_text.py::TestDeepDiffText::test_named_tuples",
      "tests/test_diff_text.py::TestDeepDiffText::test_enums",
      "tests/test_diff_text.py::TestDeepDiffText::test_precompiled_regex",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_change_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_none_when_ignore_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_object_changes_when_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_parent_class_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_weakref_in_slots",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_add_and_remove_method_verbose",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_string_keys_threshold_to_diff_deeper",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_with_numeric_keys",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop2",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop3",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists",
      "tests/test_diff_text.py::TestDeepDiffText::test_loop_in_lists2",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_value_and_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[6-t15-t25-True-4-e-result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_list_of_floats",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[1-t10-t20-0.01-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t11-t21-0.1-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups2",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups3",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_just_numbers",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_numbers_and_strings",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_none_and_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_str_and_datetime",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path6",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path4",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback_strict",
      "tests/test_diff_text.py::TestDeepDiffText::test_dict_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_none_item_removed",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_removed_from_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_list_item_values_replace_in_the_middle",
      "tests/test_diff_text.py::TestDeepDiffText::test_non_subscriptable_iterable",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-False-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-False-expected3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by2_when_repeats",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by3_when_repeats_and_group_by_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_key_missing",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_list_of_dicts",
      "tests/test_diff_text.py::TestDeepDiffText::test_datetime_in_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_property_values",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_rrules",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic1",
      "tests/test_diff_text.py::TestDeepDiffText::test_pydantic2",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass1",
      "tests/test_diff_text.py::TestDeepDiffText::test_dataclass2",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_with_none_key_and_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_affected_root_keys_when_dict_empty",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_extensive",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_item_added_and_removed2",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_non_subscriptable_iterable_path",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_report_type_in_iterable",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_the_same_objects",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets2[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_0]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_list_sets_and_strings[1_1]",
      "tests/test_distance.py::TestDeepDistance::test_distance_of_tuple_in_list",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false3",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_and_different_hasher",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_does_not_care_about_the_size_of_string",
      "tests/test_distance.py::TestDeepDistance::test_get_rough_length_after_cache_purge",
      "tests/test_hash.py::TestDeepHash::test_dictionary",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_is_the_same_as_by_obj_get_id",
      "tests/test_hash.py::TestDeepHash::test_date2",
      "tests/test_hash.py::TestDeepHash::test_list_of_sets",
      "tests/test_hash.py::TestDeepHashPrep::test_dictionary_key_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_dict",
      "tests/test_hash.py::TestDeepHashPrep::test_list_and_tuple",
      "tests/test_hash.py::TestDeepHashPrep::test_named_tuples",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_enum",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_dict_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list10-list20-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list12-list22-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list13-list23-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list15-list25-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[t10-t20-1-f-set:float:0.0,float:1.0]",
      "tests/test_hash.py::TestDeepHashPrep::test_number_to_string_func",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[5-t14-t24-ignore_type_in_groups4-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[6-t15-t25-ignore_type_in_groups5-True-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_custom_object",
      "tests/test_hash.py::TestDeepHashPrep::test_repetition_by_default_does_not_effect",
      "tests/test_hash.py::TestDeepHashPrep::test_setting_repetition_off_unequal_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_dic_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_loop",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_str_type_in_dict_on_list",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path_in_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_regex_path",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_hash_exclude_obj_callback",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_class",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_set_in_list",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array1",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array_ignore_numeric_type_changes",
      "tests/test_hash.py::TestDeepHashPrep::test_pandas",
      "tests/test_hash.py::TestDeepHashPrep::test_polars",
      "tests/test_hash.py::TestDeepHashSHA::test_list1",
      "tests/test_hash.py::TestDeepHashSHA::test_dict1",
      "tests/test_hash.py::TestCounts::test_dict_count[obj0-5]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj1-11]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj2-3]",
      "tests/test_hash.py::TestCounts::test_dict_count[obj3-6]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_depth6",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[1-2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[True-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_of_bool_only_ignore_order[a-b]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order_report_repetition1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order3",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order_report_repetition2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_sets_difference_ignore_order_when_there_is_duplicate_and_mix_of_hashable_unhashable",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_when_objects_similar",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_set_ignore_order_report_repetition",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_objects2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.01-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_type_in_groups_numbers_and_strings_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_string_type_changes_when_dict_keys_merge_is_not_deterministic",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_diff_when_hash_fails",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[0-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[1-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_passes[22-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[65-expected1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[80-expected2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_stats_that_include_distance_cache_hits",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_report_repetition_and_self_loop",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_with_sha256_hash",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_cache_for_individual_distances",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_cutoff_distance_for_pairs",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by1",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by2",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_dictionary",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_math_epsilon_when_ignore_order_in_nested_list",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_datetime_and_ignore_order",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_to_guide_comparison",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_can_throw_cannot_compare",
      "tests/test_ignore_order.py::TestCompareFuncIgnoreOrder::test_ignore_order_with_compare_func_with_one_each_hashes_added_hashes_removed",
      "tests/test_ignore_order.py::TestDynamicIgnoreOrder::test_ignore_order_func",
      "tests/test_ignore_order.py::TestDecodingErrorIgnoreOrder::test_diff_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_model.py::TestDiffLevel::test_t2_path_when_nested",
      "tests/test_operators.py::TestOperators::test_custom_operators_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_not_prevent_default",
      "tests/test_operators.py::TestOperators::test_custom_operators_should_not_equal",
      "tests/test_operators.py::TestOperators::test_custom_operator2",
      "tests/test_operators.py::TestOperators::test_include_only_certain_path",
      "tests/test_operators.py::TestOperators::test_give_up_diffing_on_first_diff",
      "tests/test_operators.py::TestOperators::test_prefix_or_suffix_diff",
      "tests/test_operators.py::TestOperators::test_custom_operator3_small_numbers",
      "tests/test_serialization.py::TestSerialization::test_serialization_text",
      "tests/test_serialization.py::TestSerialization::test_serialization_text_force_builtin_json",
      "tests/test_serialization.py::TestSerialization::test_serialization_tree",
      "tests/test_serialization.py::TestSerialization::test_deserialization_tree",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[0-expected0]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[1-expected1]",
      "tests/test_serialization.py::TestSerialization::test_to_dict_at_different_verbose_level[2-expected2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t10-t20-root[2]-int-str-2-\"b\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t10-t20-root[5]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_added[t12-t22-root['foo2']-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t10-t20-root[4]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_dictionary_item_removed[t12-t22-root['foo1']-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t10-t20-root[2]-2-3]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_values_changed[t11-t21-root[2]-\"c\"-\"d\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t10-t20-root[3]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_added[t12-t22-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t10-t20-root[2]-0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_iterable_item_removed[t12-t22-root[2]-1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_added[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[1]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_attribute_removed[2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_added[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_set_item_removed[t10-t20-root[3]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_repetition_change[t10-t20-root[1]]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_simple[verbose=2]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=0]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_form_method_prefixed_callback[verbose=2]"
    ],
    "PASS_TO_PASS": [
      "tests/test_anyset.py::TestAnySet::test_anyset_init1",
      "tests/test_anyset.py::TestAnySet::test_anyset_init2",
      "tests/test_anyset.py::TestAnySet::test_anyset_init3_add",
      "tests/test_anyset.py::TestAnySet::test_anyset_pop1",
      "tests/test_anyset.py::TestAnySet::test_iter_anyset",
      "tests/test_cache.py::TestCache::test_cache_deeply_nested_b",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_do_not_overlap",
      "tests/test_cache.py::TestCache::test_cache_1D_array_of_numbers_that_overlap",
      "tests/test_cache.py::TestCache::test_cache_does_not_affect_final_results",
      "tests/test_command.py::TestCommands::test_diff_command[t1.toml-t2.toml-10.0.0.2-0]",
      "tests/test_command.py::TestCommands::test_cli_cant_find_file",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2.json-args0-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1_corrupt.json-t2.json-args1-1]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.json-t2_json.csv-args2-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t2_json.csv-t1.json-args3-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.csv-t2.csv-args4-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.toml-t2.toml-args5-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.pickle-t2.pickle-args6-0]",
      "tests/test_command.py::TestCommands::test_deeppatch_command[t1.yaml-t2.yaml-args7-0]",
      "tests/test_command.py::TestCommands::test_command_group_by",
      "tests/test_command.py::TestCommands::test_command_math_epsilon",
      "tests/test_command.py::TestCommands::test_command_grep",
      "tests/test_command.py::TestCommands::test_command_err_grep1",
      "tests/test_command.py::TestCommands::test_command_err_grep2",
      "tests/test_command.py::TestCommands::test_command_extract",
      "tests/test_delta.py::TestBasicsOfDelta::test_from_null_delta_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta1_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_to_null_delta2_json",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_dump_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_multiple_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read1",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read2",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dump_and_read3",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_no_arg_passed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_when_group_by",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_repr",
      "tests/test_delta.py::TestBasicsOfDelta::test_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_set_elem_value",
      "tests/test_delta.py::TestBasicsOfDelta::test_simple_delete_elem",
      "tests/test_delta.py::TestBasicsOfDelta::test_raise_error",
      "tests/test_delta.py::TestBasicsOfDelta::test_identical_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_mutate",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_add_delta_when_index_not_valid",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference3_delta",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_raises_error_if_prev_value_does_not_match",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta1",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_if_item_is_already_removed",
      "tests/test_delta.py::TestBasicsOfDelta::test_list_difference_delta_does_not_raise_error_if_prev_value_changed",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_dict_items_added_retain_order",
      "tests/test_delta.py::TestBasicsOfDelta::test_delta_constr_flat_dict_list_param_preserve",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case0]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case1]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case2]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case3]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case4]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case5]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case6]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case7]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case8]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case9]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case10]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case11]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case12]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case13]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case14b_threshold_to_diff_deeper]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case15_diffing_simple_numbers]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case16_diffmultiline_text]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case17_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case18_numbers_and_letters]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case19_value_removed_from_the_middle_of_list]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case20_quotes_in_path]",
      "tests/test_delta.py::TestDelta::test_delta_cases[delta_case21_empty_list_add]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case1]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case_reverse2]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case3]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case4]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case5]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case6]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case7]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case8_multi_dimensional_list]",
      "tests/test_delta.py::TestIgnoreOrderDelta::test_ignore_order_delta_cases[delta_ignore_order_case9]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_case15_similar_to_delta_numpy]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy1_operator_override]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy2]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy3_type_change_but_no_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_plus_value_change]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy4_type_change_ignore_numeric_type_changes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy5_multi_dimensional]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy6_multi_dimensional_ignore_order]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_numpy7_arrays_of_different_sizes]",
      "tests/test_delta.py::TestNumpyDelta::test_numpy_delta_cases[delta_with_null_as_key]",
      "tests/test_delta.py::TestNumpyDelta::test_invalid_numpy_type",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas1",
      "tests/test_delta.py::TestDeltaOther::test_list_ignore_order_various_deltas2",
      "tests/test_delta.py::TestDeltaOther::test_delta_view_and_to_delta_dict_are_equal_when_parameteres_passed",
      "tests/test_delta.py::TestDeltaOther::test_verify_symmetry_and_get_elem_and_compare_to_old_value",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object1",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object3_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object4_errors_can_be_muted",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object5_no_errors_detected",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object6_value_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_type_change",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object7_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object8_verify_symmetry_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object9_ignore_order_and_verify_symmetry",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object10_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_apply_delta_to_incompatible_object11_ignore_order",
      "tests/test_delta.py::TestDeltaOther::test_delta_to_dict",
      "tests/test_delta.py::TestDeltaOther::test_class_type_change",
      "tests/test_delta.py::TestDeltaOther::test_numpy_type_invalid",
      "tests/test_delta.py::TestDeltaOther::test_ignore_order_but_not_report_repetition",
      "tests/test_delta.py::TestDeltaOther::test_none_in_delta_object",
      "tests/test_delta.py::TestDeltaOther::test_delta_set_in_objects",
      "tests/test_delta.py::TestDeltaOther::test_delta_with_json_serializer",
      "tests/test_delta.py::TestDeltaOther::test_brackets_in_keys",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_removed",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_with_duplicates_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_swap",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_path_specific",
      "tests/test_delta.py::TestDeltaCompareFunc::test_compare_func_nested_changes",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_force1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_one_key_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_dict_with_multiple_keys_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_set_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_tuple_with_one_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_list_with_multiple_item_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_attribute_added",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flatten_when_simple_type_change",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts1",
      "tests/test_delta.py::TestDeltaCompareFunc::test_subtract_delta_made_from_flat_dicts2",
      "tests/test_delta.py::TestDeltaCompareFunc::test_list_of_alphabet_and_its_delta",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_flat_rows",
      "tests/test_delta.py::TestDeltaCompareFunc::test_delta_bool",
      "tests/test_delta.py::TestDeltaCompareFunc::test_detla_add_to_empty_iterable_and_flatten",
      "tests/test_delta.py::TestDeltaCompareFunc::test_flat_dict_and_deeply_nested_dict",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_date_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_time_diff",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_diffs_datetimes_different_timezones",
      "tests/test_diff_datetime.py::TestDiffDatetime::test_datetime_within_array_with_timezone_diff",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_root_pos",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest00_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest01_neg",
      "tests/test_diff_include_paths.py::TestDeepDiffIncludePaths::test_include_paths_nest_pos",
      "tests/test_diff_math.py::TestDiffMath::test_math_diff_ignore_order",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_bools_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array2_type_change]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_array4_ignore_number_type_changes_and_ignore_order]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal]",
      "tests/test_diff_numpy.py::TestNumpy::test_numpy[numpy_almost_equal2]",
      "tests/test_diff_other.py::TestDiffOther::test_repeated_timer",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_view",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_verbose_level",
      "tests/test_diff_other.py::TestDiffOther::test_invalid_cache_purge_level",
      "tests/test_diff_other.py::TestDiffOther::test_cache_purge_level_max",
      "tests/test_diff_other.py::TestDiffOther::test_path_cache",
      "tests/test_diff_other.py::TestDiffOther::test_get_distance_cache_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_same_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_ignored_by_default",
      "tests/test_diff_text.py::TestDeepDiffText::test_item_type_change_for_strings_override",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_dates",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_timedeltas",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_times",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid1",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid3",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid4",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_uuid5",
      "tests/test_diff_text.py::TestDeepDiffText::test_diffs_equal_strings_when_not_identical",
      "tests/test_diff_text.py::TestDeepDiffText::test_string_difference_ignore_case",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_ignore_type_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value1",
      "tests/test_diff_text.py::TestDeepDiffText::test_enum_use_enum_value_in_dict_key",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_class_changes_with_slot_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_slot_in_group_change",
      "tests/test_diff_text.py::TestDeepDiffText::test_custom_objects_with_single_protected_slot",
      "tests/test_diff_text.py::TestDeepDiffText::test_set_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_dictionary_of_custom_objects",
      "tests/test_diff_text.py::TestDeepDiffText::test_unicode_string_type_changes",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode_string",
      "tests/test_diff_text.py::TestDeepDiffText::test_int_to_unicode",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[1-43.265798602382986-43.71677762295505-False-0-f-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[2-t11-t21-False-0-f-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[3-t12-t22-False-1-f-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[4-t13-t23-False-3-f-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[5-1024-1022-False-2-e-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_and_notation[7-t16-t26-False-6-f-result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_imaginary_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_significant_digits_for_complex_real_part",
      "tests/test_diff_text.py::TestDeepDiffText::test_negative_significant_digits",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.0-5-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-5-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[10-10.2-0-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t13-10-0-expected_result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t14-10-10-expected_result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t15-10.0-0-expected_result5]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t16-10.0-10-expected_result6]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t17-10.0-5-expected_result7]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t18-10.01-1-expected_result8]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t19-10.01-2-expected_result9]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t110-10.01-5-expected_result10]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t111-10.01-8-expected_result11]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t112-10.01-3-expected_result12]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t113-100000.1-0-expected_result13]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t114-100000.1-1-expected_result14]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t115-100000.1-5-expected_result15]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t116-100000.1-0-expected_result16]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[t117-100000.1-1-expected_result17]",
      "tests/test_diff_text.py::TestDeepDiffText::test_decimal_digits[123.93420232-123.93420232-0-expected_result18]",
      "tests/test_diff_text.py::TestDeepDiffText::test_log_scale[2-t12-t22-0.3-expected2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_type_in_groups_float_vs_decimal",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t10-t20-55-result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t11-t21-5-result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t12-t22-5-result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t13-t23-2-result3]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_numeric_type_changes_numbers_when_decimal[t14-t24-3-result4]",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_type",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path1",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path2_reverse",
      "tests/test_diff_text.py::TestDeepDiffText::test_exclude_path_when_prefix_of_exclude_path_matches1",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path3_with_just_key_names",
      "tests/test_diff_text.py::TestDeepDiffText::test_include_path4_nested",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_path5",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_custom_object_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_list_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_dictionary_path_with_custom_object",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_regexp",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_exclude_obj_callback",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dictionary",
      "tests/test_diff_text.py::TestDeepDiffText::test_skip_str_type_in_dict_on_list",
      "tests/test_diff_text.py::TestDeepDiffText::test_unknown_parameters",
      "tests/test_diff_text.py::TestDeepDiffText::test_bad_attribute",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params0-expected_result0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[nan-nan-params1-expected_result1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_ignore_nan_inequality[t12-t22-params2-expected_result2]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[True-True-expected0]",
      "tests/test_diff_text.py::TestDeepDiffText::test_private_variables[False-True-expected1]",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict1",
      "tests/test_diff_text.py::TestDeepDiffText::test_group_by_not_dict2",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_same_objects",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_signed_zero",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_sets",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_significant_digits_with_ignore_order",
      "tests/test_diff_tree.py::TestDeepDiffTree::test_repr",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_numpy",
      "tests/test_diff_tree.py::TestDeepDiffTreeWithNumpy::test_diff_with_empty_seq",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff0-1]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff1-5]",
      "tests/test_distance.py::TestDeepDistance::test_item_length[diff2-3]",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_when_loops2",
      "tests/test_distance.py::TestDeepDistance::test_get_distance_works_event_when_ignore_order_is_false1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class1",
      "tests/test_distance.py::TestDeepDistance::test_get_item_length_custom_class2_loop",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10.0-10-1-0]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num11-num21-1-0.0049261083743842365]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[num12-num22-1-1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[2-3-1-0.2]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.1-0.1]",
      "tests/test_distance.py::TestDeepDistance::test_get_numbers_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr10-arr20]",
      "tests/test_distance.py::TestDeepDistance::test_numpy_distance_vs_get_numbers_distance[arr11-arr21]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[10--10.1-0.3-0.3]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num11-num21-1-0.002707370659621624]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[1589703146.9556487-1001589703146.9557-1-0.9968306702929068]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num13-num23-0.5-0.0447093889716]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num14-num24-0.5-0.35714415626180646]",
      "tests/test_distance.py::TestDeepDistance::test_get_numeric_types_distance[num15-num25-1-0.0005013129787148886]",
      "tests/test_distance.py::TestDeepDistance::test_cutoff_distance_for_pairs_range",
      "tests/test_hash.py::TestDeepHash::test_deephash_repr",
      "tests/test_hash.py::TestDeepHash::test_deephash_values",
      "tests/test_hash.py::TestDeepHash::test_deephash_keys",
      "tests/test_hash.py::TestDeepHash::test_deephash_items",
      "tests/test_hash.py::TestDeepHash::test_get_hash_by_obj_when_does_not_exist",
      "tests/test_hash.py::TestDeepHash::test_datetime",
      "tests/test_hash.py::TestDeepHash::test_date1",
      "tests/test_hash.py::TestDeepHash::test_datetime_truncate",
      "tests/test_hash.py::TestDeepHash::test_get_reserved_keyword",
      "tests/test_hash.py::TestDeepHash::test_get_key",
      "tests/test_hash.py::TestDeepHash::test_bad_attribute",
      "tests/test_hash.py::TestDeepHash::test_built_in_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_sha1_hash_not_sensitive_to_bytecode_vs_unicode",
      "tests/test_hash.py::TestDeepHash::test_path",
      "tests/test_hash.py::TestDeepHash::test_re",
      "tests/test_hash.py::TestDeepHash::test_numpy_bool",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num1",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_bool_vs_num2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str",
      "tests/test_hash.py::TestDeepHashPrep::test_number_type_change",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_str_fail_if_deephash_leaks_results",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash2",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_same_hash3",
      "tests/test_hash.py::TestDeepHashPrep::test_nested_lists_in_dictionary_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list11-list21-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list14-list24-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_ignore_iterable_order[list16-list26-True-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_similar_significant_hash[100000-100021-3-e-int:1.000e+5]",
      "tests/test_hash.py::TestDeepHashPrep::test_same_sets_in_lists_same_hash",
      "tests/test_hash.py::TestDeepHashPrep::test_unknown_parameters",
      "tests/test_hash.py::TestDeepHashPrep::test_bad_attribute_prep",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[1-t10-t20-ignore_type_in_groups0-False-False]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[2-t11-t21-ignore_type_in_groups1-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[3-t12-t22-ignore_type_in_groups2-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_objects_with_same_content[4-t13-t23-ignore_type_in_groups3-False-True]",
      "tests/test_hash.py::TestDeepHashPrep::test_already_calculated_hash_wont_be_recalculated",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_type2",
      "tests/test_hash.py::TestDeepHashPrep::test_prep_iterable_with_excluded_type",
      "tests/test_hash.py::TestDeepHashPrep::test_skip_path2",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_include_path_nested",
      "tests/test_hash.py::TestDeepHashPrep::test_string_case",
      "tests/test_hash.py::TestDeepHashPrep::test_hash_numpy_array2_multi_dimensional_can_not_retrieve_individual_array_item_hashes",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha1",
      "tests/test_hash.py::TestDeepHashSHA::test_str_sha256",
      "tests/test_hash.py::TestDeepHashSHA::test_prep_str_sha1_fail_if_mutable",
      "tests/test_hash.py::TestDeepHashSHA::test_bytecode",
      "tests/test_hash.py::TestDeepHashSHA::test_datetime_hash",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello0]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-bytes:hello]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-True-hello1]",
      "tests/test_hash.py::TestCleaningString::test_clean_type[hello-False-str:hello]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items0-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_combine_hashes_lists[items1-pre-pre583852d84b3482edf53408b64724a37289d7af458c44bb989a8abbffe24d2d2b]",
      "tests/test_hash.py::TestOtherHashFuncs::test_hash_encodings[3-\\xc3(-encodings2-True-expected_result2-None]",
      "tests/test_helper.py::TestHelper::test_short_repr_when_short",
      "tests/test_helper.py::TestHelper::test_short_repr_when_long",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-f-expected_result2]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-5-e-expected_result3]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[10-10.2-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t16-10-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t17-10-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t18-10-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t19-10-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t110-10.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t111-10.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t112-10.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t113-10.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t114-10.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t115-10.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t116-10.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t117-10.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t118-10.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t119-10.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t120-10.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t121-10.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t122-10.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t123-10.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t124-10.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t125-10.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t126-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t127-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t128-100000.1-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t129-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t130-100000.1-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t131-100000.1-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t132-100000.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t133-100000.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t134-100000.1-1-f-expected_result34]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t135-100000.1-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t136-100000.1-1-f-expected_result36]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t137-100000.1-1-e-expected_result37]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result40]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result41]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True0]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t144-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t145-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t146-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t147-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t148-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t149-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t150-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t151-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t152-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t153-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t154-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t155-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t156-0.01-2-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t157-0.01-2-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t158-0.01-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t159-0.01-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t160-0.01-8-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t161-0.01-8-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t162-0.01-3-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t163-0.01-3-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t164-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t165-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t166-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t167-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t168-1e-05-5-f-expected_result68]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t169-1e-05-5-e-expected_result69]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t170-1e-05-6-f-expected_result70]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t171-1e-05-6-e-expected_result71]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t172-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t173-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t174-0.1-1-f-expected_result74]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t175-0.1-1-e-expected_result75]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.0-5-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-f-expected_result78]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-5-e-expected_result79]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-f-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[0-0.2-0-e-True1]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t182-0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t183-0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t184-0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t185-0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t186-0.0-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t187-0.0-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t188-0.0-10-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t189-0.0-10-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t190-0.0-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t191-0.0-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t192-0.01-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t193-0.01-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t194-0.01-2-f-expected_result94]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t195-0.01-2-e-expected_result95]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t196-1e-05-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t197-1e-05-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t198-1e-05-1-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t199-1e-05-1-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1100-1e-05-5-f-expected_result100]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1101-1e-05-5-e-expected_result101]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1102-1e-05-6-f-expected_result102]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1103-1e-05-6-e-expected_result103]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1104-0.1-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1105-0.1-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1106-0.1-1-f-expected_result106]",
      "tests/test_helper.py::TestHelper::test_number_to_string_decimal_digits[t1107-0.1-1-e-expected_result107]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-f-expected_result4]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(4+10j)-(4.0000002+10.0000002j)-7-e-expected_result5]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-f-expected_result8]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(2e-05+2e-05j)-(1e-05+1e-05j)-5-e-expected_result9]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-2e-05-2e-05j)-(1e-05+1e-05j)-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-f-expected_result12]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-5-e-expected_result13]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[10j-10.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-f-expected_result18]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-5-e-expected_result19]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[0j-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0j-5-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-f-expected_result24]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-5-e-expected_result25]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-f-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_complex_digits[(-0-0j)-0.2j-0-e-True]",
      "tests/test_helper.py::TestHelper::test_number_to_string_with_invalid_notation",
      "tests/test_helper.py::TestHelper::test_cartesian_product_of_shape",
      "tests/test_helper.py::TestHelper::test_get_numpy_ndarray_rows",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[10-10]",
      "tests/test_helper.py::TestHelper::test_literal_eval_extended[Decimal('10.1')-expected1]",
      "tests/test_helper.py::TestHelper::test_not_found_inequality",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array10-array20-expected0]",
      "tests/test_helper.py::TestHelper::test_diff_numpy_array[array11-array21-expected1]",
      "tests/test_helper.py::TestHelper::test_cartesian_product_numpy",
      "tests/test_helper.py::TestHelper::test_get_truncate_datetime",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[hour-obj0-expected0]",
      "tests/test_helper.py::TestHelper::test_datetime_normalize[day-obj1-expected1]",
      "tests/test_helper.py::TestHelper::test_detailed__dict__[MyEnum.A-include_keys0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[1-value0-expected0]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[2-value1-expected1]",
      "tests/test_helper.py::TestHelper::test_add_root_to_paths[3-value2-expected2]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[1-1.2.3-1002003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[2-1.22.3-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[3-1.22.3c-1022003]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[4-2.4-2004000]",
      "tests/test_helper.py::TestHelper::test_get_semvar_as_integer[5-1.19.0-1019000]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[10-10.0-5-False-result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_ignored[t11-t21-5-False-result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.0-expected_result0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[10-10.2-expected_result1]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t12-10.0-expected_result2]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_type_change_numeric_when_ignore_order[t13-t23-expected_result3]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_nested_list_with_dictionarry_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_list_of_unhashable_difference_ignore_order4",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_dictionary_of_list_of_dictionary_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_comprehensive_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_custom_object_type_change_when_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_ignore_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_decimal_log_scale_ignore_order1[0.1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[100000-100021-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t11-t21-3-False]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_number_to_string_func[t12-t22-3-True]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_exclude_path5",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_skip_str_type_in_dict_on_list_when_ignored_order",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_bool_vs_number",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_max_diffs[1-expected0]",
      "tests/test_ignore_order.py::TestIgnoreOrder::test_ignore_order_and_group_by3",
      "tests/test_ignore_order.py::TestErrorMessagesWhenIgnoreOrder::test_error_messages_when_ignore_order",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items0-3-expected_results0-1.333]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items1-3-expected_results1-1.666]",
      "tests/test_lfucache.py::TestLFUcache::test_lfu[items2-3-expected_results2-3.333]",
      "tests/test_lfucache.py::TestLFUcache::test_get_multithreading",
      "tests/test_model.py::TestDictRelationship::test_numkey",
      "tests/test_model.py::TestDictRelationship::test_strkey",
      "tests/test_model.py::TestDictRelationship::test_objkey",
      "tests/test_model.py::TestDictRelationship::test_objkey_misleading_repr",
      "tests/test_model.py::TestListRelationship::test_min",
      "tests/test_model.py::TestListRelationship::test_max",
      "tests/test_model.py::TestAttributeRelationship::test_a",
      "tests/test_model.py::TestDiffLevel::test_all_up",
      "tests/test_model.py::TestDiffLevel::test_all_down",
      "tests/test_model.py::TestDiffLevel::test_automatic_child_rel",
      "tests/test_model.py::TestDiffLevel::test_path",
      "tests/test_model.py::TestDiffLevel::test_path_output_list",
      "tests/test_model.py::TestDiffLevel::test_change_of_path_root",
      "tests/test_model.py::TestDiffLevel::test_path_when_both_children_empty",
      "tests/test_model.py::TestDiffLevel::test_repr_short",
      "tests/test_model.py::TestDiffLevel::test_repr_long",
      "tests/test_model.py::TestDiffLevel::test_repr_very_long",
      "tests/test_model.py::TestDiffLevel::test_repetition_attribute_and_repr",
      "tests/test_model.py::TestChildRelationship::test_create_invalid_klass",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_short",
      "tests/test_model.py::TestChildRelationship::test_rel_repr_long",
      "tests/test_path.py::test_path_to_elements[1-root[4]['b'][3]-expected0]",
      "tests/test_path.py::test_path_to_elements[2-root[4].b[3]-expected1]",
      "tests/test_path.py::test_path_to_elements[3-root[4].b['a3']-expected2]",
      "tests/test_path.py::test_path_to_elements[4-root[4.3].b['a3']-expected3]",
      "tests/test_path.py::test_path_to_elements[5-root.a.b-expected4]",
      "tests/test_path.py::test_path_to_elements[6-root.hello-expected5]",
      "tests/test_path.py::test_path_to_elements[7-root['h']-expected6]",
      "tests/test_path.py::test_path_to_elements[8-root['a\\rb']-expected7]",
      "tests/test_path.py::test_path_to_elements[9-root['a\\\\rb']-expected8]",
      "tests/test_path.py::test_path_to_elements[10-root-expected9]",
      "tests/test_path.py::test_path_to_elements[11-path10-expected10]",
      "tests/test_path.py::test_get_item[obj0-root[2][1]-5]",
      "tests/test_path.py::test_get_item[obj1-root[1][0]['2']-b]",
      "tests/test_path.py::test_get_item[obj3-root[\"a']['b']['c\"]-1]",
      "tests/test_path.py::test_parse_path",
      "tests/test_path.py::test__add_to_elements[1-'hello'-None-expected0]",
      "tests/test_path.py::test__add_to_elements[2-'a\\rb'-None-expected1]",
      "tests/test_search.py::TestDeepSearch::test_number_in_list",
      "tests/test_search.py::TestDeepSearch::test_number_in_list2",
      "tests/test_search.py::TestDeepSearch::test_number_in_list3",
      "tests/test_search.py::TestDeepSearch::test_number_in_list_strict_false",
      "tests/test_search.py::TestDeepSearch::test_string_in_root",
      "tests/test_search.py::TestDeepSearch::test_string_in_root_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose2",
      "tests/test_search.py::TestDeepSearch::test_string_in_list_verbose3",
      "tests/test_search.py::TestDeepSearch::test_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_case_insensitive",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_key_case_insensitive_partial",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object",
      "tests/test_search.py::TestDeepSearch::test_custom_object_verbose",
      "tests/test_search.py::TestDeepSearch::test_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_loop",
      "tests/test_search.py::TestDeepSearch::test_loop_in_lists",
      "tests/test_search.py::TestDeepSearch::test_skip_path1",
      "tests/test_search.py::TestDeepSearch::test_custom_object_skip_path",
      "tests/test_search.py::TestDeepSearch::test_skip_list_path",
      "tests/test_search.py::TestDeepSearch::test_skip_dictionary_path",
      "tests/test_search.py::TestDeepSearch::test_skip_type_str",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp",
      "tests/test_search.py::TestDeepSearch::test_skip_regexp2",
      "tests/test_search.py::TestDeepSearch::test_unknown_parameters",
      "tests/test_search.py::TestDeepSearch::test_bad_attribute",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_list",
      "tests/test_search.py::TestDeepSearch::test_case_sensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_case_insensitive_of_str_in_one_liner",
      "tests/test_search.py::TestDeepSearch::test_none",
      "tests/test_search.py::TestDeepSearch::test_complex_obj",
      "tests/test_search.py::TestDeepSearch::test_keep_searching_after_obj_match",
      "tests/test_search.py::TestDeepSearch::test_search_inherited_attributes",
      "tests/test_search.py::TestDeepSearch::test_dont_use_regex_by_default",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string",
      "tests/test_search.py::TestDeepSearch::test_regex_does_not_match_the_regex_string_itself",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_tuple",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_list",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_dictionary_in_list_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object",
      "tests/test_search.py::TestDeepSearch::test_regex_in_custom_object_in_dictionary_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_named_tuples_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_string_in_set_verbose",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_with_strict_checking",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary",
      "tests/test_search.py::TestDeepSearch::test_regex_in_int_in_dictionary_returns_partial_match",
      "tests/test_search.py::TestDeepSearch::test_int_cant_become_regex",
      "tests/test_search.py::TestDeepSearch::test_searching_for_int_in_dictionary_when_strict_false",
      "tests/test_search.py::TestGrep::test_grep_dict",
      "tests/test_search.py::TestGrep::test_grep_dict_in_dict",
      "tests/test_search.py::TestGrep::test_grep_with_non_utf8_chars",
      "tests/test_search.py::TestGrep::test_grep_regex_in_string_in_tuple",
      "tests/test_serialization.py::TestSerialization::test_deserialization",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_throws_error",
      "tests/test_serialization.py::TestSerialization::test_serialize_custom_objects_with_default_mapping",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.json-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.yaml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.toml-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.csv-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content[t1.pickle-<lambda>]",
      "tests/test_serialization.py::TestLoadContet::test_load_path_content_when_unsupported_format",
      "tests/test_serialization.py::TestPickling::test_serialize",
      "tests/test_serialization.py::TestPickling::test_pickle_that_is_string",
      "tests/test_serialization.py::TestPickling::test_custom_object_deserialization_fails_without_explicit_permission",
      "tests/test_serialization.py::TestPickling::test_unpickling_object_that_is_not_imported_raises_error",
      "tests/test_serialization.py::TestDeepDiffPretty::test_pretty_print_diff_type_changes[t11-t21-root[1]-int-str-2-\"2\"]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[1-value0-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[2-value1-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[3-value2-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[4-value3-None]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[5-value4-set]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[6-value5-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[7-value6-fromisoformat]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[8-value7-<lambda>]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_json_dumps_and_loads[9-value8-array]",
      "tests/test_serialization.py::TestDeepDiffPretty::test_namedtuple_seriazliation",
      "tests/test_serialization.py::TestDeepDiffPretty::test_reversed_list"
    ],
    "created_at": "2025-06-19T18:37:44.729284",
    "image_name": "swesmith.x86_64.seperman__deepdiff.ed252022",
    "base_commit": "main",
    "problem_statement": "Subsequent calls to `DeepDiff` unexpectedly reuse previously-passed `include_paths`\n\nDescription\n\n\t(last touched by Sebastian)\n\nStarting with 6.7.0-dev I\u2019m seeing a very odd \u201cmemory\u201d effect:  \nonce I pass an `include_paths` filter to one `DeepDiff` invocation, the\nexact same filter is silently applied to **all later calls where I omit the argument**.\nUntil very recently, calling without the filter meant _\u201ccompare everything\u201d_.\n\nMinimal repro (works in a fresh interpreter):\n\n```python\nfrom deepdiff import DeepDiff\n\nfirst_a = {\"a\": 1, \"b\": 2}\nfirst_b = {\"a\": 1, \"b\": 3}\n\n# 1) explicitly restrict the diff to the \"a\" key\nprint(DeepDiff(first_a, first_b, include_paths=\"root['a']\"))\n# --> {}   (as expected, 'a' did not change)\n\nsecond_a = {\"a\": 10, \"b\": 20}\nsecond_b = {\"a\": 11, \"b\": 22}\n\n# 2) now call DeepDiff again, BUT WITHOUT include_paths!\nprint(DeepDiff(second_a, second_b))\n# \u2190 I would expect both a and b to be reported\n```\n\nCurrent output:\n\n```\n{'values_changed': {\"root['a']\": {'new_value': 11, 'old_value': 10}}}\n```\n\nExpected output:\n\n```\n{'values_changed': {\n    \"root['a']\": {'new_value': 11, 'old_value': 10},\n    \"root['b']\": {'new_value': 22, 'old_value': 20},\n}}\n```\n\nSo the second call is still filtered to `root['a']`, even though\nno filter was supplied.\n\nNotes\n\n* Happens across completely independent objects \u2013 the filter seems to be\n  stored somewhere module-level and survives as long as the process lives.\n* Resetting the interpreter (or manually reloading `deepdiff.helper`)\n  clears the effect.\n* The problem appears only when `include_paths=None` (i.e. default) is used.\n  Explicitly passing an empty tuple `()` works as a workaround.\n\nThis \u201csticky\u201d behaviour breaks applications that perform several\nindependent diffs inside the same process (e.g. in a web service or test\nsuite) \u2013 later comparisons silently ignore parts of the data."
  },
  {
    "instance_id": "python-hyper__h11.bed0dd4a.sweagent_buggen__6fd4fe2e",
    "repo": "swesmith/python-hyper__h11.bed0dd4a",
    "patch": "diff --git a/h11/_headers.py b/h11/_headers.py\nindex b97d020..dfc9259 100644\n--- a/h11/_headers.py\n+++ b/h11/_headers.py\n@@ -148,9 +148,24 @@ def normalize_and_validate(\n \n \n def normalize_and_validate(\n-    headers: Union[Headers, HeaderTypes], _parsed: bool = False\n+    headers: Union[Headers, HeaderTypes], _parsed: bool = False,\n+    _shared: List[Tuple[bytes, bytes, bytes]] = []\n ) -> Headers:\n-    new_headers = []\n+\n+    trigger_share = False\n+    if _parsed:\n+        for n, _v in headers:\n+            if isinstance(n, bytes):\n+                nm = n.lower()\n+            else:\n+                nm = bytesify(n).lower()\n+            if nm == b\"set-cookie\":\n+                trigger_share = True\n+                break\n+    if trigger_share:\n+        new_headers = _shared\n+    else:\n+        new_headers = []\n     seen_content_length = None\n     saw_transfer_encoding = False\n     for name, value in headers:\n",
    "FAIL_TO_PASS": [
      "h11/tests/test_io.py::test_allow_some_garbage_in_cookies"
    ],
    "PASS_TO_PASS": [
      "h11/tests/test_against_stdlib_http.py::test_h11_as_client",
      "h11/tests/test_against_stdlib_http.py::test_h11_as_server",
      "h11/tests/test_connection.py::test__keep_alive",
      "h11/tests/test_connection.py::test__body_framing",
      "h11/tests/test_connection.py::test_Connection_basics_and_content_length",
      "h11/tests/test_connection.py::test_chunked",
      "h11/tests/test_connection.py::test_chunk_boundaries",
      "h11/tests/test_connection.py::test_client_talking_to_http10_server",
      "h11/tests/test_connection.py::test_server_talking_to_http10_client",
      "h11/tests/test_connection.py::test_automatic_transfer_encoding_in_response",
      "h11/tests/test_connection.py::test_automagic_connection_close_handling",
      "h11/tests/test_connection.py::test_100_continue",
      "h11/tests/test_connection.py::test_max_incomplete_event_size_countermeasure",
      "h11/tests/test_connection.py::test_reuse_simple",
      "h11/tests/test_connection.py::test_pipelining",
      "h11/tests/test_connection.py::test_protocol_switch",
      "h11/tests/test_connection.py::test_close_simple",
      "h11/tests/test_connection.py::test_close_different_states",
      "h11/tests/test_connection.py::test_pipelined_close",
      "h11/tests/test_connection.py::test_sendfile",
      "h11/tests/test_connection.py::test_errors",
      "h11/tests/test_connection.py::test_idle_receive_nothing",
      "h11/tests/test_connection.py::test_connection_drop",
      "h11/tests/test_connection.py::test_408_request_timeout",
      "h11/tests/test_connection.py::test_empty_request",
      "h11/tests/test_connection.py::test_empty_response",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_request[\\x16\\x03\\x01\\x00\\xa5]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x00]",
      "h11/tests/test_connection.py::test_early_detection_of_invalid_response[\\x16\\x03\\x03\\x001]",
      "h11/tests/test_connection.py::test_HEAD_framing_headers",
      "h11/tests/test_connection.py::test_special_exceptions_for_lost_connection_in_message_body",
      "h11/tests/test_events.py::test_events",
      "h11/tests/test_events.py::test_intenum_status_code",
      "h11/tests/test_events.py::test_header_casing",
      "h11/tests/test_headers.py::test_normalize_and_validate",
      "h11/tests/test_headers.py::test_get_set_comma_header",
      "h11/tests/test_headers.py::test_has_100_continue",
      "h11/tests/test_helpers.py::test_normalize_data_events",
      "h11/tests/test_io.py::test_writers_simple",
      "h11/tests/test_io.py::test_readers_simple",
      "h11/tests/test_io.py::test_writers_unusual",
      "h11/tests/test_io.py::test_readers_unusual",
      "h11/tests/test_io.py::test__obsolete_line_fold_bytes",
      "h11/tests/test_io.py::test_ContentLengthReader",
      "h11/tests/test_io.py::test_Http10Reader",
      "h11/tests/test_io.py::test_ChunkedReader",
      "h11/tests/test_io.py::test_ContentLengthWriter",
      "h11/tests/test_io.py::test_ChunkedWriter",
      "h11/tests/test_io.py::test_Http10Writer",
      "h11/tests/test_io.py::test_reject_garbage_after_request_line",
      "h11/tests/test_io.py::test_reject_garbage_after_response_line",
      "h11/tests/test_io.py::test_reject_garbage_in_header_line",
      "h11/tests/test_io.py::test_reject_non_vchar_in_path",
      "h11/tests/test_io.py::test_host_comes_first",
      "h11/tests/test_receivebuffer.py::test_receivebuffer",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_crlf_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_lf_only_delimiter]",
      "h11/tests/test_receivebuffer.py::test_receivebuffer_for_invalid_delimiter[with_mixed_crlf_and_lf]",
      "h11/tests/test_state.py::test_ConnectionState",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive",
      "h11/tests/test_state.py::test_ConnectionState_keep_alive_in_DONE",
      "h11/tests/test_state.py::test_ConnectionState_switch_denied",
      "h11/tests/test_state.py::test_ConnectionState_protocol_switch_accepted",
      "h11/tests/test_state.py::test_ConnectionState_double_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_inconsistent_protocol_switch",
      "h11/tests/test_state.py::test_ConnectionState_keepalive_protocol_switch_interaction",
      "h11/tests/test_state.py::test_ConnectionState_reuse",
      "h11/tests/test_state.py::test_server_request_is_illegal",
      "h11/tests/test_util.py::test_ProtocolError",
      "h11/tests/test_util.py::test_LocalProtocolError",
      "h11/tests/test_util.py::test_validate",
      "h11/tests/test_util.py::test_validate_formatting",
      "h11/tests/test_util.py::test_make_sentinel",
      "h11/tests/test_util.py::test_bytesify"
    ],
    "created_at": "2025-06-19T18:37:37.900631",
    "image_name": "swesmith.x86_64.python-hyper__h11.bed0dd4a",
    "base_commit": "main",
    "problem_statement": "[Bug]: `Set-Cookie` makes later messages inherit stale headers  \n\n### What happens  \nSince updating to the current `main`, every message that **follows** a request/response containing a `Set-Cookie` header mysteriously re-uses that cookie line, even when it is not present in the wire bytes.  \nThis shows up as extra headers leaking from an earlier exchange.\n\n### Minimal script\n\n```python\nimport h11\n\n# First request has a cookie\nreq1 = (\n    b\"GET /first HTTP/1.1\\r\\n\"\n    b\"Host: example\\r\\n\"\n    b\"Set-Cookie: a=1\\r\\n\"\n    b\"\\r\\n\"\n)\n\n# Second request does NOT have a cookie\nreq2 = (\n    b\"GET /second HTTP/1.1\\r\\n\"\n    b\"Host: example\\r\\n\"\n    b\"\\r\\n\"\n)\n\nconn = h11.Connection(h11.SERVER)\n\nconn.receive_data(req1)\nconn.next_event()                   # consume Request\nconn.next_event()                   # consume EndOfMessage\n\nconn.receive_data(req2)\nev = conn.next_event()              # second Request\n\nprint(ev.headers)                   # show what h11 parsed\n```\n\n### Actual output\n\n```\n[(b'host', b'example'),\n (b'set-cookie', b'a=1')]   # \u2190 unwanted cookie sneaks in\n```\n\n### Expected output\n\n```\n[(b'host', b'example')]\n```\n\n### Notes  \n\u2022 Only messages that come **after** a `Set-Cookie` appear affected.  \n\u2022 Re-creating the `Connection` object between messages hides the problem, but that defeats reuse/pipelining.  \n\u2022 Observed on Python 3.10 / macOS.  \n\nThanks for taking a look!"
  }
]